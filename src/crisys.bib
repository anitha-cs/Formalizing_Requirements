
\newcommand{\commentjeff}[1]{\crisyscomment{Jeff Thompson}{#1}}
\newcommand{\commentyunja}[1]{\crisyscomment{Yunja Choi}{#1}}
\newcommand{\commentmike}[1]{\crisyscomment{Mike Whalen}{#1}}
\newcommand{\commenteric}[1]{\crisyscomment{Eric Engstrom}{#1}}
\newcommand{\commentmats}[1]{\crisyscomment{Mats Heimdahl}{#1}}
\newcommand{\commentdan}[1]{\crisyscomment{Dan O'Brien}{#1}}
\newcommand{\commentanjali}[1]{\crisyscomment{Anjali Joshi}{#1}}
\newcommand{\commentget}[1]{\crisyscomment{{\sc Do Not Have}}{#1}}
\newcommand{\jefftoread}[0]{\crisyscomment{JeffThompson}{To read.}}
\newcommand{\miketoread}[0]{\crisyscomment{Mike Whalen}{To read.}}
\newcommand{\sanjaitoread}[0]{\crisyscomment{Sanjai Rayadurgam}{To read.}}
\newcommand{\commentpark}[1]{\crisyscomment{Myung-Hwan Park}{#1}}

@string{TransSE = "IEEE Transactions on Software Engineering"}
@string{transse = "IEEE Transactions on Software Engineering"}
@string{tse = "IEEE Transactions on Software Engineering"}
@string{software = "{IEEE} Software"}
@string{computer = "{IEEE} Computer"}
@string{csoc = "{IEEE} Computer Society"}

%%%
% Compositional Reasoning - HILT related
%%%

@Misc{SPEEDS,
   organization = "European Union 6th Framework Project in Embedded Systems Development",
   title = {{SPE}culative and {E}xporatory {D}esign in {S}ystem engineering},
   howpublished = {http://www.speeds.eu.com/},
   year={2006-2009},
   key = {SPEEDS-EU}
}


@incollection{CSDD10:TrainTrackingSLDV,
year={2010},
isbn={978-3-642-15653-3},
booktitle={Complex Systems Design \& Management},
editor={Aiguier, Marc and Bretaudeau, Francis and Krob, Daniel},
doi={10.1007/978-3-642-15654-0_4},
title={Using Simulink Design Verifier for Proving Behavioral Properties on a Complex Safety Critical System in the Ground Transportation Domain},
url={http://dx.doi.org/10.1007/978-3-642-15654-0_4},
publisher={Springer Berlin Heidelberg},
author={Etienne, J.-F. and Fechter, S. and Juppeaux, E.},
pages={61-72}
}


@inproceedings{Cobleigh06:DecompIsHard,
 author = {Cobleigh, Jamieson M. and Avrunin, George S. and Clarke, Lori A.},
 title = {Breaking up is hard to do: an investigation of decomposition for assume-guarantee reasoning},
 booktitle = {Proceedings of the 2006 Int'l symposium on Software testing and analysis},
 series = {ISSTA '06},
 year = {2006},
 isbn = {1-59593-263-1},
 location = {Portland, Maine, USA},
 pages = {97--108},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1146238.1146250},
 doi = {10.1145/1146238.1146250},
 acmid = {1146250},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {assume-guarantee reasoning},
}

@INPROCEEDINGS{Hagen:FMCAD08:LustreVerif,
author={Hagen, G. and Tinelli, C.},
booktitle={Formal Methods in Computer-Aided Design, 2008. FMCAD '08},
title={Scaling Up the Formal Verification of Lustre Programs with SMT-Based Techniques},
year={2008},
pages={1-9},
keywords={computability;parallel programming;program verification;Lustre program;Lustre semantics;SAT-based k-induction;SMT-based technique;abstraction technique;first-order logic;formal verification;safety property;satisfiability modulo theory;Arithmetic;Computer science;Embedded system;Formal verification;Logic;Manufacturing industries;Safety;Software tools;Specification languages;Surface-mount technology},
doi={10.1109/FMCAD.2008.ECP.19},
}


@INPROCEEDINGS{Clarke89:CompMC,
author={Clarke, E.M. and Long, D.E. and McMillan, K. L.},
booktitle={Logic in Computer Science, 1989. LICS '89, Proceedings., Fourth Annual Symposium on},
title={Compositional model checking},
year={1989},
pages={353-362},
keywords={formal logic;parallel processing;CTL;complexity;compositional model checking;compositional systems;global properties;interface processes;local properties;parallel processes;temporal logic model checking;Asynchronous circuits;Automata;Calculus;Carbon capture and storage;Computer science;Explosions;Logic circuits;Logic programming;Merging;Parallel programming},
doi={10.1109/LICS.1989.39190},
}

@ARTICLE{BIPFramework:Software11,
author={Basu, A. and Bensalem, S. and Bozga, M. and Combaz, J. and Jaber, M. and Thanh-Hung Nguyen and Sifakis, J.},
journal={Software, IEEE},
title={Rigorous Component-Based System Design Using the {BIP} Framework},
year={2011},
volume={28},
number={3},
pages={41-48},
keywords={control engineering computing;mobile robots;object-oriented programming;systems analysis;BIP component framework;autonomous robot;behavior-interaction-priority component;rigorous component-based system design;semantic model;system design property;Adaptation model;Application software;Programming;Semantics;Synchronization;System analysis and design;autonomous robots;code generation;component-based design;correctness;deadlock-freedom;design flow;invariant generation;model transformation;model-based design},
doi={10.1109/MS.2011.27},
ISSN={0740-7459},
}

@article{deAlfaro01:InterfaceAutomata,
 author = {de Alfaro, Luca and Henzinger, Thomas A.},
 title = {Interface automata},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {Sept. 2001},
 volume = {26},
 number = {5},
 month = sep,
 year = {2001},
 issn = {0163-5948},
 pages = {109--120},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/503271.503226},
 doi = {10.1145/503271.503226},
 acmid = {503226},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Lynch87:IOAutomata,
 author = {Lynch, Nancy A. and Tuttle, Mark R.},
 title = {Hierarchical correctness proofs for distributed algorithms},
 booktitle = {Proceedings of the sixth annual ACM Symposium on Principles of distributed computing},
 series = {PODC '87},
 year = {1987},
 isbn = {0-89791-239-X},
 location = {Vancouver, British Columbia, Canada},
 pages = {137--151},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/41840.41852},
 doi = {10.1145/41840.41852},
 acmid = {41852},
 publisher = {ACM},
 address = {New York, NY, USA},
}
[

@inproceedings{Harel11:MCforBP,
 author = {Harel, David and Lampert, Robby and Marron, Assaf and Weiss, Gera},
 title = {Model-checking behavioral programs},
 booktitle = {Proceedings of the ninth ACM Int'l Conf. on Embedded software},
 series = {EMSOFT '11},
 year = {2011},
 isbn = {978-1-4503-0714-7},
 location = {Taipei, Taiwan},
 pages = {279--288},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2038642.2038686},
 doi = {10.1145/2038642.2038686},
 acmid = {2038686},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {behavioral programming, java},
}


@incollection{Pnueli85:ModularReasoning,year={1985},
	isbn={978-3-642-82455-5},
	booktitle={Logics and Models of Concurrent Systems},
	volume={13},
	series={NATO ASI Series},
	editor={Apt, KrzysztofR.},
	doi={10.1007/978-3-642-82453-1_5},
	title={In Transition From Global to Modular Temporal Reasoning about Programs},
	url={http://dx.doi.org/10.1007/978-3-642-82453-1_5},
	publisher={Springer Berlin Heidelberg},
	author={Pnueli, Amir},
	pages={123-144},
	language={English},
	annote={\sanjaitoread}
}

@article{Jones83:InterferingPrograms,
	 author = {Jones, C. B.},
	 title = {Tentative steps toward a development method for interfering programs},
	 journal = {ACM Trans. Program. Lang. Syst.},
	 issue_date = {Oct. 1983},
	 volume = {5},
	 number = {4},
	 month = oct,
	 year = {1983},
	 issn = {0164-0925},
	 pages = {596--619},
	 numpages = {24},
	 url = {http://doi.acm.org/10.1145/69575.69577},
	 doi = {10.1145/69575.69577},
	 acmid = {69577},
	 publisher = {ACM},
	 address = {New York, NY, USA},
	 annote={\sanjaitoread}
}

@ARTICLE{Misra81:ProofsNetworks,
author={Misra, J. and Chandy, K.M.},
journal={Software Engineering, IEEE Transactions on},
title={Proofs of Networks of Processes},
year={1981},
volume={SE-7},
number={4},
pages={417-426},
keywords={Communication networks;distributed systems;message passing systems;program proofs;Computer languages;Computer networks;Message passing;System performance;Communication networks;distributed systems;message passing systems;program proofs},
doi={10.1109/TSE.1981.230844},
ISSN={0098-5589},}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Planning Systems V&V
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


@inproceedings{Belli92:pro-test,
  title={PROTest II, Testing Logic Programs},
  author={Belli, Fevzi and Jack, Oliver},
  booktitle={Proceedings 2nd Int'l Conf. on Software Quality, Research Triangle Park, NC},
  pages={128--135},
  year={1992}
}

@inproceedings{Belli93:prolog-testing-ISSTA,
 author = {Belli, B. and Jack, O.},
 title = {Implementation-based analysis and testing of Prolog programs},
 booktitle = {Proceedings of the 1993 ACM SIGSOFT Int'l symposium on Software testing and analysis},
 series = {ISSTA '93},
 year = {1993},
 isbn = {0-89791-608-5},
 location = {Cambridge, Massachusetts, USA},
 pages = {70--80},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/154183.154203},
 doi = {10.1145/154183.154203},
 acmid = {154203},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{Zhao07:prolog-testing,
year={2007},
isbn={978-3-540-76636-0},
booktitle={Programming Languages and Systems},
volume={4807},
series={Lecture Notes in Computer Science},
editor={Shao, Zhong},
doi={10.1007/978-3-540-76637-7_8},
title={A Novel Test Case Generation Method for Prolog Programs Based on Call Patterns Semantics},
url={http://dx.doi.org/10.1007/978-3-540-76637-7_8},
publisher={Springer Berlin Heidelberg},
author={Zhao, Lingzhong and Gu, Tianlong and Qian, Junyan and Cai, Guoyong},
pages={105-121}
}


@INPROCEEDINGS{Brat2005:AutonomyVnVChallenges,
author={Brat, G. and Jonsson, A.},
booktitle={Neural Networks, 2005. IJCNN '05. Proceedings. 2005 IEEE Int'l Joint Conf. on},
title={Challenges in verification and validation of autonomous systems for space exploration},
year={2005},
volume={5},
pages={2909-2914 vol. 5},
keywords={aerospace computing;space research;autonomous system;space exploration;space mission;Communication system control;Costs;Humans;Mars;Moon;Planets;Space exploration;Space missions;Space technology;Space vehicles},
doi={10.1109/IJCNN.2005.1556387},
}

@INPROCEEDINGS{Long09:PlanningVnV,
	author    = {Derek Long and Maria Fox and Richard Howey},
	title     = {Planning Domains and Plans: Validation, Verification and Analysis},
	booktitle = {Workshop on Verification and Validation of Planning and Scheduling Systems
	             at the 19th Int'l Conf. on Automated Planning and Scheduling},
	year      = 2009,
	annote    = {\sanjaitoread}
}

@INPROCEEDINGS{Frank11:Challenge,
	author    = {Frank, J.D and Clement, Bradley J and Chachere, John M and Smith, Tristan B and Swanson, Keith},
	title     = {{The Challenge of Configuring Model-Based Space Mission Planners}},
	booktitle = {Int'l Workshop on Planning and Scheduling for Space},
	year      = 2011,
	annote    = {\sanjaitoread}
}


@INPROCEEDINGS{Raimondi09:PDVer,
	author    = {Franco Raimondi and Charles Pecheur and Guillaume Brat},
	title     = {PDVer, a Tool to Verify PDDL Planning Domains},
	booktitle = {Workshop on Verification and Validation of Planning and Scheduling Systems
	             at the 19th Int'l Conf. on Automated Planning and Scheduling},
	year      = 2009,
	annote    = {\sanjaitoread}
}

@INPROCEEDINGS{Brat09:ProcMBVnV,
	author    = {Guillaume Brat and Dimitra Giannakopoulou and Michel Izygon and Emmy Alex and Lui Wang and Jeremy Frank and Arthur Molin},
	title     = {Model-Based Verification and Validation for Procedure Authoring},
	booktitle = {Workshop on Verification and Validation of Planning and Scheduling Systems
				 at the 19th Int'l Conf. on Automated Planning and Scheduling},
	year      = 2009,
	annote    = {\sanjaitoread}
}

@inproceedings{DBLP:conf/mochart/HavelundGHJS08,
  author    = {Klaus Havelund and
               Alex Groce and
               Gerard J. Holzmann and
               Rajeev Joshi and
               Margaret H. Smith},
  title     = {Automated Testing of Planning Models},
  booktitle = {MoChArt},
  year      = {2008},
  pages     = {90-105},
  ee        = {http://dx.doi.org/10.1007/978-3-642-00431-5_6},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote    = {\sanjaitoread}
}

@article{DBLP:journals/entcs/RaimondiPB07,
  author    = {Franco Raimondi and
               Charles Pecheur and
               Guillaume Brat},
  title     = {Testing Planning Domains (without Model Checkers)},
  journal   = {Electr. Notes Theor. Comput. Sci.},
  volume    = {190},
  number    = {2},
  year      = {2007},
  pages     = {113-125},
  ee        = {http://dx.doi.org/10.1016/j.entcs.2007.08.011},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{DBLP:journals/ker/CestaFFOT10,
  author    = {Amedeo Cesta and
               Alberto Finzi and
               Simone Fratini and
               Andrea Orlandini and
               Enrico Tronci},
   title     = {Validation and verification issues in a timeline-based planning systems},
  journal   = {Knowledge Engineering Review},
  volume    = {25},
  number    = {3},
  year      = {2010},
  pages     = {299-318},
  ee        = {http://dx.doi.org/10.1017/S0269888910000160},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@inproceedings{Schumann06:AutonomyVnVChallenges,
  author    = {Johann Schumann and Willem Visser},
  title     = {Autonomy Software: {V}\&{V} Challenges and Characteristics},
  booktitle = {Proceedings of Aerospace Conf.},
  year      = {2006},
  annote    = {\sanjaitoread}
}

@INPROCEEDINGS{Penix98usingmodel,
    author = {John Penix and Charles Pecheur and Klaus Havelund},
    title = {{Using Model Checking to Validate AI Planner Domain Models}},
    booktitle = {In the Proceedings of the 23rd Annual Software Engineering Workshop},
    year = {1998},
    annote= {\sanjaitoread}
}

%%% planning domain description languages

@INPROCEEDINGS{Sherwood98:Aspen,
author={Sherwood, R. and Govindjee, A. and Yan, D. and Rabideau, G. and Chien, S. and Fukunaga, A.},
booktitle={Aerospace Conf., 1998 IEEE},
title={Using ASPEN to automate EO-1 activity planning},
year={1998},
volume={3},
pages={145-152 vol.3},
keywords={aerospace computing;artificial satellites;object-oriented languages;planning;scheduling;ASPEN;EO-1 activity planning;EO-1 spacecraft operations;NASA Earth Orbiting 1 mission;automated planning;end-to-end planning;modeling language;operations constraints;planning system;scheduling;software model;Application software;Artificial intelligence;Costs;Earth;Laboratories;Object oriented modeling;Propulsion;Satellites;Space vehicles;Thermal management},
doi={10.1109/AERO.1998.685789},
ISSN={1095-323X},}

@article{FoxLong11:PDDL2.1,
  author    = {Maria Fox and
               Derek Long},
  title     = {PDDL2.1: An Extension to PDDL for Expressing Temporal Planning
               Domains},
  journal   = {CoRR},
  volume    = {abs/1106.4561},
  year      = {2011},
  ee        = {http://arxiv.org/abs/1106.4561},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@TECHREPORT{Butler06:APPL,
    author = {Ricky W. Butler and C�sar A. Munoz},
    title = {{An Abstract Plan Preparation Language}},
    institution = {NASA Langley Research Center},
    number = "NASA/TM-2006-214518",
    year = {2006}
}

@inproceedings{Smith_theanml,
    author = {David E. Smith and Jeremy Frank and William Cushing},
    title = {The {ANML} Language},
    booktitle = {Workshop on Knowledge Engineering in Planning and Scheduling at the 18th Int'l Conf. on Automated Planning and Scheduling},
    year = {2008}
}

@ARTICLE{Bedrax-Weiss05europa2:user,
    author = {Tania Bedrax-Weiss and Conor McGann and Andrew Bachmann and Will Edgington and Michael Iatauro},
    title = {EUROPA2: User and contributor guide},
    journal = {NASA AMES RESEARCH CENTER, TECH. REP},
    year = {2005}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Misc by Greg to be sorted later. Mostly testing
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@inproceedings{Keenan12:Tracelab,
 author = {Keenan, Ed and Czauderna, Adam and Leach, Greg and Cleland-Huang, Jane and Shin, Yonghee and Moritz, Evan and Gethers, Malcom and Poshyvanyk, Denys and Maletic, Jonathan and Huffman Hayes, Jane and Dekhtyar, Alex and Manukian, Daria and Hossein, Shervin and Hearn, Derek},
 title = {TraceLab: An Experimental Workbench for Equipping Researchers to Innovate, Synthesize, and Comparatively Evaluate Traceability Solutions},
 booktitle = {Proceedings of the 34th International Conference on Software Engineering},
 series = {ICSE '12},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {1375--1378},
 numpages = {4},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337422},
 acmid = {2337422},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@inproceedings{Whalen15:flexible,
  title={A flexible and non-intrusive approach for computing complex structural coverage metrics},
  author={Whalen, Michael W and Person, Suzette and Rungta, Neha and Staats, Matt and Grijincu, Daniela},
  booktitle={Proceedings of the 37th International Conference on Software Engineering-Volume 1},
  pages={506--516},
  year={2015},
  organization={IEEE Press}
}

@article{Yang09:Coverage,
  title={A survey of coverage-based testing tools},
  author={Yang, Qian and Li, J Jenny and Weiss, David M},
  journal={The Computer Journal},
  volume={52},
  number={5},
  pages={589--597},
  year={2009},
  publisher={Br Computer Soc}
}

@article{Arcuri13:Normalize,
  title={It really does matter how you normalize the branch distance in search-based software testing},
  author={Arcuri, Andrea},
  journal={Software Testing, Verification and Reliability},
  volume={23},
  number={2},
  pages={119--147},
  year={2013},
  publisher={Wiley Online Library}
}

@ARTICLE{Fraser13:SuiteGen,
author={Fraser, G. and Arcuri, A.},
journal={Software Engineering, IEEE Transactions on},
title={Whole Test Suite Generation},
year={2013},
volume={39},
number={2},
pages={276-291},
keywords={formal specification;program debugging;program testing;EvoSuite tool;code coverage;formal specification;program crashes;program debugging;software testing;whole test suite generation;Arrays;Genetic algorithms;Genetic programming;Search problems;Software;Software testing;Search-based software engineering;branch coverage;collateral coverage;genetic algorithm;infeasible goal;length},
doi={10.1109/TSE.2012.14},
ISSN={0098-5589},
month={Feb},}

@ARTICLE{Deb02:NSGAII,
author={Deb, K. and Pratap, A. and Agarwal, S. and Meyarivan, T.},
journal={Evolutionary Computation, IEEE Transactions on},
title={A fast and elitist multiobjective genetic algorithm: NSGA-II},
year={2002},
volume={6},
number={2},
pages={182-197},
keywords={Pareto distribution;computational complexity;constraint theory;convergence;genetic algorithms;operations research;simulation;sorting;NSGA-II;Nondominated Sorting Genetic Algorithm II;Pareto-archived evolution strategy;Pareto-optimal front;algorithm performance;computational complexity;constrained multi-objective problems;constraint handling;convergence;dominance definition;fast elitist multi-objective genetic algorithm;mating pool;multi-criterion decision making;multi-objective evolutionary algorithm;multi-objective optimization;nondominated sharing;nonlinear problem;objectives;parent/offspring population combination;population size;selection operator;simulation;solution fitness;solution spread;strength-Pareto evolutionary algorithm;Associate members;Computational complexity;Computational modeling;Constraint optimization;Decision making;Diversity reception;Evolutionary computation;Genetic algorithms;Sorting;Testing},
doi={10.1109/4235.996017},
ISSN={1089-778X},
month={Apr},}

@inproceedings{Malburg11:SBDSE,
 author = {Malburg, Jan and Fraser, Gordon},
 title = {Combining Search-based and Constraint-based Testing},
 booktitle = {Proceedings of the 2011 26th IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE '11},
 year = {2011},
 isbn = {978-1-4577-1638-6},
 pages = {436--439},
 numpages = {4},
 url = {http://dx.doi.org/10.1109/ASE.2011.6100092},
 doi = {10.1109/ASE.2011.6100092},
 acmid = {2190094},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}


@inproceedings{Ghani09:SBMCDC,
 author = {Ghani, Kamran and Clark, John A.},
 title = {Automatic Test Data Generation for Multiple Condition and MCDC Coverage},
 booktitle = {Proceedings of the 2009 Fourth International Conference on Software Engineering Advances},
 series = {ICSEA '09},
 year = {2009},
 isbn = {978-0-7695-3777-1},
 pages = {152--157},
 numpages = {6},
 url = {http://dx.doi.org/10.1109/ICSEA.2009.31},
 doi = {10.1109/ICSEA.2009.31},
 acmid = {1679997},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Software testing, Search Based Test Data Generation, MCDC coverage},
}

@inproceedings{Panichella15:Branch,
  title={Reformulating Branch Coverage as a Many-Objective Optimization Problem},
  author={Panichella, Annibale and Kifetew, Fitsum Meshesha and Tonella, Paolo},
  booktitle={Software Testing, Verification and Validation (ICST), 2015 IEEE 8th International Conference on},
  pages={1--10},
  year={2015},
  organization={IEEE}
}

@INPROCEEDINGS{Feldt15:GA,
author={Feldt, Robert and Poulding, Simon},
booktitle={Search-Based Software Testing (SBST), 2015 IEEE/ACM 8th International Workshop on},
title={Broadening the Search in Search-Based Software Testing: It Need Not Be Evolutionary},
year={2015},
pages={1-7},
keywords={Generators;Libraries;Machine learning algorithms;Monte Carlo methods;Optimization;Search problems;Testing;Machine learning;Operations research;Reinforcement learning;Search-based software testing},
doi={10.1109/SBST.2015.8},
month={May},}

@article{dorigo1997ant,
  title={Ant colony system: a cooperative learning approach to the traveling salesman problem},
  author={Dorigo, Marco and Gambardella, Luca Maria},
  journal={Evolutionary Computation, IEEE Transactions on},
  volume={1},
  number={1},
  pages={53--66},
  year={1997},
  publisher={IEEE}
}

@book{john1992adaptation,
  title={Adaptation in natural and artificial systems: an introductory analysis with applications to biology, control, and artificial intelligence},
  author={John Henry Holland},
  year={1992},
  publisher={MIT press}
}

@article{Bianchi09:Optimization,
year={2009},
issn={1567-7818},
journal={Natural Computing},
volume={8},
number={2},
doi={10.1007/s11047-008-9098-4},
title={A survey on metaheuristics for stochastic combinatorial optimization},
url={http://dx.doi.org/10.1007/s11047-008-9098-4},
publisher={Springer Netherlands},
keywords={Metaheuristics; Optimization; Stochasticity; Uncertainty; Noise; Probability; Sampling; Approximations},
author={Bianchi, Leonora and Dorigo, Marco and Gambardella, LucaMaria and Gutjahr, WalterJ.},
pages={239-287},
language={English}
}

@inproceedings{Gligoric13:nonadequate,
 author = {Gligoric, Milos and Groce, Alex and Zhang, Chaoqiang and Sharma, Rohan and Alipour, Mohammad Amin and Marinov, Darko},
 title = {Comparing Non-adequate Test Suites Using Coverage Criteria},
 booktitle = {Proceedings of the 2013 International Symposium on Software Testing and Analysis},
 series = {ISSTA 2013},
 year = {2013},
 isbn = {978-1-4503-2159-4},
 location = {Lugano, Switzerland},
 pages = {302--313},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2483760.2483769},
 doi = {10.1145/2483760.2483769},
 acmid = {2483769},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coverage criteria, non-adequate test suites},
}

@inproceedings{Just14:mutation,
   author = {Ren{\'e} Just and Darioush Jalali and Laura Inozemtseva and
	Michael D. Ernst and Reid Holmes and Gordon Fraser},
   title = {Are mutants a valid substitute for real faults in software
	testing?},
   booktitle = {FSE 2014, Proceedings of the {ACM} {SIGSOFT} 22nd
	Symposium on the Foundations of Software Engineering},
   pages = {654-665},
   address = {Hong Kong},
   month = {November~18--20,},
   year = {2014}
}

@PhdThesis{Gay15:Dissertation,
  author =   {Gregory Gay},
  title =    {Automated Steering of Model-Based Test Oracles to Admit Real Program Behaviors},
  school =   {University of Minnesota},
  year =     {2015},
  month =    {May}
}

@INPROCEEDINGS{Schuler11:CheckedCov,
  author={Schuler, D. and Zeller, A.},
  booktitle={Software Testing, Verification and Validation (ICST), 2011 IEEE
Fourth International Conference on},
  title={Assessing Oracle Quality with
Checked Coverage}, year={2011}, pages={90-99},
  keywords={program slicing;program testing;software metrics;software quality;assessing oracle quality;checked coverage;coverage metrics;covered statements;dynamic
slice;mutation testing;open-source
projects;Focusing;Java;Libraries;Measurement;Open source
software;Testing;coverage metrics;dynamic slicing;mutation testing;test suite
quality},
  doi={10.1109/ICST.2011.32},
  month={March} }

@ARTICLE{Gay15:oracleselection, author={Gay, G. and Staats, M. and Whalen, M.
and Heimdahl, M.}, journal={Software Engineering, IEEE Transactions on},
title={Automated Oracle Data Selection Support}, year={2015}, month={},
volume={PP}, number={99}, pages={1-1}, keywords={Aerospace
electronics;Computer crashes;Electronic
mail;Monitoring;Software;Testing;Training;Oracle Data;Oracle Selection;Test
Oracles;Testing;Verification}, doi={10.1109/TSE.2015.2436920},
ISSN={0098-5589},}


@inproceedings{Gligoric13:Coverage,
 author = {Gligoric, Milos and Groce, Alex and Zhang, Chaoqiang and Sharma, Rohan and Alipour, Mohammad Amin and Marinov, Darko},
 title = {Comparing Non-adequate Test Suites Using Coverage Criteria},
 booktitle = {Proceedings of the 2013 International Symposium on Software Testing and Analysis},
 series = {ISSTA 2013},
 year = {2013},
 isbn = {978-1-4503-2159-4},
 location = {Lugano, Switzerland},
 pages = {302--313},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2483760.2483769},
 doi = {10.1145/2483760.2483769},
 acmid = {2483769},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coverage criteria, non-adequate test suites},
}


@inproceedings{gargantini13:aurora,
  title={AURORA: AUtomatic RObustness coveRage Analysis Tool},
  author={Gargantini, Angelo and Guarnieri, Massimo and Magri, Eros},
  booktitle={Software Testing, Verification and Validation (ICST), 2013 IEEE Sixth International Conference on},
  pages={463--470},
  year={2013},
  organization={IEEE}
}

@inproceedings{Groce14:coverage,
 author = {Groce, Alex and Alipour, Mohammad Amin and Gopinath, Rahul},
 title = {Coverage and Its Discontents},
 booktitle = {Proceedings of the 2014 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming \& Software},
 series = {Onward! 2014},
 year = {2014},
 isbn = {978-1-4503-3210-1},
 location = {Portland, Oregon, USA},
 pages = {255--268},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2661136.2661157},
 doi = {10.1145/2661136.2661157},
 acmid = {2661157},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {coverage, evaluation, testing},
}
@inproceedings{shamshiri15:generation,
  title={Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges},
  author={Shamshiri, Sina and Just, Rene and Rojas, Jose Miguel and Fraser, Gordon and McMinn, Phil and Arcuri, Andrea},
  booktitle={Proceedings of the 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  series = {ASE 2015},
  year = {2015},
  location = {Lincoln, NE, USA},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Fraser13:AWT,
 author = {Fraser, Gordon and Staats, Matt and McMinn, Phil and Arcuri, Andrea and Padberg, Frank},
 title = {Does Automated White-box Test Generation Really Help Software Testers?},
 booktitle = {Proceedings of the 2013 International Symposium on Software Testing and Analysis},
 series = {ISSTA 2013},
 year = {2013},
 isbn = {978-1-4503-2159-4},
 location = {Lugano, Switzerland},
 pages = {291--301},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2483760.2483774},
 doi = {10.1145/2483760.2483774},
 acmid = {2483774},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Unit testing, automated test generation, branch coverage, empirical software engineering},
}

@INPROCEEDINGS{Mockus09:cov,
author={Mockus, A. and Nagappan, N. and Dinh-Trong, T.T.},
booktitle={Empirical Software Engineering and Measurement, 2009. ESEM 2009. 3rd International Symposium on},
title={Test coverage and post-verification defects: A multiple case study},
year={2009},
month={Oct},
pages={291-301},
keywords={program testing;program verification;software metrics;software quality;code complexity;cost-effective level;developer experience;industrial software project;organization development;post-verification defect;remote development team;software measure;software quality;test coverage;Computer industry;Control systems;Industrial relations;Lead;Programming;Software engineering;Software measurement;Software quality;Software testing;System testing},
doi={10.1109/ESEM.2009.5315981},
ISSN={1938-6451},}

@book{Perry06:EMS,
 author = {Perry, William},
 title = {Effective Methods for Software Testing, Third Edition},
 year = {2006},
 isbn = {9780764598371},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}

@book{Kit95:STR,
 author = {Kit, Edward and Finzi, Susannah},
 title = {Software Testing in the Real World: Improving the Process},
 year = {1995},
 isbn = {0-201-87756-2},
 source = {ACM member price \$30.95, Order No. 704954},
 publisher = {ACM Press/Addison-Wesley Publishing Co.},
 address = {New York, NY, USA},
}

@book{Myers04:AST,
 author = {Myers, Glenford J. and Sandler, Corey},
 title = {The Art of Software Testing},
 year = {2004},
 isbn = {0471469122},
 publisher = {John Wiley \& Sons},
}

@incollection{Staats12:risks,
year={2012},
isbn={978-3-642-28871-5},
booktitle={Fundamental Approaches to Software Engineering},
volume={7212},
series={Lecture Notes in Computer Science},
editor={de Lara, Juan and Zisman, Andrea},
doi={10.1007/978-3-642-28872-2_28},
title={On the Danger of Coverage Directed Test Case Generation},
url={http://dx.doi.org/10.1007/978-3-642-28872-2_28},
publisher={Springer Berlin Heidelberg},
author={Staats, Matt and Gay, Gregory and Whalen, Michael and Heimdahl, Mats},
pages={409-424},
language={English}
}

@ARTICLE{Gay15:risks,
author={Gay, G. and Staats, M. and Whalen, M. and Heimdahl, M.P.E.},
journal={Software Engineering, IEEE Transactions on},
title={The Risks of Coverage-Directed Test Case Generation},
year={2015},
month={},
volume={PP},
number={99},
keywords={Aerospace electronics;Fault detection;Measurement;NASA;Software packages;Standards;Testing;Software Testing;System Testing},
doi={10.1109/TSE.2015.2421011},
ISSN={0098-5589},}

@incollection{Hardin09:gryphon,
  title={Development of security software: A high assurance methodology},
  author={Hardin, David and Hiratzka, T Douglas and Johnson, D Randolph and Wagner, Lucas and Whalen, Michael},
  booktitle={Formal Methods and Software Engineering},
  pages={266--285},
  year={2009},
  publisher={Springer}
}

@inproceedings{gargantini1999using,
  title={Using model checking to generate tests from requirements specifications},
  author={Gargantini, Angelo and Heitmeyer, Constance},
  booktitle={Software Engineering—ESEC/FSE’99},
  pages={146--162},
  year={1999},
  organization={Springer}
}

@inproceedings{jamrozik-tap-2013,
    title = "Generating Test Suites with Augmented Dynamic Symbolic Execution",
    author = "Konrad Jamrozik and Gordon Fraser and Nikolai Tillmann and Jonathan De Halleux",
    year = "2013",
    month = jun,
    booktitle = "Proceedings of the 7th International Conference on Tests and Proofs",
    location = "Budapest, Hungary",
    pages = "152--167",
    publisher = "Springer",
    series = "TAP 2013",
    volume = "7942",
    doi = "10.1007/978-3-642-38916-0_9",
}

@inproceedings{Person:2011:DIS,
 author = {Person, Suzette and Yang, Guowei and Rungta, Neha and Khurshid, Sarfraz},
 title = {Directed Incremental Symbolic Execution},
 booktitle = {Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {504--515},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993498.1993558},
 doi = {10.1145/1993498.1993558},
 acmid = {1993558},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {program differencing, software evolution, symbolic execution},
}

@incollection{Bardin14:whitebox,
  year={2014},
  isbn={978-3-319-09098-6},
  booktitle={Tests and Proofs},
  volume={8570},
  series={Lecture Notes in Computer Science},
  editor={Seidl, Martina and Tillmann, Nikolai},
  doi={10.1007/978-3-319-09099-3_4},
  title={An All-in-One Toolkit for Automated White-Box Testing},
  url={http://dx.doi.org/10.1007/978-3-319-09099-3_4},
  publisher={Springer International Publishing},
  author={Bardin, Sébastien and Chebaro, Omar and Delahaye, Mickaël and Kosmatov, Nikolai},
  pages={53-60}
}

@INPROCEEDINGS{Bardin14:label,
  author={Bardin, S. and Kosmatov, N. and Cheynier, F.},
  booktitle={Software Testing, Verification and Validation (ICST),
     2014 IEEE Seventh International Conference on},
  title={Efficient Leveraging of Symbolic Execution to Advanced Coverage Criteria},
  year={2014},
  pages={173-182},
  keywords={program testing;software engineering;advanced
coverage criteria;automatic test data generation;black-box support;dynamic
symbolic execution;label coverage;search space;software
engineering;state-of-the-art white-box ATG technologies;testing
criterion;Aerospace electronics;Automation;Instruments;Integrated
circuits;Labeling;Standards;Testing;Testing;coverage criteria;symbolic
execution},
  doi={10.1109/ICST.2014.30},
  month={March}}


@inproceedings{Bardin15:infeasibility,
  author    = {S{\'{e}}bastien Bardin and
               Micka{\"{e}}l Delahaye and
               Robin David and
               Nikolai Kosmatov and
               Mike Papadakis and
               Yves Le Traon and
               Jean{-}Yves Marion},
  title     = {Sound and Quasi-Complete Detection of Infeasible Test Requirements},
  booktitle = {8th {IEEE} International Conference on Software Testing, Verification
               and Validation, {ICST} 2015, Graz, Austria, April 13-17, 2015},
  pages     = {1--10},
  year      = {2015},
  crossref  = {DBLP:conf/icst/2015},
  url       = {http://dx.doi.org/10.1109/ICST.2015.7102607},
  doi       = {10.1109/ICST.2015.7102607},
  timestamp = {Tue, 12 May 2015 09:17:34 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icst/BardinDDKPTM15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Whalen15:mcdc,
  author    = {Michael W. Whalen and
               Suzette Person and
               Neha Rungta and
               Matt Staats and
               Daniela Grijincu},
  title     = {A Flexible and Non-intrusive Approach for Computing Complex Structural
               Coverage Metrics},
  booktitle = {37th {IEEE/ACM} International Conference on Software Engineering,
               {ICSE} 2015, Florence, Italy, May 16-24, 2015, Volume 1},
  pages     = {506--516},
  year      = {2015},
  crossref  = {DBLP:conf/icse/2015-1},
  url       = {http://dx.doi.org/10.1109/ICSE.2015.68},
  doi       = {10.1109/ICSE.2015.68},
  timestamp = {Wed, 19 Aug 2015 13:21:45 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icse/WhalenPRSG15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{tonella:classes,
  author = {Paolo Tonella},
  title = {Evolutionary Testing of Classes},
  booktitle = {Proceedings of the 2004 {ACM SIGSOFT} International Symposium on Software Testing and Analysis ({ISSTA} '04)},
  publisher = {ACM},
  year = {2004},
  pages = {119-128},
  address = {Boston, Massachusetts, USA},
  month = {11-14 July}
}

@InProceedings{wegener:parking,
author =    {Joachim Wegener and Oliver B\"uhler},
title = "Evaluation of different fitness functions for the evolutionary testing of an autonomous parking system",
booktitle = "Genetic and Evolutionary Computation Conference ({GECCO 2004})",
address = "Seattle, Washington, {USA}",
month = jun,
pages = "1400-1412",
year = 2004,
note = "{LNCS} 3103"
}

@article{wegener:verifying,
author = "Joachim Wegener and M. Grochtmann",
title = "Verifying Timing Constraints of Real-Time Systems by means of Evolutionary Testing",
journal = "Real-Time Systems",
volume =  15,
number =  3,
publisher = "Kluwer Academic Publishers",
year = 1998,
pages = "275 -- 298"
}

@inproceedings{joshmh:gecco11,
author = "Jungsup Oh and Mark Harman and Shin Yoo",
title  = "Transition coverage testing for {Simulink$/$Stateflow} models using messy genetic algorithms",
booktitle = "Genetic Algorithms and Evolutionary COmputation Conference ({GECCO 2011})",
pages =  "1851--1858",
address = "Dublin, Ireland",
year = 2011
}

@book{belina1991sdl,
  title={SDL with applications from protocol specification},
  author={Belina, Ferenc and Hogrefe, Dieter and Sarma, Amardeo},
  year={1991},
  publisher={Prentice-Hall, Inc.}
}

@inproceedings{en1999fault,
  title={Fault coverage in testing real-time systems},
  author={En-Nouaary, Abdeslam and Khendek, Ferhat and Dssouli, Rachida},
  booktitle={Real-Time Computing Systems and Applications, 1999. RTCSA'99. Sixth International Conference on},
  pages={150--157},
  year={1999},
  organization={IEEE}
}

@article{fujiwara1991test,
  title={Test selection based on finite state models},
  author={Fujiwara, Susumu and Khendek, F and Amalou, M and Ghedamsi, A and others},
  journal={Software Engineering, IEEE Transactions on},
  volume={17},
  number={6},
  pages={591--603},
  year={1991},
  publisher={IEEE}
}

@incollection{hessel2007model,
  title={Model-based testing of a wap gateway: An industrial case-study},
  author={Hessel, Anders and Pettersson, Paul},
  booktitle={Formal Methods: Applications and Technology},
  pages={116--131},
  year={2007},
  publisher={Springer}
}

@incollection{ravn2011modelling,
  title={Modelling and verification of web services business activity protocol},
  author={Ravn, Anders P and Srba, Ji{\v{r}}{\'\i} and Vighio, Saleem},
  booktitle={Tools and Algorithms for the Construction and Analysis of Systems},
  pages={357--371},
  year={2011},
  publisher={Springer}
}

@book{havelund1999formal,
  title={Formal verification of a power controller using the real-time model checker Uppaal},
  author={Havelund, Klaus and Larsen, Kim Guldstrand and Skou, Arne},
  year={1999},
  publisher={Springer}
}

@inproceedings{bowman1998automatic,
  title={Automatic verification of a lip-synchronisation algorithm using uppaal-extended version},
  author={Bowman, Howard and Faconti, Giorgio and Katoen, Joost-Pieter and Latella, Diego and Massink, Mieke},
  booktitle={FMICS'98, Third Internatinoal Workshop on Formal Methods for Industrial Crtical Systems},
  pages={97--124},
  year={1998},
  organization={CWI}
}

@article{springintveld2001testing,
  title={Testing timed automata},
  author={Springintveld, Jan and Vaandrager, Frits and D'Argenio, Pedro R},
  journal={Theoretical computer science},
  volume={254},
  number={1},
  pages={225--257},
  year={2001},
  publisher={Elsevier}
}

@incollection{hessel2004time,
  title={Time-optimal test cases for real-time systems},
  author={Hessel, Anders and Larsen, Kim G and Nielsen, Brian and Pettersson, Paul and Skou, Arne},
  booktitle={Formal Modeling and Analysis of Timed Systems},
  pages={234--245},
  year={2004},
  publisher={Springer}
}

@incollection{alur1990automata,
  title={Automata for modeling real-time systems},
  author={Alur, Rajeev and Dill, David},
  booktitle={Automata, languages and programming},
  pages={322--335},
  year={1990},
  publisher={Springer}
}

@inproceedings{clarke1997automatic,
  title={Automatic generation of tests for timing constraints from requirements},
  author={Clarke, Duncan and Lee, Insup},
  booktitle={Object-Oriented Real-Time Dependable Systems, 1997. Proceedings., Third International Workshop on},
  pages={199--206},
  year={1997},
  organization={IEEE}
}

@inproceedings{cardell2002conformance,
  title={Conformance test experiments for distributed real-time systems},
  author={Cardell-Oliver, Rachel},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={27},
  number={4},
  pages={159--163},
  year={2002},
  organization={ACM}
}

@article{cleaveland1993testing,
  title={Testing equivalence as a bisimulation equivalence},
  author={Cleaveland, Rance and Hennessy, Matthew},
  journal={Formal Aspects of Computing},
  volume={5},
  number={1},
  pages={1--20},
  year={1993},
  publisher={Springer}
}

@inproceedings{jeron1999test,
  title={Test generation derived from model-checking},
  author={J{\'e}ron, Thierry and Morel, Pierre},
  booktitle={Computer Aided Verification},
  pages={108--122},
  year={1999},
  organization={Springer}
}

@incollection{nielsen2001automated,
  title={Automated test generation from timed automata},
  author={Nielsen, Brian and Skou, Arne},
  booktitle={Tools and Algorithms for the Construction and Analysis of Systems},
  pages={343--357},
  year={2001},
  publisher={Springer}
}

@misc{Behrmann06:uppaal,
  title={A Tutorial on \textsc{Uppaal} 4.0},
  year={2006},
  author={Behrmann, Gerd and David, Alexandre and Larsen, Kim G},
  publisher={Forschungsbericht}
}

@article{fernandez1997experiment,
  title={An experiment in automatic generation of test suites for protocols with verification technology},
  author={Fernandez, Jean-Claude and Jard, Claude and Jeron, Thierry and Viho, Cesar},
  journal={Science of Computer Programming},
  volume={29},
  number={1},
  pages={123--146},
  year={1997},
  publisher={Elsevier}
}

@inproceedings{Tretmans03:torx,
       booktitle = {First European Conference on Model-Driven Software Engineering},
          editor = {A. {Hartman} and K. {Dussa-Ziegler}},
           month = {December},
           title = {TorX: Automated Model-Based Testing},
          author = {Jan {Tretmans} and Ed {Brinksma}},
            year = {2003},
           pages = {31--43},
             url = {http://doc.utwente.nl/66990/},
}

@incollection{Belinfante99:FTA,
year={1999},
isbn={978-1-4757-6699-8},
booktitle={Testing of Communicating Systems},
volume={21},
series={IFIP — The International Federation for Information Processing},
editor={Csopaki, Gyula and Dibuz, Sarolta and Tarnay, Katalin},
doi={10.1007/978-0-387-35567-2_12},
title={Formal Test Automation: A Simple Experiment},
url={http://dx.doi.org/10.1007/978-0-387-35567-2_12},
publisher={Springer US},
author={Belinfante, Axel and Feenstra, Jan and de Vries, RenéG. and Tretmans, Jan and Goga, Nicolae and Feijs, Loe and Mauw, Sjouke and Heerink, Lex},
pages={179-196},
language={English}
}

@article{DeNicola87:ETS,
 author = {De Nicola, R},
 title = {Extensional Equivalence for Transition Systems},
 journal = {Acta Inf.},
 issue_date = {April 1987},
 volume = {24},
 number = {2},
 month = apr,
 year = {1987},
 issn = {0001-5903},
 pages = {211--237},
 numpages = {27},
 url = {http://dx.doi.org/10.1007/BF00264365},
 doi = {10.1007/BF00264365},
 acmid = {25074},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
}

@inproceedings{van1993linear,
  title={The linear time—branching time spectrum II},
  author={van Glabbeek, Rob J},
  booktitle={CONCUR'93},
  pages={66--81},
  year={1993},
  organization={Springer}
}

@inproceedings{bernot1991testing,
  title={Testing against formal specifications: A theoretical view},
  author={Bernot, Gilles},
  booktitle={TAPSOFT'91},
  pages={99--119},
  year={1991},
  organization={Springer}
}

@inproceedings{Tretmans93:conformance,
 author = {Tretmans, Jan},
 title = {A Formal Approach to Conformance Testing},
 booktitle = {Proceedings of the IFIP TC6/WG6.1 Sixth International Workshop on Protocol Test Systems VI},
 year = {1994},
 isbn = {0-444-81697-6},
 pages = {257--276},
 numpages = {20},
 url = {http://dl.acm.org/citation.cfm?id=648128.747730},
 acmid = {747730},
 publisher = {North-Holland Publishing Co.},
 address = {Amsterdam, The Netherlands, The Netherlands},
}

@misc{ISO96,
 author={ISO/IEC JTC1/SC21 WG7, ITU-T SG 10/Q.8},
 title={Information Retrieval, Transfer and Management for OSI; Framework: Formal Methods in Conformance Testing},
 journal={Committee Draft CD 13245-1, ITU-T proposed recommendation Z.500},
 publisher={ISO -- ITU-T},
 address ={Geneve},
 year={1996}
}

@misc{Tretmans96:ioco,
          number = {TR-CTIT-96-26},
          author = {Jan {Tretmans}},
          series = {CTIT technical report series},
         address = {Enschede, the Netherlands},
           title = {Test Generation with Inputs, Outputs and Repetitive Quiescence},
       publisher = {University of Twente, Centre for Telematics and Information Technology (CTIT)},
         journal = {Software---Concepts and Tools},
            year = {1996},
             url = {http://doc.utwente.nl/65463/}
}

@inproceedings{Gopinath14:coverage,
 author = {Gopinath, Rahul and Jensen, Carlos and Groce, Alex},
 title = {Code Coverage for Suite Evaluation by Developers},
 booktitle = {Proceedings of the 36th International Conference on Software Engineering},
 series = {ICSE 2014},
 year = {2014},
 isbn = {978-1-4503-2756-5},
 location = {Hyderabad, India},
 pages = {72--82},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2568225.2568278},
 doi = {10.1145/2568225.2568278},
 acmid = {2568278},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {evaluation of coverage criteria, statistical analysis, test frameworks},
}


@article{Navarro01:strings,
 author = {Navarro, Gonzalo},
 title = {A Guided Tour to Approximate String Matching},
 journal = {ACM Comput. Surv.},
 issue_date = {March 2001},
 volume = {33},
 number = {1},
 month = mar,
 year = {2001},
 issn = {0360-0300},
 pages = {31--88},
 numpages = {58},
 url = {http://doi.acm.org/10.1145/375360.375365},
 doi = {10.1145/375360.375365},
 acmid = {375365},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Levenshtein distance, edit distance, online string matching, text searching allowing errors},
}

@Misc{jkind,
  title =    "{JK}ind - a {J}ava implementation of the {KIND} model checker",
  author = {Andrew Gacek},
  howpublished = {https://github.com/agacek},
  year={2015}
}

@incollection{Desel04:uppaal,
year={2004},
isbn={978-3-540-22261-3},
booktitle={Lectures on Concurrency and Petri Nets},
volume={3098},
series={Lecture Notes in Computer Science},
editor={Desel, J�rg and Reisig, Wolfgang and Rozenberg, Grzegorz},
doi={10.1007/978-3-540-27755-2_3},
title={Timed Automata: Semantics, Algorithms and Tools},
url={http://dx.doi.org/10.1007/978-3-540-27755-2_3},
publisher={Springer Berlin Heidelberg},
author={Bengtsson, Johan and Yi, Wang},
pages={87-124},
language={English}
}

@inproceedings{Mahajan14:presentation,
 author = {Mahajan, Sonal and Halfond, William G.J.},
 title = {Finding HTML Presentation Failures Using Image Comparison Techniques},
 booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
 series = {ASE '14},
 year = {2014},
 isbn = {978-1-4503-3013-8},
 location = {Vasteras, Sweden},
 pages = {91--96},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/2642937.2642966},
 doi = {10.1145/2642937.2642966},
 acmid = {2642966},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {detection and localization, html presentation failures},
}

@book{Biere09:satisfiability,
 author = {Biere, A. and Biere, A. and Heule, M. and van Maaren, H. and Walsh, T.},
 title = {Handbook of Satisfiability: Volume 185 Frontiers in Artificial Intelligence and Applications},
 year = {2009},
 isbn = {1586039296, 9781586039295},
 publisher = {IOS Press},
 address = {Amsterdam, The Netherlands, The Netherlands},
}

@article{Menzies03:treatment,
 author = {Menzies, Tim and Hu, Ying},
 title = {Data Mining for Very Busy People},
 journal = {Computer},
 issue_date = {November 2003},
 volume = {36},
 number = {11},
 month = nov,
 year = {2003},
 issn = {0018-9162},
 pages = {22--29},
 numpages = {8},
 url = {http://dx.doi.org/10.1109/MC.2003.1244531},
 doi = {10.1109/MC.2003.1244531},
 acmid = {951861},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
}

@book{Mohri12:ML,
author= {Mohri, M. and Rostamizadeh, A. and Talwalkar, A.},
title={Houndations of Machine Learning},
year={2012},
publisher={MIT Press}
}

@inproceedings{McMinn10:humanoracle,
 author = {McMinn, Phil and Stevenson, Mark and Harman, Mark},
 title = {Reducing Qualitative Human Oracle Costs Associated with Automatically Generated Test Data},
 booktitle = {Proceedings of the First International Workshop on Software Test Output Validation},
 series = {STOV '10},
 year = {2010},
 isbn = {978-1-4503-0138-1},
 location = {Trento, Italy},
 pages = {1--4},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1868048.1868049},
 doi = {10.1145/1868048.1868049},
 acmid = {1868049},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@inproceedings{Gay14:OracleSteeringASE,
 author = {Gay, Gregory and Rayadurgam, Sanjai and Heimdahl, Mats P.E.},
 title = {Improving the Accuracy of Oracle Verdicts Through Automated Model Steering},
 booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
 series = {ASE '14},
 year = {2014},
 isbn = {978-1-4503-3013-8},
 location = {Vasteras, Sweden},
 pages = {527--538},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2642937.2642989},
 doi = {10.1145/2642937.2642989},
 acmid = {2642989},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {model-based testing, software testing, test oracles},
}

@inproceedings{Gay14:SBST,
 author = {Gay, Gregory and Staats, Matt and Whalen, Michael W. and Heimdahl, Mats P. E.},
 title = {Moving the Goalposts: Coverage Satisfaction is Not Enough},
 booktitle = {Proceedings of the 7th International Workshop on Search-Based Software Testing},
 series = {SBST 2014},
 year = {2014},
 isbn = {978-1-4503-2852-4},
 location = {Hyderabad, India},
 pages = {19--22},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/2593833.2593837},
 doi = {10.1145/2593833.2593837},
 acmid = {2593837},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Automated Test Generation, Software Testing, Structural Coverage},
}

@ARTICLE{Hamlet90:partition,
author={Hamlet, D. and Taylor, R.},
journal={Software Engineering, IEEE Transactions on},
title={Partition testing does not inspire confidence},
year={1990},
month={Dec},
volume={16},
number={12},
pages={1402-1411},
keywords={program testing;system recovery;abstract;expected failures;failure detection;partition testing;program testing;theoretical models;Computer science;Data structures;Genetic mutations;Performance evaluation;Programming profession;Reliability theory;Sampling methods;Software testing;System testing},
doi={10.1109/32.62448},
ISSN={0098-5589},}

@inproceedings{Inozemtseva14:coverage,
 author = {Inozemtseva, Laura and Holmes, Reid},
 title = {Coverage is Not Strongly Correlated with Test Suite Effectiveness},
 booktitle = {Proceedings of the 36th International Conference on Software Engineering},
 series = {ICSE 2014},
 year = {2014},
 isbn = {978-1-4503-2756-5},
 location = {Hyderabad, India},
 pages = {435--445},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2568225.2568271},
 doi = {10.1145/2568225.2568271},
 acmid = {2568271},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coverage, test suite effectiveness, test suite quality},
}

@inproceedings{Gay14:OracleSteeringNIER,
 author = {Gay, Gregory and Rayadurgam, Sanjai and Heimdahl, Mats P.E.},
 title = {Steering Model-Based Oracles to Admit Real Program Behaviors},
 booktitle = {Proceedings of the 36th International Conference on Software Engineering -- NIER Track},
 series = {ICSE '14},
 year = {2014},
 location = {Hyderabad, India},
 numpages = {4},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{DeMoura08:z3,
  title={Z3: An efficient SMT solver},
  author={De Moura, Leonardo and Bj{\o}rner, Nikolaj},
  booktitle={Tools and Algorithms for the Construction and Analysis of Systems},
  pages={337--340},
  year={2008},
  publisher={Springer}
}

@article{Cha07:similarity,
  author = {Cha, Sung-Hyuk},
  journal = {International Journal of Mathematical Models and Methods in Applied Sciences},
  keywords = {distance information ir measure retrieval similarity},
  number = 4,
  pages = {300--307},
  timestamp = {2012-06-07T16:45:15.000+0200},
  title = {Comprehensive Survey on Distance/Similarity Measures between Probability Density Functions},
  url = {http://www.gly.fsu.edu/~parker/geostats/Cha.pdf},
  volume = 1,
  year = 2007
}


@inproceedings{Vivanti13:DataFlow,
    title = "Search-based Data-flow Test Generation",
    author = "Mattia Vivanti and Andre Mis and Alessandra Gorla and Gordon Fraser",
    year = "2013",
    month = nov,
    booktitle = "ISSRE'13: Proceedings of the 24th IEEE Int'l Symposium on Software Reliability Engineering",
    location = "Pasadena, CA, USA",
    publisher = "IEEE Press",
}


@TECHREPORT{Dutertre06:yices,
    author = {Bruno Dutertre and Leonardo De Moura},
    title = {The yices smt solver},
    institution = {},
    year = {2006}
}

@article{Nie11:Combinatorial,
 author = {Nie, Changhai and Leung, Hareton},
 title = {A survey of combinatorial testing},
 journal = {ACM Comput. Surv.},
 issue_date = {January 2011},
 volume = {43},
 number = {2},
 month = feb,
 year = {2011},
 issn = {0360-0300},
 pages = {11:1--11:29},
 articleno = {11},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/1883612.1883618},
 doi = {10.1145/1883612.1883618},
 acmid = {1883618},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Software testing, combinatorial testing (CT), covering array, test case generation},
}

@inproceedings{Veanes08:SpecExplorer,
  author = {Veanes, Margus and Campbell, Colin and Grieskamp, Wolfgang and Schulte, Wolfram and Tillmann, Nikolai and Nachmanson, Lev},
  booktitle = {Formal Methods and Testing},
  date = {2008-04-21},
  editor = {Hierons, Robert M. and Bowen, Jonathan P. and Harman, Mark},
  ee = {http://dx.doi.org/10.1007/978-3-540-78917-8_2},
  isbn = {978-3-540-78916-1},
  keywords = {dblp},
  pages = {39-76},
  publisher = {Springer},
  series = {Lecture Notes in Computer Science},
  timestamp = {2008-04-21T00:00:00.000+0200},
  title = {Model-Based Testing of Object-Oriented Reactive Systems with Spec Explorer.},
  url = {http://dblp.uni-trier.de/db/conf/fortest/fortest2008.html#VeanesCGSTN08},
  volume = 4949,
  year = 2008
}

@inproceedings{Godefroid08:Fuzz,
    author = {Patrice Godefroid and Michael Y. Levin and David A
              Molnar},
    title = {Automated Whitebox Fuzz Testing},
    booktitle = {Network Distributed Security Symposium (NDSS)},
    organization = {Internet Society},
    year = {2008},
    URL = {http://www.truststc.org/pubs/499.html}
}

@incollection{Brinksma01:mbt,
year={2001},
isbn={978-3-540-42787-2},
booktitle={Modeling and Verification of Parallel Processes},
volume={2067},
series={Lecture Notes in Computer Science},
editor={Cassez, Franck and Jard, Claude and Rozoy, Brigitte and Ryan, MarkDermot},
doi={10.1007/3-540-45510-8_9},
title={Testing Transition Systems: An Annotated Bibliography},
url={http://dx.doi.org/10.1007/3-540-45510-8_9},
publisher={Springer Berlin Heidelberg},
author={Brinksma, Ed and Tretmans, Jan},
pages={187-195},
language={English}
}

@article{Anand13:TestGeneration,
  author    = "Saswat Anand and Edmund Burke and Tsong Yueh Chen and John Clark and Myra B. Cohen and
               Wolfgang Grieskamp and Mark Harman and Mary Jean Harrold and Phil McMinn",
  title     = "An Orchestrated Survey on Automated Software Test Case Generation",
  journal   = "Journal of Systems and Software",
  editors   = "Antonia Bertolino and J. Jenny Li and Hong Zhu",
  volume    = "86",
  number    = "8",
  pages     = "1978--2001",
  month     = "August",
  year      = "2013",
  doi       = "10.1016/j.jss.2013.02.061",
  gsid      = "12368686366965515852",
}

@inproceedings{Eyerich06:GOLOG,
 author = {Eyerich, Patrick and Nebel, Bernhard and Lakemeyer, Gerhard and Classen, Jens},
 title = {GOLOG and PDDL: what is the relative expressiveness?},
 booktitle = {Proceedings of the 2006 Int'l symposium on Practical cognitive agents and robots},
 series = {PCAR '06},
 year = {2006},
 isbn = {1-74052-130-7},
 location = {Perth, Australia},
 pages = {93--104},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1232425.1232440},
 doi = {10.1145/1232425.1232440},
 acmid = {1232440},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@techreport{Modelica12,
author={The Modelica Association},
title={Modelica - A Unified Object-Oriented Language for Systems Modeling},
  year        = "2012",
}

@inproceedings{Lloyd94:Declarative,
	author = {Lloyd, J.W.},
	title = {Practical Advantaged of Declarative Programming},
	booktitle= {Proceedings of the Joint Conf. on Declarative Programming},
	year={1994}
}

@inproceedings{Barnett04:Spec,
 author = {Barnett, Mike and Leino, K. Rustan M. and Schulte, Wolfram},
 title = {The spec\# programming system: an overview},
 booktitle = {Proceedings of the 2004 Int'l Conf. on Construction and Analysis of Safe, Secure, and Interoperable Smart Devices},
 series = {CASSIS'04},
 year = {2004},
 isbn = {3-540-24287-2, 978-3-540-24287-1},
 location = {Marseille, France},
 pages = {49--69},
 numpages = {21},
 url = {http://dx.doi.org/10.1007/978-3-540-30569-9_3},
 doi = {10.1007/978-3-540-30569-9_3},
 acmid = {2131549},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}


@article{Gomes12:Models,
year={2012},
issn={1433-2779},
journal={Int'l Journal on Software Tools for Technology Transfer},
volume={14},
number={6},
doi={10.1007/s10009-012-0238-x},
title={Constructive model-based analysis for safety assessment},
url={http://dx.doi.org/10.1007/s10009-012-0238-x},
publisher={Springer-Verlag},
keywords={Model-based safety assessment; Probabilistic model checking; Markov analysis; Quantitative safety analysis; Translation rules},
author={Gomes, Adriano and Mota, Alexandre and Sampaio, Augusto and Ferri, Felipe and Watanabe, Edson},
pages={673-702},
language={English}
}

@inProceedings{modemodeling,
  author =	 "Murugesan, A. and Rayadurgam, S. and Heimdahl, M.",
  title =	 "Modes, Features, and State-Based Modeling for Clarity and Flexibility",
  booktitle =	 "Proceedings of the 2013 Workshop on Modeling in Software Engineering",
  year =	 "2013",
}


@inProceedings{StructuringModels,
  author =	 "M. Whalen and A. Murugesan and S. Rayadurgam and M. Heimdahl",
  title =	 "Structuring {S}imulink Models for Verification and Reuse",
  booktitle =	 "Proceedings of the 6th Int'l Workshop on Modeling in Software Engineering",
  year =	 "2014",
}

@incollection{Hunt00:SAT,
year={2000},
isbn={978-3-540-41219-9},
booktitle={Formal Methods in Computer-Aided Design},
volume={1954},
series={Lecture Notes in Computer Science},
editor={Hunt, WarrenA., Jr. and Johnson, StevenD.},
doi={10.1007/3-540-40922-X_8},
title={Checking Safety Properties Using Induction and a SAT-Solver},
url={http://dx.doi.org/10.1007/3-540-40922-X_8},
publisher={Springer Berlin Heidelberg},
author={Sheeran, Mary and Singh, Satnam and St�lmarck, Gunnar},
pages={127-144},
language={English}
}

@techreport{Biere03:boundedMC,
author={Biere, A. and Cimatti, A. and Clarke, E. and Strichmann, O. and Zhu, Y.},
title={Bounded Model Checking},
  institution = "Carnegie Mellon University",
  year        = "2003",
  number      = "451",
}

@book{Huth06:Logic,
author= {Huth, M. and Ryan, M.},
title={Logic in Computer Science: Modelling and Reasoning about Systems, Second Edition},
year={2006},
publisher={Cambridge Press}
}

@inProceedings{Kautz96:SAT,
  author =	 "Henry Kautz and Bart Selman",
  title =	 "Pushing the Envelope: Planning, Propositional Logic
                  and Stochastic Search",
  pages =	 "1194--1201",
  ISBN =	 "0-262-51091-X",
  booktitle =	 "Proceedings of the Thirteenth National Conf. on
                  Artificial Intelligence and the Eighth Innovative
                  Applications of Artificial Intelligence Conf.",
  month =	 aug # "~4--8",
  publisher =	 "AAAI Press / MIT Press",
  address =	 "Menlo Park",
  year =	 "1996",
}

@INPROCEEDINGS{Selman95:WalkSAT,
    author = {Bart Selman and Henry Kautz and Bram Cohen},
    title = {Local Search Strategies for Satisfiability Testing},
    booktitle = {DIMACS SERIES IN DISCRETE MATHEMATICS AND THEORETICAL COMPUTER SCIENCE},
    year = {1995},
    pages = {521--532},
    publisher = {}
}

@article{Davis62:DPLL,
 author = {Davis, Martin and Logemann, George and Loveland, Donald},
 title = {A machine program for theorem-proving},
 journal = {Commun. ACM},
 issue_date = {July 1962},
 volume = {5},
 number = {7},
 month = jul,
 year = {1962},
 issn = {0001-0782},
 pages = {394--397},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/368273.368557},
 doi = {10.1145/368273.368557},
 acmid = {368557},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@inproceedings{Alsinet03:bab,
    author = {Alsinet, T. and Manya, F. and Planes, J.},
    title = {Improved Branch and Bound Algorithms for MAX-SAT},
    year = {2003},
    booktitle={Proceedings of the Sixth Int'l Conf. on the Theory and Applications of Satisfiability Testing}
}

@techreport{Qasem13:SAT,
author={Qasem, M.},
title={SAT and MAX-SAT for the Lay-Researcher},
institution={The Public Authority for Applied Education and Training, Kuwait},
url={http://www.mqasem.net/sat/sat/index.php}
}

@inproceedings{Schaefer78:SAT,
 author = {Schaefer, T. J.},
 title = {The complexity of satisfiability problems},
 booktitle = {Proceedings of the tenth annual ACM symposium on Theory of computing},
 series = {STOC '78},
 year = {1978},
 location = {San Diego, California, USA},
 pages = {216--226},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/800133.804350},
 doi = {10.1145/800133.804350},
 acmid = {804350},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@inproceedings{Gomes08:SAT,
author = {Gomes, C. and Kautz, H. and Sabharwal, A. and Selman, B.},
title={Satisfiability Solvers},
booktitle = {Handbook of Knowledge Representation, Foundations of Artificial Intelligence},
year={2008},
pages={89--134},
publisher={Elsevier}
}

@inproceedings{Kennedy95:PSO,
 author = {J. Kennedy and R.C. Eberhart},
 title = {Particle Swarm Optimization},
 booktitle = {IEEE Int'l Conf. on Neural Networks},
location={Perth, Australia},
 year = {1995},
 pages = {1942--1948},
 }

@inproceedings{McMinn09:GA,
 author = {McMinn, Phil},
 title = {Search-based failure discovery using testability transformations to generate pseudo-oracles},
 booktitle = {GECCO '09: Proceedings of the 11th Annual Conf. on Genetic and evolutionary computation},
 year = {2009},
 isbn = {978-1-60558-325-9},
 pages = {1689--1696},
 location = {Montreal, Qu\'{e}bec, Canada},
 doi = {http://doi.acm.org/10.1145/1569901.1570127},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@book{Holland75:GA,
 author = {Holland, J.},
 title = {Adaptation in natural and artificial systems},
 year = {1975},
 publisher = {University of Michigan Press},
 address = {Ann Arbor, MI, USA},
}

@article{Glover89:Tabu,
 author = {Glover, F.},
 title = {Tabu Search - Part 1},
 journal = {ORSA Journal on Computing},
 volume = 1,
issue=3,
 year = 1989,
pages = {190--206},
}

@article{Glover90:Tabu,
 author = {Glover, F.},
 title = {Tabu Search - Part 2},
 journal = {ORSA Journal on Computing},
 volume = 2,
issue=1,
 year = 1990,
pages = {4--32},
}

@article{Kirkpatrick83:SA,
  author =	 "S. Kirkpatrick and C. D. Gelatt and M. P. Vecchi",
  title =	 "Optimization by Simulated Annealing",
  journal =	 "Science, Number 4598, 13 May 1983",
  volume =	 "220, 4598",
  pages =	 "671--680",
  year =	 "1983",
  url =		 "citeseer.nj.nec.com/kirkpatrick83optimization.html"
}

@inproceedings{Rhys09:SBTesting,
 author = {Rhys, S. and Poulding, S. and Clark, J.},
 title = {Using automated search to generate test data for matlab},
 booktitle = {GECCO '09: Proceedings of the 11th Annual Conf. on Genetic and evolutionary computation},
 year = {2009},
 isbn = {978-1-60558-325-9},
 pages = {1697--1704},
 location = {Montreal, Qu\'{e}bec, Canada},
 doi = {http://doi.acm.org/10.1145/1569901.1570128},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{Arcuri09:insight,
 author = {Arcuri, A.},
 title = {Insight knowledge in search based software testing},
 booktitle = {GECCO '09: Proceedings of the 11th Annual Conf. on Genetic and evolutionary computation},
 year = {2009},
 isbn = {978-1-60558-325-9},
 pages = {1649--1656},
 location = {Montreal, Qu\'{e}bec, Canada},
 doi = {http://doi.acm.org/10.1145/1569901.1570122},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{Baresel02:fitness,
 author = {Baresel, A. and  Sthamer, H. and Schmidt, M.},
 title = {Fitness function design to improve evolutionary structural testing},
 booktitle = {GECCO '02: Proceedings of the 4th Annual Conf. on Genetic and evolutionary computation},
 year = {2002},
 pages = {1329--1336},
 location = {New York, NY, USA},
 publisher = {Morgan Kaufmann Publishers},
 }

@article{Harman04:testability,
 author = {Harman, M. and Hu, L. and Hierons, R. and Wegener, J. and  Sthamer, H. and Baresel, A. and Roper, M.},
 title = {Testability Transformation},
 journal = {IEEE Transactions on Software Engineering},
 volume = 30,
 number = 1,
 year = 2004,
pages = {3--16},
}

@article{Bryant86:OBDD,
 author = {Bryant, R. E.},
 title = {Graph-Based Algorithms for Boolean Function Manipulation},
 journal = {IEEE Trans. Comput.},
 issue_date = {August 1986},
 volume = {35},
 number = {8},
 month = aug,
 year = {1986},
 issn = {0018-9340},
 pages = {677--691},
 numpages = {15},
 url = {http://dx.doi.org/10.1109/TC.1986.1676819},
 doi = {10.1109/TC.1986.1676819},
 acmid = {6433},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Boolean functions, binary decision diagrams, logic design verification, symbolic manipulation, symbolic manipulation, Boolean functions, binary decision diagrams, logic design verification},
}

@article{McMinn04:SBTesting,
 author = {Phil McMinn},
 title = {Search-based Software Test Data Generation: A Survey},
 journal = {Software Testing, Verification and Reliability},
 volume = 14,
 year = 2004,
pages = {105--156},
}

@article{Harman01:SBSE,
 author = { M. Harman and B.F. Jones},
 title = { Search-based software engineering},
 journal = {Journal of Information and Software Technology},
 volume = 43,
 month = "December",
 year = 2001,
pages = {833-839},
}

@inproceedings{Harman04:metrics,
author = {Harman, M. and Clark, J.},
title = {Metrics are fitness functions too},
booktitle = {10th Int'l Software Metrics Symposium (METRICS 2004)},
year = {2004},
pages = {58--69},
location = {Chicago, IL, USA},
publisher = {IEEE Computer Society Press},
address = {Los Alamitos, CA, USA},
}

@inproceedings{Yu13:regression,
 author = {Yu, T. and Qu, X. and Acharya, M. and Rothermel, G.},
 title = {Oracle-Based Regression Test Selection},
 booktitle = {Proceedings of the Sixth IEEE Conf. on Software Testing, Verification, and Validation},
 series = {ICST'13},
 year = {2013},
}

@inproceedings{Staats12:regression,
  author    = {Matt Staats and
               Pablo Loyola and
               Gregg Rothermel},
  title     = {Oracle-Centric Test Case Prioritization},
  booktitle = {ISSRE},
  year      = {2012},
  pages     = {311-320},
  ee        = {http://dx.doi.org/10.1109/ISSRE.2012.13},
}

@book{Marick95:testing,
Author={Marick, B.},
Title={The Craft of Software Testing: Subsystem Testing},
year={1995},
Publisher={Prentice Hall}}

@ARTICLE{Rothermel01:prioritization,
author={Rothermel, G. and Untch, R.H. and Chengyun Chu and Harrold, M.J.},
journal={Software Engineering, IEEE Transactions on}, title={Prioritizing test cases for regression testing},
year={2001},
volume={27},
number={10},
pages={929-948},
keywords={program debugging;program testing;code component coverage;cost-benefit analysis;experiments;regression testing;software fault correction;software fault detection rate;software testing;test case prioritization;test case scheduling;Application software;Computer Society;Computer aided software engineering;Costs;Fault detection;Feedback;Processor scheduling;Software maintenance;Software testing;System testing},
doi={10.1109/32.962562},
ISSN={0098-5589},}

@article {Yoo12:regressionsurvey,
author = {Yoo, S. and Harman, M.},
title = {Regression testing minimization, selection and prioritization: a survey},
journal = {Software Testing, Verification and Reliability},
volume = {22},
number = {2},
publisher = {John Wiley \& Sons, Ltd},
issn = {1099-1689},
url = {http://dx.doi.org/10.1002/stv.430},
doi = {10.1002/stv.430},
pages = {67--120},
keywords = {regression testing, test suite minimization, regression test selection, test case prioritization},
year = {2012},
}

@INPROCEEDINGS{Leung89:regression,
author={Leung, H. K N and White, L.},
booktitle={Software Maintenance, 1989., Proceedings., Conf. on}, title={Insights into regression testing},
year={1989},
pages={60-69},
keywords={program testing;software engineering;corrective regression testing;program design;regression number;regression testability;regression testing problem;retest strategy;test classification phase;test plan design;test plan update problem;test selection problem;testing number;testing set;workable metrics;Councils;Error correction;Flow graphs;Logic testing;Performance evaluation;Phase detection;Software systems;Software testing;System testing},
doi={10.1109/ICSM.1989.65194},}

@inproceedings{Leon03:filtering,
 author = {Leon, D. and Podgurski, A.},
 title = {A Comparison of Coverage-Based and Distribution-Based Techniques for Filtering and Prioritizing Test Cases},
 booktitle = {Proceedings of the 14th Int'l Symposium on Software Reliability Engineering},
 series = {ISSRE '03},
 year = {2003},
 isbn = {0-7695-2007-3},
 pages = {442--},
 url = {http://dl.acm.org/citation.cfm?id=951952.952367},
 acmid = {952367},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@INPROCEEDINGS{Miller01:steering,
author={Miller, D.W. and Guo, J.  and Kraemer, E. and Xiong, Y.},
booktitle={Supercomputing, ACM/IEEE 2001 Conf.}, title={On-the-Fly Calculation and Verification of Consistent Steering Transactions},
year={2001},
pages={8-8},
keywords={Consistent Cut;Consistent Steering;Consistent Transaction;Happened Before;Program Event;Program Transaction;Steering Event;Steering Transaction;Algorithm design and analysis;Computer applications;Computer networks;Computer science;Data visualization;Distributed computing;Distributed control;Geometry;Permission;Protocols;Consistent Cut;Consistent Steering;Consistent Transaction;Happened Before;Program Event;Program Transaction;Steering Event;Steering Transaction}, }

@article{Randell78:faulttolerance,
 author = {Randell, B. and Lee, P. and Treleaven, P. C.},
 title = {Reliability Issues in Computing System Design},
 journal = {ACM Comput. Surv.},
 issue_date = {June 1978},
 volume = {10},
 number = {2},
 month = jun,
 year = {1978},
 issn = {0360-0300},
 pages = {123--165},
 numpages = {43},
 url = {http://doi.acm.org/10.1145/356725.356729},
 doi = {10.1145/356725.356729},
 acmid = {356729},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@TECHREPORT{Barabanov97:RTLinux,
    author = {Michael Barabanov},
    title = {A Linux-based Real-Time Operating System},
    institution = {New Mexico Institute of Mining and Technology},
    year = {1997}
}

@article{Tretmans96:ioco,
 author = {Tretmans, J.},
 title = {Test generation with inputs, outputs, and repetitive quiescence},
 journal = {Software---Concepts and Tools},
 volume = {17},
 number = {3},
 year = {1996},
}

@article{Peters02:monitors,
 author = {Peters, Dennis K. and Parnas, David Lorge},
 title = {Requirements-Based Monitors for Real-Time Systems},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {February 2002},
 volume = {28},
 number = {2},
 month = feb,
 year = {2002},
 issn = {0098-5589},
 pages = {146--158},
 numpages = {13},
 url = {http://dx.doi.org/10.1109/32.988496},
 doi = {10.1109/32.988496},
 acmid = {506204},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {Automated testing, test oracle, real-time system, supervisor.},
}

@INPROCEEDINGS{Briones04:RTS,
    author = {Laura Brand�n Briones and Ed Brinksma},
    title = {A test generation framework for quiescent real-time systems},
    booktitle = {IN FATES'04 },
    year = {2004},
    pages = {64--78},
    publisher = {Springer-Verlag GmbH}
}

@inproceedings{Wilcox10:HiddenState,
 author = {Wilcox, Cristina M. and Williams, Brian C.},
 title = {Runtime verification of stochastic, faulty systems},
 booktitle = {Proceedings of the First Int'l Conf. on Runtime verification},
 series = {RV'10},
 year = {2010},
 isbn = {3-642-16611-3, 978-3-642-16611-2},
 location = {St. Julians, Malta},
 pages = {452--459},
 numpages = {8},
 url = {http://dl.acm.org/citation.cfm?id=1939399.1939436},
 acmid = {1939436},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {belief state update, hidden state, stochastic systems},
}


@INPROCEEDINGS{Savor97:RTS,
author={Savor, T. and Seviora, R.E.},
booktitle={Real-Time Technology and Applications Symposium, 1997. Proceedings., Third IEEE}, title={An approach to automatic detection of software failures in real-time systems},
year={1997},
pages={136-146},
keywords={automatic test software;computational complexity;program testing;program verification;real-time systems;automatic detection;finite state machine based requirements specifications;out-of-time supervisor;real-time systems;requirements specification;software failures;software supervisor;software testing;supervisor computational complexity;worst-case response time;Application software;Automata;Computational complexity;Condition monitoring;Delay;Prototypes;Software prototyping;Software testing;Telephony;Time measurement},
doi={10.1109/RTTAS.1997.601351},}

@INPROCEEDINGS{Leavens00:JML,
    author = {Gary T. Leavens and K. Rustan M. Leino and Erik Poll and Clyde Ruby and Bart Jacobs},
    title = {JML: notations and tools supporting detailed design in Java},
    booktitle = {IN OOPSLA 2000 COMPANION},
    year = {2000},
    pages = {105--106},
    publisher = {ACM}
}

@ARTICLE{Meyer88:Eiffel,
    author = {Bertrand Meyer},
    title = {Eiffel: A language and environment for software engineering},
    journal = {The Journal of Systems and Software},
    year = {1988}
}

@article{Utting12:MBT,
author = {Utting, M. and Pretschner, A. and Legeard, B.},
title = {A taxonomy of model-based testing approaches},
journal = {Software Testing, Verification and Reliability},
volume = {22},
number = {5},
publisher = {John Wiley \& Sons, Ltd},
issn = {1099-1689},
url = {http://dx.doi.org/10.1002/stvr.456},
doi = {10.1002/stvr.456},
pages = {297--312},
keywords = {model-based testing approaches, taxonomy, survey},
year = {2012},
}

@incollection{Groz08:Inference,
year={2008},
isbn={978-3-540-68514-2},
booktitle={Testing of Software and Communicating Systems},
volume={5047},
series={Lecture Notes in Computer Science},
doi={10.1007/978-3-540-68524-1_16},
title={Modular System Verification by Inference, Testing and Reachability Analysis},
url={http://dx.doi.org/10.1007/978-3-540-68524-1_16},
publisher={Springer Berlin Heidelberg},
author={Groz, R. and Li, K. and Petrenko, A. and Shahbaz, M.},
pages={216-233}
}

@book{Takanen08:fuzzing,
Author={Takanen, A. and DeMott, J. and Miller, C.},
Title={Fuzzing for Software Security Testing and Quality Assurance},
year={2008},
Publisher={Artech House, Inc.}}

@INPROCEEDINGS{Shrestha11:AssertionOracle,
author={Shrestha, K. and Rutherford, M.J.},
booktitle={Software Testing, Verification and Validation (ICST), 2011 IEEE Fourth Int'l Conf. on}, title={An Empirical Evaluation of Assertions as Oracles},
year={2011},
pages={110-119},
keywords={Java;data mining;program testing;Java modeling language;assertion-based oracles;code-based metrics;data mining;muJava mutation testing tool;runtime assertion checking;software testing;synthetic bugs;test oracles;Computer bugs;Java;Measurement;Runtime;Software testing;Systematics;design by contract;empirical study;runtime assertion checking;test oracles},
doi={10.1109/ICST.2011.50},}

@inproceedings{Chen03:MetamorphicTesting,
 author = {Chen, T. Y. and Kuo, F.-C. and Tse, T. H. and Zhou, Z. Q.},
 title = {Metamorphic Testing and Beyond},
 booktitle = {Proceedings of the Eleventh Annual Int'l Workshop on Software Technology and Engineering Practice},
 series = {STEP '03},
 year = {2003},
 isbn = {0-7695-2218-1},
 pages = {94--100},
 numpages = {7},
 url = {http://dl.acm.org/citation.cfm?id=1032663.1034396},
 acmid = {1034396},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Follow-up test cases, metamorphic testing, semi-proving, successful test case, test case selection strategy, testing oracle},
}

@inproceedings{Ernst99:InvariantDetection,
 author = {Ernst, Michael D. and Cockrell, Jake and Griswold, William G. and Notkin, David},
 title = {Dynamically discovering likely program invariants to support program evolution},
 booktitle = {Proceedings of the 21st Int'l Conf. on Software engineering},
 series = {ICSE '99},
 year = {1999},
 isbn = {1-58113-074-0},
 location = {Los Angeles, California, USA},
 pages = {213--224},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/302405.302467},
 doi = {10.1145/302405.302467},
 acmid = {302467},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dynamic analysis, execution traces, formal specification, logical inference, pattern recognition, program invariants, software evolution},
}

@ARTICLE{Prowell03:DerivedOracle,
author={Prowell, S.J. and Poore, J.H.},
journal={Software Engineering, IEEE Transactions on}, title={Foundations of sequence-based software specification},
year={2003},
volume={29},
number={5},
pages={417-429},
keywords={formal specification;software engineering;complete specification;consistent specification;sequence enumeration method;sequence-based software specification;software development cost reduction;software development process;software maintenance cost reduction;specification writing;traceably correct specification;Computer Society;Control systems;Costs;Programming;Risk management;Software development management;Software maintenance;Software safety;Software systems;Writing},
doi={10.1109/TSE.2003.1199071},
ISSN={0098-5589},}

@inproceedings{Coppit05:assertions,
 author = {Coppit, D. and Haddox-Schatz, J.M.},
 title = {On the Use of Specification-Based Assertions as Test Oracles},
 booktitle = {Proceedings of the 29th Annual IEEE/NASA on Software Engineering Workshop},
 series = {SEW '05},
 year = {2005},
 isbn = {0-7695-2306-4},
 pages = {305--314},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/SEW.2005.33},
 doi = {10.1109/SEW.2005.33},
 acmid = {1106710},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@article{Howden78:oracle,
author = {W.E. Howden},
title = {Theoretical and Empirical Studies of Program Testing},
journal ={IEEE Transactions on Software Engineering},
volume = {4},
number = {4},
issn = {0098-5589},
year = {1978},
pages = {293-298},
doi = {http://doi.ieeecomputersociety.org/10.1109/TSE.1978.231514},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@book{Binder00:testingOO,
Author={Binder, R.},
Title={Testing Object-Oriented Systems: Models, Patterns, and Tools},
year={2000},
Publisher={Addison-Wesley}}

@book{Silver12:signal,
Author= {Silver, N.},
Title= {The Signal and the Noise: Why So Many Predictions Fail---but Some Don't},
Publisher= "Penguin Group",
year="2012",
}

@INPROCEEDINGS{Sen06:jcute,
    author = {Sen, K. and Agha, G.},
    title = {CUTE and jCUTE: Concolic unit testing and explicit path model-checking tools},
    booktitle = {In CAV},
    year = {2006},
    pages = {419--423},
    publisher = {Springer}
}

@inproceedings{BS07:PacemakerChallenge,
author= {Boston Scientific},
title= {PACEMAKER System Specification},
booktitle={Pacemaker Formal Methods Challenge},
year={2007},
publisher={Software Quality Research Lab}}

@inproceedings{Lin04:steering,
 author = {Lin, L. and Ernst, M. D.},
 title = {Improving the adaptability of multi-mode systems via program steering},
 booktitle = {Proceedings of the 2004 ACM SIGSOFT Int'l symposium on Software testing and analysis},
 series = {ISSTA '04},
 year = {2004},
 isbn = {1-58113-820-2},
 location = {Boston, Massachusetts, USA},
 pages = {206--216},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1007512.1007540},
 doi = {10.1145/1007512.1007540},
 acmid = {1007540},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {adaptability, mode selection, multi-mode systems, program steering},
}

@inproceedings{Kannan00:steering,
    author = {Kannan, S. and Kim, M. and Lee, I. and Sokolsky, O. and Viswanathan, M.},
    title = {Run-time Monitoring and Steering based on Formal Specifications},
    year = {2000},
    booktitle={Workshop on Modeling Software System Structures in a Fastly Moving Scenario}
}

@ARTICLE{Gu94:steering,
    author = {Gu, W. and Vetter, J. and Schwan, K.},
    title = {An Annotated Bibliography of Interactive Program Steering},
    journal = {ACM SIGPLAN Notices},
    year = {1994},
    volume = {29}
}

@ARTICLE{Harman13:oraclesurvey,
author={Barr, E.T. and Harman, M. and McMinn, P. and Shahbaz, M. and Shin Yoo},
journal={Software Engineering, IEEE Transactions on},
title={The Oracle Problem in Software Testing: A Survey},
year={2015},
month={May},
volume={41},
number={5},
pages={507-525},
keywords={formal specification;program testing;contract-driven development;domain specific information;informal oracle guidance;informal specifications;metamorphic testing;oracle automation;software testing practice;software testing research;test oracle information;test oracle problem;Automation;Licenses;Market research;Probabilistic logic;Reliability;Software testing;Automatic testing;Test oracle;Testing formalism;automatic testing;testing formalism},
doi={10.1109/TSE.2014.2372785},
ISSN={0098-5589},}

@inproceedings{McMinn10:humanoracle,
 author = {McMinn, Phil and Stevenson, Mark and Harman, Mark},
 title = {Reducing qualitative human oracle costs associated with automatically generated test data},
 booktitle = {Proceedings of the First Int'l Workshop on Software Test Output Validation},
 series = {STOV '10},
 year = {2010},
 isbn = {978-1-4503-0138-1},
 location = {Trento, Italy},
 pages = {1--4},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1868048.1868049},
 doi = {10.1145/1868048.1868049},
 acmid = {1868049},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@INPROCEEDINGS{Harman10:humanoracle,
author={Harman, M. and Sung, K. and Lakhotia, K. and McMinn, P. and Yoo, S.},
booktitle={Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third Int'l Conf. on},
title={Optimizing for the Number of Tests Generated in Search Based Test Data Generation with an Application to the Oracle Cost Problem},
year={2010},
pages={182-191},
keywords={formal specification;program testing;branch coverage;checkable specifications;contract driven development;nontrivial search spaces;oracle cost problem;search based test data generation;Application software;Automatic testing;Benchmark testing;Cost function;Educational institutions;Humans;Object oriented modeling;Software algorithms;Software testing;System testing;oracle cost;search based testing;test suite minimization},
doi={10.1109/ICSTW.2010.31},}

@inproceedings{Afshan2013:humanoracle,
  title={Evolving Readable String Test Inputs Using a Natural Language Model to Reduce Human Oracle Cost},
  author={Afshan, Sheeva and McMinn, Phil and Stevenson, Mark},
  booktitle={Int. Conf. on Software Testing, Verification and Validation (ICST)},
  year={2013}
}

@incollection{Tretmans08:ioco,
  title={Model based testing with labelled transition systems},
  author={Tretmans, Jan},
  booktitle={Formal methods and testing},
  pages={1--38},
  year={2008},
  publisher={Springer}
}

@ARTICLE{Lee96:FSMTesting,
author={Lee, D. and Yannakakis, M.},
journal={Proceedings of the IEEE}, title={Principles and methods of testing finite state machines-a survey},
year={1996},
volume={84},
number={8},
pages={1090-1123},
keywords={conformance testing;finite state machines;identification;logic testing;protocols;reviews;sequences;sequential circuits;FSM testing;automata theory;communication protocols;conformance testing;finite state machines;sequential circuit testing;Automata;Automatic testing;Circuit testing;Fault detection;Paper technology;Protocols;Sequential analysis;Sequential circuits;Software testing;System testing},
doi={10.1109/5.533956},
ISSN={0018-9219},}

@ARTICLE{EnNouaary02:realtime,
author={En-Nouaary, A. and Dssouli, R. and Khendek, F.},
journal={Software Engineering, IEEE Transactions on}, title={Timed Wp-method: testing real-time systems},
year={Nov},
volume={28},
number={11},
pages={1023-1038},
keywords={automata theory;formal specification;program testing;real-time systems;constrained input/output signals;correctness;fault detection;generalized Wp-method;granularity;grid automaton;nondeterministic timed finite state machine;real-time systems testing;region graph;semantics;software system;state characterization technique;subautomaton;syntax;timed Wp-method;timed input output automaton;Air traffic control;Automata;Automatic testing;Fault detection;Patient monitoring;Real time systems;Software systems;Software testing;System testing;Time factors},
doi={10.1109/TSE.2002.1049402},
ISSN={0098-5589},}

@inproceedings{larsen2005testing,
  title={Testing real-time embedded software using UPPAAL-TRON: an industrial case study},
  author={Larsen, Kim G and Mikucionis, Marius and Nielsen, Brian and Skou, Arne},
  booktitle={Proceedings of the 5th ACM international conference on Embedded software},
  pages={299--306},
  year={2005},
  organization={ACM}
}

@INPROCEEDINGS{Larsen04:realtimeuppal,
    author = {Larsen, K. G. and Mikucionis, M. and Nielsen, B.},
    title = { Online Testing of Real-time Systems using {UPPAAL}},
    booktitle = {Int'l workshop on formal approaches to testing of software (FATES 04)},
    year = {2004},
    publisher = {Springer}
}

@inproceedings{Arcuri10:environmentoracles,
 author = {Arcuri, Andrea and Iqbal, Muhammad Zohaib and Briand, Lionel},
 title = {Black-box system testing of real-time embedded systems using random and search-based testing},
 booktitle = {Proceedings of the 22nd IFIP WG 6.1 Int'l Conf. on Testing software and systems},
 year = {2010},
 isbn = {3-642-16572-9, 978-3-642-16572-6},
 location = {Natal, Brazil},
 pages = {95--110},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1928028.1928036},
 acmid = {1928036},
 publisher = {Springer-Verlag},
 keywords = {MARTE, OCL, UML, branch distance, context, environment, model based testing, search based software engineering},
}


@INPROCEEDINGS{Mayer04:statoracles,
    author = {Mayer, J. and Guderlei, R.},
    title = {Test Oracles Using Statistical Methods},
    booktitle = {In: Proceedings of the First Int'l Workshop on Software Quality, Lecture Notes in Informatics P-58, K�llen Druck+Verlag GmbH},
    year = {2004},
    pages = {179--189},
    publisher = {Springer}
}

@INPROCEEDINGS{Guderlei07:statoracles,
author={Guderlei, R. and Mayer, J.},
booktitle={Quality Software, 2007. QSIC '07. Seventh Int'l Conf. on}, title={Statistical Metamorphic Testing Testing Programs with Random Output by Means of Statistical Hypothesis Tests and Metamorphic Testing},
year={Oct.},
pages={404-409},
keywords={program testing;statistical analysis;implementation under test;program testing;random output;randomized software;software testing;statistical hypothesis tests;statistical metamorphic testing;Collaborative software;Context modeling;Error correction;Investments;Probability;Random variables;Software quality;Software testing;Statistical analysis;Statistical distributions},
doi={10.1109/QSIC.2007.4385527},
ISSN={1550-6002},}

@inproceedings{Whalen13:OMCDC,
 author = {Whalen, M. and Gay, G. and You, D. and Heimdahl, M.P.E. and Staats, M.},
 title = {Observable Modified Condition/Decision Coverage},
 booktitle = {Proceedings of the 2013 Int'l Conf. on Software Engineering},
 month = {May},
 year = {2013},
 publisher = {ACM}
}

@inproceedings{Hiller01:propagation,
 author = {Hiller, M. and Jhumka, A. and Suri, N.},
 title = {An Approach for Analysing the Propagation of Data Errors in Software},
 booktitle = {Proceedings of the 2001 Int'l Conf. on Dependable Systems and Networks (formerly: FTCS)},
 series = {DSN '01},
 year = {2001},
 isbn = {0-7695-1101-5},
 pages = {161--172},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=647882.738068},
 acmid = {738068},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@ARTICLE{Andrews06:mutation,
author={Andrews, J.H. and Briand, L.C. and Labiche, Y. and Namin, A.S.},
journal={Software Engineering, IEEE Transactions on}, title={Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria},
year={2006},
month={aug. },
volume={32},
number={8},
pages={608 -624},
keywords={empirical assessment;experimental design;industrial program;mutation analysis;mutation operators;program control criteria;program data flow criteria;program debugging;software fault detection probability;software testing coverage criteria;data flow analysis;design of experiments;probability;program control structures;program debugging;program testing;software fault tolerance;},
doi={10.1109/TSE.2006.83},
ISSN={0098-5589},}

@INPROCEEDINGS{Gay09:recommend,
author={Gay, G. and Haiduc, S. and Marcus, A. and Menzies, T.},
booktitle={Software Maintenance, 2009. ICSM 2009. IEEE Int'l Conf. on}, title={On the use of relevance feedback in {IR}-based concept location},
year={2009},
month={sept.},
volume={},
number={},
pages={351 -360},
keywords={information retrieval;lexical-based concept location;query writing;relevance feedback;software evolution;query processing;relevance feedback;software engineering;},
doi={10.1109/ICSM.2009.5306315},
ISSN={1063-6773},}

@book{Manning09:IR,
Author= "Christopher Manning and Prabhakar Raghavan and Hinrich Schutze",
Title= {An Introduction to Information Retrieval},
Publisher= "Cambridge University Press",
year="2009",
}

@article{Linden98:patent,
 author = {Gregory Linden and Jennifer Jacobi and Eric Benson},
 title = {Collaborative recommendations using item-to-item similarity mappings},
 journal = {US Patent 6266649},
 year = {1998},
 url = {http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=/netahtml/PTO/search-bool.html&r=1&f=G&l=50&co1=AND&d=PTXT&s1=6,266,649.PN.&OS=PN/6,266,649&RS=PN/6,266,649},
}

@book{Ricci11:recommend,
Author= "Francesco Ricci and Lior Rokach and Bracha Shapira",
Title= {Recommender Systems Handbook},
Publisher= "Springer",
year="2011",
}

@book{Salton83:ir,
  Author =   "Salton, G. and McGill, M.",
  Title =    {Introduction to Modern Information Retrieval},
  Publisher =    "McGraw-Hill",
  year =     "1983",
}

@article{Melville10:recommend,
 author = {Prem Melville and Vikas Sindhwani},
 title = {Recommender Systems},
 journal = {Encyclopedia of Machine Learning},
 year = {2010},
 url = {http://www.prem-melville.com/publications/recommender-systems-eml2010.pdf},
}

@inproceedings{schumann09,
 author = {Johann Schumann, Karen Gundy-Burlet, Corina Pasareanu, Tim Menzies, and Anthony Barrett},
 title = {Software V\&V Support by Parametric Analysis of Large Software Simulation Systems},
 booktitle = {2009 IEEE Aerospace Conference},
 year = {2009},
 }

@inproceedings{gundy07,
        author = "Gundy-Burlet, K. and Schumann, J. and Barrett, T.  and Menzies, T.",
        year   = 2007,
        title  = "Parametric Analysis of Antares Re-Entry Guidance Algorithms using Advanced Test Generation and
                           Data Analysis",
        booktitle="9th International Symposium on Artifical Intelligence, Robotics and Automation in Space"
}

@inproceedings{gundy09,
        author = "Gundy-Burlet, K. and Schumann, J. and Barrett, T.  and Menzies, T.",
        year   = 2009,
        title  = "Parametric Analysis of a Hover Test Vehicle Using Advanced Test Generation and Data Analysis",
        booktitle="AIAA Aerospace"
}

@misc{ying02,
  author =       "Y. Hu",
  title =        "Treatment learning",
  note =         "Masters thesis, Unviersity of British Columbia,
                  Department of Electrical and Computer
                  Engineering. In preperation.",
  year =         2002
}

@inproceedings{Bay99:stucco,
 author = {Bay, Stephen D. and Pazzani, Michael J.},
 title = {Detecting Change in Categorical Data: Mining Contrast Sets},
 booktitle = {Proceedings of the Fifth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
 series = {KDD '99},
 year = {1999},
 isbn = {1-58113-143-7},
 location = {San Diego, California, USA},
 pages = {302--306},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/312129.312263},
 doi = {10.1145/312129.312263},
 acmid = {312263},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Gay10:keys,
year={2010},
issn={0928-8910},
journal={Automated Software Engineering},
volume={17},
number={1},
doi={10.1007/s10515-009-0059-7},
title={Finding robust solutions in requirements models},
url={http://dx.doi.org/10.1007/s10515-009-0059-7},
publisher={Springer US},
author={Gay, Gregory and Menzies, Tim and Jalali, Omid and Mundy, Gregory and Gilkerson, Beau and Feather, Martin and Kiper, James},
pages={87-116},
language={English}
}

@article{Gay10:nasa,
 author = {Gay, Gregory and Menzies, Tim and Davies, Misty and Gundy-Burlet, Karen},
 title = {Automatically finding the control variables for complex system behavior},
 journal = {Automated Software Engg.},
 issue_date = {December  2010},
 volume = {17},
 number = {4},
 month = dec,
 year = {2010},
 issn = {0928-8910},
 pages = {439--468},
 numpages = {30},
 url = {http://dx.doi.org/10.1007/s10515-010-0072-x},
 doi = {10.1007/s10515-010-0072-x},
 acmid = {1842515},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Contrast-set learning, Monte Carlo filtering, Optimization, Search-based software engineering, Simulation},
}


@inproceedings{Kocaguneli10:cross,
 author = {Kocaguneli, Ekrem and Gay, Gregory and Menzies, Tim and Yang, Ye and Keung, Jacky W.},
 title = {When to use data from other projects for effort estimation},
 booktitle = {Proceedings of the IEEE/ACM Int'l Conf. on Automated software engineering},
 series = {ASE '10},
 year = {2010},
 isbn = {978-1-4503-0116-9},
 location = {Antwerp, Belgium},
 pages = {321--324},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1858996.1859061},
 doi = {10.1145/1858996.1859061},
 acmid = {1859061},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cross, data mining, effort estimation, within},
}


@article{Turhan09:cross,
 author = {Turhan, Burak and Menzies, Tim and Bener, Ay\c{s}e B. and Di Stefano, Justin},
 title = {On the relative value of cross-company and within-company data for defect prediction},
 journal = {Empirical Softw. Engg.},
 issue_date = {October   2009},
 volume = {14},
 number = {5},
 month = oct,
 year = {2009},
 issn = {1382-3256},
 pages = {540--578},
 numpages = {39},
 url = {http://dx.doi.org/10.1007/s10664-008-9103-7},
 doi = {10.1007/s10664-008-9103-7},
 acmid = {1612782},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Cross-company, Defect prediction, Learning, Metrics (product metrics), Nearest-neighbor filtering, Within-company},
}

@article{kitch07:cross,
	title="Cross- vs. Within-Company Cost Estimation Studies: A Systematic Review ",
	author="B. A. Kitchenham and E. Mendes and G. H.  Travassos",
    journal="IEEE Transactions on Software Engineering",
    pages="316-329",	
	month="May",
    year =2007
}
@INPROCEEDINGS{Zimmermann12:reopen,
author={Zimmermann, T. and Nagappan, N. and Guo, P.J. and Murphy, B.},
booktitle={Software Engineering (ICSE), 2012 34th Int'l Conf. on}, title={Characterizing and predicting which bugs get reopened},
year={2012},
month={june},
volume={},
number={},
pages={1074 -1083},
keywords={Microsoft Windows operating system;bug reopen;bug reports;bugs fixing;empirical case study;large-scale quantitative study;software development process;software system;statistical models;operating systems (computers);program debugging;software engineering;},
doi={10.1109/ICSE.2012.6227112},
ISSN={0270-5257},}

@INPROCEEDINGS{Haiduc12:retrieval,
author={Haiduc, S. and Bavota, G. and Oliveto, R. and Marcus, A. and De Lucia, A.},
booktitle={Software Engineering (ICSE), 2012 34th Int'l Conf. on}, title={Evaluating the specificity of text retrieval queries to support software engineering tasks},
year={2012},
month={june},
volume={},
number={},
pages={1273 -1276},
keywords={natural language text;preretrieval metric;query quality;software artifacts;software engineering tasks;source code;specificity evaluation;specificity metric;text retrieval queries;text retrieval-based concept location;natural languages;query processing;software metrics;text analysis;},
doi={10.1109/ICSE.2012.6227101},
ISSN={0270-5257},}

@INPROCEEDINGS{LeGoues12:repair,
author={Le Goues, C. and Dewey-Vogt, M. and Forrest, S. and Weimer, W.},
booktitle={Software Engineering (ICSE), 2012 34th Int'l Conf. on},
title={A systematic study of automated program repair: Fixing 55 out of 105 bugs for \$8 each},
year={2012},
month={june},
volume={},
number={},
pages={3 -13},
keywords={GenProg;algorithmic improvement;automated program repair;cloud computing resource;defect repair;genetic programming;grounded human-competitive cost measurement;off-the-shelf C program;open-source program;program bug;real-world program;repair cost;systematic evaluation;C language;cloud computing;genetic algorithms;program debugging;public domain software;software cost estimation;software maintenance;},
doi={10.1109/ICSE.2012.6227211},
ISSN={0270-5257},}

@inproceedings{Bell11:change,
 author = {Bell, Robert M. and Ostrand, Thomas J. and Weyuker, Elaine J.},
 title = {Does measuring code change improve fault prediction?},
 booktitle = {Proceedings of the 7th Int'l Conf. on Predictive Models in Software Engineering},
 series = {Promise '11},
 year = {2011},
 isbn = {978-1-4503-0709-3},
 location = {Banff, Alberta, Canada},
 pages = {2:1--2:8},
 articleno = {2},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/2020390.2020392},
 doi = {10.1145/2020390.2020392},
 acmid = {2020392},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code churn, empirical study, fault prediction, fault-percentile average, software faults},
}

@ONLINE{promise12,
     title  = "The PROMISE Repository of empirical software engineering data",
     month  = "June",
     year   = "2012",
     url    = "http://promisedata.googlecode.com",
     author = "Tim Menzies and
               Bora Caglayan and
               Ekrem Kocaguneli and
               Joe Krall and
               Fayola Peters and
               Burak Turhan
              "
 }

@inproceedings{Palma12:recommend,
 author  = {Francis Palma and Hadi Farzin and Yann-Gael Gueheneuc},
 title   = {Recommendation system for design patterns in software development: An {DPR} overview},
 booktitle = {Third Int'l Workshop on Recommendation Systems for Software Engineering},
 year   = {2012},
}

@inproceedings{Heinemann12:recommend,
 author  = {Lars Heinemann},
 title   = {Facilitating Reuse in Model-Based Development with Context-Dependent Model Element Recommendations},
 booktitle = {Third Int'l Workshop on Recommendation Systems for Software Engineering},
 year   = {2012},
}

@article{Turhan12:datashift,
 author = {Burak Turhan},
 title = {On the dataset shift problem in Software Engineering prediction models},
 journal = {Empirical Software Engineering},
 volume = 17,
 year = 2012,
pages = {62-74},
}

@inproceedings{staats2012automated,
  title={Automated oracle creation support, or: how {I} learned to stop worrying about fault propagation and love mutation testing},
  author={Staats, M. and Gay, G. and Heimdahl, M.P.E.},
  booktitle={Proceedings of the 2012 Int'l Conf. on Software Engineering},
  pages={870--880},
  year={2012},
  organization={IEEE Press}
}

@article{Wilcoxon45:mww,
     jstor_articletype = {research-article},
     title = {Individual Comparisons by Ranking Methods},
     author = {Wilcoxon, Frank},
     journal = {Biometrics Bulletin},
     jstor_issuetitle = {},
     volume = {1},
     number = {6},
     jstor_formatteddate = {Dec., 1945},
     pages = {pp. 80-83},
     url = {http://www.jstor.org/stable/3001968},
     ISSN = {00994987},
     abstract = {},
     language = {English},
     year = {1945},
     publisher = {Int'l Biometric Society},
     copyright = {Copyright © 1945 Int'l Biometric Society},
    }

@book{Katz05logic,
  Author =   "Katz, R. and Boriello, G.",
  Title =    {Contemporary Logic Design},
  Publisher =    "Prentice-Hall",
  year =     "2005",
}

@ARTICLE{andrews03logfile,
author={Andrews, J.H. and Yingjun Zhang},
journal={Software Engineering, IEEE Transactions on},
title={General test result checking with log file analysis},
year={2003},
month={july},
volume={29},
number={7},
pages={ 634 - 648},
keywords={ event-based debugging; lightweight formal methods; log file; safety verification; software testing; state-machine-based formalism; test oracles; unit testing; finite state machines; formal specification; program debugging; program testing; program verification;},
doi={10.1109/TSE.2003.1214327},
ISSN={0098-5589},}

@incollection {chen2004art,
   author = {Chen, T. and Leung, H. and Mak, I.},
   affiliation = {School of Information Technology, Swinburne University of Technology, Hawthorn, Victoria 3122, Australia},
   title = {Adaptive Random Testing},
   booktitle = {Advances in Computer Science - ASIAN 2004. Higher-Level Decision Making},
   series = {Lecture Notes in Computer Science},
   editor = {Maher, Michael},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-24087-7},
   keyword = {Computer Science},
   pages = {3156-3157},
   volume = {3321},
   url = {http://dx.doi.org/10.1007/978-3-540-30502-6_23},
   year = {2005}
}

@inproceedings{arcuri2010random,
 author  = {Andrea Arcuri and
       Muhammad Zohaib Z. Iqbal and
       Lionel C. Briand},
 title   = {Formal analysis of the effectiveness and predictability
       of random testing},
 booktitle = {ISSTA},
 year   = {2010},
 pages   = {219-230},
}

@inproceedings{arcuri2011random,
 author  = {Andrea Arcuri and
       Lionel C. Briand},
 title   = {Adaptive Random Testing: An Illusion of Effectiveness?},
 booktitle = {ISSTA},
 year   = {2011},
}

@article{haran07classification,
  author =       {Murali Haran and Alan Karr and Michael Last and
Alessandro Orso and Adam A. Porter and Ashish Sanil and Sandro Fouch\'e},
  title =        {{Techniques for Classifying Executions of Deployed Software to Support Software Engineering Tasks}},
  journal = 	 {IEEE Transactions on Software Engineering (TSE)},
  volume =       {33},
  number =       {5},
  year =         {2007},
  month =        {May},
  pages =        {287--304},
}

@article{kanstern09oracle,
author = {Teemu Kanstren},
title = {Program Comprehension for User-Assisted Test Oracle Generation},
journal ={Software Engineering Advances, Int'l Conf. on},
volume = {0},
isbn = {978-0-7695-3777-1},
year = {2009},
pages = {118-127},
doi = {http://doi.ieeecomputersociety.org/10.1109/ICSEA.2009.26},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@inproceedings{majumdar2007concolic,
 author  = {Rupak Majumdar and
       Koushik Sen},
 title   = {Hybrid Concolic Testing},
 booktitle = {ICSE},
 year   = {2007},
 pages   = {416-426},
}

@inproceedings{memon00oracle,
  title={Automated test oracles for GUIs},
  author={Memon, A.M. and Pollack, M.E. and Soffa, M.L.},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={25},
  number={6},
  pages={30-39},
  year={2000},
  organization={ACM}
}

@inproceedings{memon03oracle,
  author = {Memon, A. and Banerjee, I. and Nagarajan, A.},
  booktitle = {Automated Software Engineering, 2003. Proceedings. 18th IEEE Int'l Conf. on},
  interhash = {55490e0e8446fb14bfe756fcb9f0584e},
  intrahash = {f974d2f78c866d8c74d21522ee28645a},
  pages = { 164-173},
  title = {What test oracle should I use for effective GUI testing?},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1240304},
  year = 2003,
  timestamp = {2010-01-14T09:44:53.000+0100},
  keywords = {GUI empirical_study event-based oracle test_oracle testing},
  added-at = {2010-01-14T09:44:53.000+0100},
  issn = {1527-1366},
  description = {Welcome to IEEE Xplore 2.0: What test oracle should I use for effective GUI testing?},
  biburl = {http://www.bibsonomy.org/bibtex/2f974d2f78c866d8c74d21522ee28645a/ist_spl},
  doi = {10.1109/ASE.2003.1240304},
  month = {Oct.},
}

@INPROCEEDINGS{memon04oracle,
author={Memon, A. and Xie, Q.},
booktitle={Automated Software Engineering, 2004. Proceedings. 19th Int'l Conf. on},
title={Using transient/persistent errors to develop automated test oracles for event-driven software},
year={2004},
month={sept.},
volume={},
number={},
pages={186 -195},
keywords={automated test oracles;event driven software;persistent errors;resource utilization;software intensive systems;test case execution;transient errors;automatic testing;graphical user interfaces;program testing;resource allocation;},
doi={10.1109/ASE.2004.1342736},
ISSN={1068-3062},}

@article{meyer09autotest,
  author    = {Bertrand Meyer and
               Arno Fiva and
               Ilinca Ciupa and
               Andreas Leitner and
               Yi Wei and
               Emmanuel Stapf},
  title     = {Programs That Test Themselves},
  journal   = {IEEE Computer},
  volume    = {42},
  number    = {9},
  year      = {2009},
  pages     = {46-55},
  urltopdf       = {http://doi.ieeecomputersociety.org/10.1109/MC.2009.296}
}

@phdthesis{staats11:thesis,
author={Staats, M.},
title={The Influence of Multiple Artifacts on the Effectiveness of Software Testing},
school={University of Minnesota},
year={2011}
}

          %
          % SCR Papers
          %

@inproceedings{Atlee91:model-checking,
  Author =   "Joanne M. Atlee and John D. Gannon",
  Title =    "State-Based Model Checking of Event-Driven System
                  Requirements",
  Booktitle =    "Proceedings of the ACM SIGSOFT '91 Conf. on
                  Software for Critical Systems. Software Engineering
                  Notes. Volume 16 Number 5",
  Year =     "1991",
  annote =   {\commentmats{Describes how an A\& like specification
                  can be translated into Clarke's CTL and model
                  chacking applied to check for safety properties. The
                  description is clear and they give an algorithm for
                  how this could be done. The approach is applied to
                  two small examples. They conclude that the approach
                  is feasable and that the logic is too weak to
                  describe all safety properties. Model Checking, A7,
                  SCR, CTL, Safety Analysis} \commentjeff{See also the
                  journal version of the
                  paper~\cite{Atlee93:model-checking}}}
}

@article{Atlee93:model-checking,
  AUTHOR =   {J.M. Atlee and J. Gannon},
  TITLE =    {State-Based Model Checking of Event-Driven System
                  Requirements},
  JOURNAL =  tse,
  YEAR =     1993,
  VOLUME =   19,
  NUMBER =   1,
  PAGES =    {24--40},
  MONTH =    jan,
  annote =   {\commentget{}}
}

@Article{Atlee93:timing,
  author =   {J.M. Atlee and J. Gannon},
  title =    {Analyzing Timing Requirements},
  journal =  {Proceedings of the Int'l Symposium on
                  Software Testing and Analysis},
  pages =    {117-127},
  year =     {1993},
  month =    {June},
  annote =   {\jefftoread}
}

@InProceedings{Atlee96:model-checking,
  author =   {J.M. Atlee and M.A. Buckley},
  title =    {A Logic-Model Semantics for {SCR} Software
                  Requirements},
  booktitle =    {Proceedings of the 1996 ACM SIGSOFT Int'l
                  Symposium on Software Testing and Analysis
                  (ISSTA'96)},
  editor =   {S.J. Zeil},
  year =     {1996},
  month =    {January},
  pages =    {280--292},
  annote =   {\jefftoread}
}

@InProceedings{Sreemani96:model-checking,
  author =   {T. Sreemani and J.M. Atlee},
  title =    {Feasibility of Model Checking Software Requirements},
  booktitle =    {11th Annual Conf. on Computer Assurance
                  {COMPASS}},
  year =     {1996},
  month =    {June},
  pages =    "77-88"
}

@InProceedings{Bharadwaj97:737autopilot,
  author =   {Ramesh Bharadwaj and Constance Heimtmeyer},
  title =    {Applying the {SCR} Requirements Method to a Simple
                  Autopilot},
  booktitle =    {Fourth NASA Langley Formal Methods Workshop},
  year =     {1997},
  month =    {September},
  annote =   {\commentjeff{This is yet another Conf. paper
                  case study put forth by the NRL group. Usefull
                  reading as such. Also, this paper compares SCR to
                  PVS. They conclude, obviously, that a specialize
                  language like SCR does a better job at representing
                  problems in this domain than does a more general
                  language like PVS.}}
}

@InProceedings{Bharadwaj96:737autopilot,
  author =   {R.Bharadwaj and C. Heitmeyer},
  title =    {Applying the {SCR} Requirements Specification Method
                  to Practical Systems: A Case Study},
  booktitle =   {The Twenty-first Software Engineering Workshop},
  year =  {1996},
  month =    {December},
  OPTaddress =  {Greenbelt, MD},
  OPTorganization ={NASA GSFC},
  annote =   {\commentjeff{See~\cite{Bharadwaj97:737autopilot}}}
}

@InProceedings{Bharadwaj97,
  author =   {R. Bharadwaj and C. Heitmeyer},
  title =    {Verifying {SCR} Requirements Specifications Using
                  State Exploration},
  booktitle =    {First {ACM SIGPLAN} Workshop on Automatic Analysis
                  of Software},
  year =     {1997},
  month =    {Jan},
}

@InProceedings{Blackburn97:testing,
  author =   {M.R. Blackburn and R.D. Busser and J.S. Fontaine},
  title =    {Automatic Generation of Test Vectors for {SCR}-Style
                  Specifications},
  booktitle =    {Conf. on Computer Assurance (COMPASS)},
  pages =    {54-67},
  year =     {1997},
  annote =   {\jefftoread}
}

@inproceedings{Jones01:MCDC-reduction,
 author = {James Jones and Mary Jean Harrold},
 title = {Test-Suite Reduction and Prioritization for Modified Condition/Decision Coverage},
 booktitle = {ICSM '01: Proceedings of the IEEE Int'l Conf. on Software Maintenance (ICSM'01)},
 year = {2001},
 isbn = {0-7695-1189-9},
 pages = {92},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@article{Jones03:MCDC-reduction,
 author = {James Jones and Mary Jean Harrold},
 title = {Test-Suite Reduction and Prioritization for Modified Condition/Decision Coverage},
 JOURNAL =  tse,
 YEAR =     2003,
  VOLUME =   29,
  NUMBER =   3,
  PAGES =    {195--209},
  MONTH =    {March},
  annote =   {\commentget{}}
}


@InProceedings{Chechik94,
  author =   {M. Chechik and J. Gannon},
  title =    {Automatic Verification of Requirements
                  Implementations},
  booktitle =    {Proceedings of the 1994 ACM SIGSOFT Int'l
                  Symposium on Software Testing and Analysis},
  year =     {1994},
  pages =    {1-14},
  OPTannote =    {},
  annote =   {\jefftoread \commentmike{The paper describes an
                  approach for verifying that a C program matches the
                  requirements of an SCR specification. The system
                  uses annotated comments to represent the behavior of
                  the program. The annotations are COND, which
                  notifies the checker that a condition is true (like
                  a C assertion), UPDATE, which updates the value of a
                  controlled variable, SET, which sets the value of a
                  monitored variable, INITIAL, which provides initial
                  values to both monitored and controlled variables,
                  and PERFORM INITIAL, which resets the variables to
                  their initial values. In SCR, in order for the
                  system state to change, an implicit event must occur
                  (one of the @T or @F conditions). The checker tests
                  all UPDATE annotations to ensure that prior to the
                  update, an assignment occurred which would match the
                  @T or @F conditions. The checker maintains the
                  current values of all variables, so the WHEN
                  conditions for UPDATE-ing a controlled variable can
                  also be verified. There are some issues with this
                  analysis; the most serious is that it is not
                  conservative. Since the value of a particular
                  variable is not always known (different control
                  paths of the program could set the value
                  differently), the system does not 'know' with
                  certainty that an assignment will change the value
                  of the variable. If the value of the variable does
                  not change, then the checker's implicit event
                  analysis does not report the error. The example
                  shown deals exclusively with Boolean variables;
                  although the authors discuss how this checker can be
                  used with variables of other types, they do so with
                  a considerable amount of hand-waving. I don't think
                  the system can be used with integer variables that
                  assume more than a handful of values, making it
                  useless for practical systems. Also, the annotations
                  must be provided by the programmer; they often look
                  quite different than the code that they are supposed
                  to represent. It is a non-trivial task to write the
                  annotations, and to verify that the annotations
                  actually match the code in question! }}
}

@InProceedings{Chechik95,
  author =   {M. Chechik and J. Gannon},
  title =    {Automatic Analysis of Consistency between
          Implementations and Requirements: A Case Study},
  booktitle =    {Proceedings of the Tenth Annual Conf. on
          Computer Assurance, COMPASS 95},
  year =     {1995},
  pages =    {123-131},
  annote =   {\miketoread, \jefftoread}
}

@InProceedings{Chechik07,
  author =   {M. Chechik and M. Gheorghiu and A. Gurfinkel},
  title =    {Finding Environmental Guarantees},
  booktitle =    {Proceedings of Fundamental Approaches to Software Engineering ({FASE'07})},
  year =     {To appear in 2007}
}

@article{Faulk92,
  author =   " S. Faulk and J. Brackett and P. Ward and Kirby,
                  Jr., J",
  title =    "The {CoRE} method for real-time requirements",
  journal =  "IEEE Software",
  volume =   "9",
  number =   "5",
  pages =    "22-33",
  month =    "September",
  year =  "1992"
}
@InProceedings{Faulk94:CoRE,
  author =   {Stuart Faulk and Lisa Finneran and Kirby, James
                  Jr. and Sudhir Shah and James Sutton},
  title =    {Experience Applying the {CoRE} Method to the
                  Lockheed {C-103J} Software Requirements},
  booktitle =    {Proceedings of the Ninth Annual Conf. on
                  Computer Assurance ({COMPASS})},
  pages =    {3-8},
  year =     {1994},
  annote =   {\jefftoread}
}
@inproceedings{Heitmeyer95,
  Author =   "C. L. Heitmeyer and B. L. Labaw and D. Kiskis",
  Title =    "Consistency Checking of {SCR}-Style Requirements
                  Specifications",
  Booktitle =    "Proceedings of the Second IEEE Int'l
                  Symposium on Requirements Engineering",
  Year =     "1995",
  pages =    {56--65},
  Month =    "March",
  Mark =     "",
  annote =   {\commentget{}}
}
@InProceedings{Heitmeyer95:tools,
  author =   {C. Heitmeyer and A. Bull and C. Gasarch and
                  B. Labaw},
  title =    {{SCR}$^*$: A Toolset for Specifying and Analyzing
                  Requirements},
  booktitle =    {Proceedings of the Tenth Annual Conf. on
                  Computer Assurance, COMPASS 95},
  year =     {1995},
  annote =   {\jefftoread}
}

@Article{Heitmeyer96:consistency,
  author =   {C.L. Heitmeyer and R.D. Jeffords and
          B.G. Labaw},
  title =    {Automated Consistency Checking of Requirements
          Specifications},
  journal =      {ACM Transactions on Software Engineering and
          Methodology},
  year =     {1996},
  volume =   {5},
  number =   {3},
  month =    {July},
  pages =    {231-261}
}
@InProceedings{Heitmeyer97:tools,
  author =   {C. Heitmeyer and J. Kirby and B. Labaw},
  title =    {Tools for Formal Specification, Verification, and
                  Validation of Requirements},
  booktitle =    {{COMPASS} 97. Are we Making Progress Towards
                  Computer Assurance?},
  pages =    {xxx},
  year =     {1997},
  annote =   {\jefftoread}
}

@InProceedings{Heitmeyer98:wcp,
  author =   {C.L. Heitmeyer and J. Kirby and B.G. Labaw},
  title =    {Applying the {SCR} Requirements Method to a Weapons
                  Control Panel: An Experience Report},
  booktitle =   {Proceedings of the Second Workshop on Formal Methods
                  in Software Practice (FMSP'98)},
  year =  {1998},
  month =    {March},
  address =  {Clearwater Beach, FL},
  annote =   {\commentjeff{This paper discusses the weapons
                  control panel SCR case study. It focuses on the
                  results of applying the SCR tools as well as the
                  customized simulator that was developed for the
                  project.}}
}

@techreport {Heninger78:A7-spec,
  Author =   {K.L. Heninger and J.W. Kallander and J.E. Shore and
                  D.L. Parnas},
  Title =    {{S}oftware {R}equirements for the {A}-7E {A}ircraft},
  Institution =  {Naval Research Laboratory},
  Address =  {Washington, D.C.},
  Number =   {3876},
  Year =     {1978},
  Month =    {November}
}


@Article{Heninger80:A7-aircraft,
  author =   {K.L. Heninger},
  title =    {Specifying Software Requirements for Complex
                  Systems: New Techniques and Their Application},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {6},
  number =   {1},
  month =    {Januaray},
  year =     {1980},
  pages =    {2-13},
  annote =   {\commentmats{The A7 specification. Guidelines for
                  what we need and how we should do it. Very nice
                  approach. Useful methodology, just a structured
                  approach to the problem. Informal syntax in the
                  descriptions. Uses state diagrams to describe the
                  software behaviour. Output oriented, Modes, states,
                  organization, input, output}}
}
@Article{Jacky90:SCR-compare,
  author =   {J. Jacky},
  title =    {Formal Specifications for a Clinical Cyclotron
                  Control System},
  journal =  {SIGSOFT Software Engineering Notes},
  volume =   {15},
  number =   {4},
  year =     {1990},
  month =    {September},
  pages =    {45-54},
  annote =   {\commentget{shelved in both Wilson basement and
                  Walter Per stack 9} }
}
@Article{Kelly92:SCR-compare,
  author =   {J.C. Kelly and Y.S. Sherif},
  title =    {Comparison of Four Design Methods for Real-time
                  Software Developement},
  journal =  {Information and Software Technology},
  volume =   {34},
  number =   {2},
  year =     {1992},
  month =    {February},
  pages =    {74-82},
  annote =   {\commentget{shelved in Wilson basement } }
}
@InProceedings{Ray97:b-toolkit,
  author =   {I. Ray and P. Ammann},
  title =    {Using the {B-toolkit} to Ensure Safety in {SCR}
                  Specifications},
  booktitle =    {COMPASS '97. Are we Making Progress Towards Computer
                  Assurance?},
  year =     {1997},
  annote =   {\miketoread}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Compiler Papers
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Book{Appel98:compilers,
    author = {Andrew Appel},
    title = {Modern Compiler Implementation in {ML}},
    publisher = {Cambridge University Press},
    year = {1998},
    annote = {}
}

@Book{Aho86:compilers,
  author =   {Alfred V. Aho and Ravi Sethi and Jeffrey D. Ullman},
  title =    {Compilers: Principles, Techniques, and Tools},
  publisher =    {Addison-Wesley Publishing Company},
  year =     {1987},
  annote =   {}
}

@InProceedings{Morris73:compiler-correctness,
   author = {F. Lockwood Morris},
   title = {Advice on Structuring Compilers and Proving Them Correct},
   booktitle = {Principles of Programming Languages},
   year = {1973},
   pages = {144-152}
}

@InProceedings{Despeyroux86:translation-proof,
   author = {Joelle Despeyroux},
   title = {Proof of Translation in Natural Semantics},
   booktitle = {First Symposium on Logic In Computer Science (LICS)},
   month = {June},
   year = {1986}
}

@inbook{Drossopoulou98:towards,
   author = {S. Drossopoulou and S. Eisenbach},
    title = {Towards an Operations Semantics and Proof of Type Soundness for {Java}},
    booktitle = {Jim Alves-Foss, editor, Formal Syntax and Semantics of Java},
    publisher = {Springer-Verlag, Berlin Germany},
    year = {1998},
    chapter = {3},
    url = {citeseer.nj.nec.com/drossopoulou98towards.html}
}

@inbook{Whalen10:book_chapter,
   author = {Michael W. Whalen and David A. Greve and Lucas G. Wagner},
    title = {Model Checking Information Flow},
    booktitle = {David Hardin, editor, Design and Verification of Microprocessor Systems for High-Assurance Applications},
    publisher = {Springer-Verlag, Berlin Germany},
    year = {2010},
    month = {March}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Logic Books
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{Boolos89:logic,
  author =   {George S Boolos and Richard C. Jeffrey},
  title =    {Computability and Logic},
  publisher =    {Cambridge University Press},
  year =     {1989},
  annote =   {}
}


@techreport{vanGlabbeek95:rule-negation,
  author =       {R. J. van Glabbeek},
  title =        {The Meaning of Negative Premises in Transition System Specifications II},
  institution =  {Stanford University},
  Number =       {STAN-CS-TN-95-16},
  Year =         {1995}
}



          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Term Rewriting
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{Baader98:term-rewriting,
  author =   {Franz Baader and Tobias Nipkow},
  title =    {Term Rewriting and All That},
  publisher =    {Cambridge University Press},
  year =     {1998},
  annote =   {}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Statemate Papers
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Ehrig97:petri-net,
  author =   {H. Ehrig and R. Geisler and M. Klar and J. Padberg},
  title =    {Horizontal and Vertical Structuring Techniques for
                  Statecharts},
  booktitle =    {8th Int'l Conf. on Concurency Theory,
                  CONCUR 97},
  year =     {1997},
  pages =    {181-195},
  annote =   {\commentget{Walter: Quarto QA76.58.I53}}
}

@article{vonderBeek94:statecharts,
   author = {Michael von der Beek},
   title = {A Comparison of Statecharts Variants},
   journal = {Formal Techniques in Real-Time and Fault-Tolerant Systems},
   volume = {526},
   year = {1994},
   series = {Lecture Notes in Computer Science}
}

@inproceedings{Harel85:reactive,
  author =   {D. Harel and A. Pnueli},
  title =    {On the development of reactive systems},
  booktitle =    {Logics and Models of Concurrent Systems},
  year =     {1985},
  editor =   {K.R. Apt},
  pages =    {477--498},
  publisher =    {Springer-Verlag}
}
@Article{Harel87:statecharts,
  author =   {D. Harel},
  title =    {Statecharts: A Visual Formalism for Complex Systems},
  journal =  {Science of Computer Programming},
  year =  {1987},
  volume =   {8},
  number =   {3},
  month =    {June},
  pages =    {231-274},
  OPTnote =  {},
  annote =   {\commentjeff{In this paper, Harel introduces the
                  statecharts formalism. This is the predecessor to
                  RSML. The execution is slightly different -- Harel
                  states that you need to tag all transitions in a
                  microstep and then take them all at once. This will
                  provide deterministic execution; however, you must
                  keep track of all the transitions you have taken and
                  possibly adjust the tags in the future if events
                  within the microstep cause transitions out of a
                  superstate. }}
}
@article{Harel88:visual-formalisms,
  author =   {D. Harel},
  title =    {On Visual Formalisms},
  journal =  {Communications of the {ACM}},
  year =     {1988},
  volume =   {31},
  number =   {5},
  month =    {May},
  pages =    {514--530},
  mark =     "Defines and describes higraphs. These graphs define
                  the structure od statecharts and RSML charts. A very
                  good paper."
}
@Article{Harel90:statemate,
  author =   {D. Harel and H. Lachover and A. Naamad and A. Pnueli
                  and M. Politi and R. Sherman and A. Shtull-Trauring
                  and M. Trakhtenbrot},
  title =    {STATEMATE: A Working Environment for the Development
                  of Complex Reactive Systems},
  journal =  {IEEE Transactions on Software Engineering},
  year =     {1990},
  volume =   {16},
  number =   {4},
  month =    {April},
  pages =    {403-414},
  annote =   {\commentjeff{This paper describes the STATEMATE tool
                  developed by i-Logix corporation that implements the
                  language the Harel specified in his earlier paper
                  \cite{Harel87:statecharts}. The statemate tool is
                  based on stepwise refinement and dataflow
                  analysis. It has three models: modulecharts,
                  activity charts and statecharts. The module charts
                  are used to show the physical decomposition of the
                  system. Activity charts are used to show the
                  processes of the system. Finally, statecharts are
                  used to control the the processes specified by the
                  activity charts. A major weakness is the lack of
                  sufficent static analysis techniques.}}
}

@Article{Harel92:overlapping,
    author = {David Harel and Chaim-Arie Kahana},
    title = {On Statecharts with Overlapping},
    journal = {ACM Transactions on Software Engineering},
    year = {1992},
    volume = {1},
    number = {4},
    month = {October},
    pages = {399 - 421},
    annote = {\commentmike{Kind of lame paper, but gave me
        something else to place in the MS thesis.  Discusses using
        overlapping states in Statecharts.  Because Statecharts
        semantics are dicey to begin with, this adds a major
        complication into the works.}}
}

@Article{Harel96,
  author =   { David Harel and Amnon Naamad },
  title =    { The STATEMATE Semantics of Statecharts},
  journal =  {ACM Transactions of Software Engineering and
                  Methodology},
  volume =   {5},
  number =   {4},
  month =    {October},
  year =     {1996},
  pages =    {293 - 333},
  annote =   {\commentjeff{This paper, written significantly after
                  the introduction of Statemate, discusses the
                  ``official'' semantics of Statecharts as implemented
                  by the Statemate toolset. These semantics are more
                  or less equivalent to the RSML semantics. The paper
                  was written in response to that statement in one of
                  the RSML papers that Statecharts had a non-intuitive
                  semantics.}}
}

@INPROCEEDINGS{Compton00:UML,
    author = {Kevin Compton and James Huggins and Wuwei Shen},
    title = {A Semantic Model for the State Machine in the Unified Modeling Language},
    booktitle = {In Proceeding of Dynamic Behavior in UML Models: Semantic Questions, UML 2000 workshop},
    year = {2000},
    pages = {25--31},
    publisher = {Springer Verlag}
}


@article {vonderBeek03:UMLStatecharts,
   author = {von der Beeck, Michael},
   affiliation = {BMW Group, Funktionsentwicklungsprozess, Max-Diamand-Str. 5, 80937 Mnchen, Germany; E-mail: Michael.Beeck@bmw.de DE},
   title = {A structured operational semantics for UML-statecharts},
   journal = {Software and Systems Modeling},
   publisher = {Springer Berlin / Heidelberg},
   issn = {1619-1366},
   keyword = {Computer Science},
   pages = {130-141},
   volume = {1},
   issue = {2},
   url = {http://dx.doi.org/10.1007/s10270-002-0012-8},
   note = {10.1007/s10270-002-0012-8},
   year = {2002}
}

@BookChapter{Latella99:UMLStatecharts,
   author = {D. Latella and I. Majzik and M. Massink},
   title = {Towards a Formal Operational Semantics of UML Statechart Diagrams},
   booktitle = {Formal Methods for Open Object-based Distributed Systems},
   publisher = {Chapman & Hall},
   year = {1999}
}

@article{chen1996expected,
   author={T.Y. Chen and Y.T. Yu},
  title={On the Expected Number of Failures Detected by Subdomain Testing and Random Testing},
  journal={IEEE Transactions on Software Engineering},
  volume={22},
  number={2},
  issn={0098-5589},
  year={1996},
  publisher={IEEE}
}

@article{chen1994relationship,
  author={T.Y. Chen and Y.T. Yu},
  title={On the Relationship Between Partition and Random Testing},
  journal={IEEE Transactions on Software Engineering},
  pages={977--980},
  issn={0098-5589},
  year={1994},
  publisher={Published by the IEEE Computer Society}
}

@InProceedings{Gogolla98:UML,
   author = {M. Gogolla and F. Parisi-Presicce},
   title = {State diagrams in UML: A formal semantics using graph transformations},
   editor = {M. Broy and D. Coleman and T. S. E. Maibaum and B. Rumpe},
   booktitle = {PSMT98 Workshop on Precise Semantics for Modeling Techniques},
   publisher = {Technische Universit\"at M\"unchen},
   year = {1998}
}

@InProceedings{Reggio00:UML,
   author = {G. Reggio and E. Astesiano and C. Choppy and H. Hussmann},
   title = {Analysing UML Active Classes and Associated State Machines
            A Lightweight Formal Approach},
   booktitle = {Fundamental Approaches to Software Engineering},
   number = {1783},
   pages  = {127-146},
   publisher = {Springer},
   year = 2000
}

@Article{Crane05:StatechartsDialects,
   author = {Michelle L Crane and Juergen Dingel},
   title = {UML vs. Classical vs. Rhapsody Statecharts:  Not All Models are Created Equal},
   booktitle = {Proceedings of MoDELS 2005},
   year = {2005}
}

@Article{Harel97:object,
  author =   {David Harel and Eran Grey},
  title =    {Executable Object Modeling with Statecharts},
  journal =      {IEEE Computer},
  year =     {1997},
  volume =   {30},
  number =   {7},
  pages =    {31-42},
  month =    {July},
  annote =   {\jefftoread}
}

@InProceedings{Romdhani95:rapid-prototype,
  author =   {M. Romdhani and A. Jeffroy and A.E.K. Sahraoui and
                  A.A. Jerraya},
  title =    {Modeling and Rapid Prototyping of Avionics Using
                  STATEMATE},
  booktitle =    {Proceedings of the Sixth IEEE Int'l Workshop
                  on Rapid System Prototyping},
  year =     {1995},
  month =    {June},
  pages =    {62-67},
  annote =   {\commentjeff{The paper presents an approach for
                  using STATEMATE for prototyping avionics systems
                  that the authors compare to the SA-RT method. The
                  proposed methodology is based on the "V" development
                  model, and includes descriptions of how STATEMATE is
                  used at each phase. The paper includes the specific
                  example of the re-design of an existing system that
                  is part of the AIRBUS A340 aircraft.}}
}
@Article{Sowmya98:statecharts-tl,
  author =   {Arcot Sowmya and S. Ramesh},
  title =    {Extending Statecharts with Temporal Logic},
  journal =      {IEEE Transations on Software Engineering},
  year =     {1998},
  month =    {March},
  volume =   {24},
  number =   {3},
  pages =    {216-231},
  annote =   {\jefftoread}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % ROOM
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Selic96:ROOM,
  author =   {Bran Selic},
  title =    {Modeling Real-Time Distributed Software Systems},
  booktitle =    {Fourth Int'l Workshop on Parallel and
                  Distributed Real-Time Systems},
  year =     {1996},
  pages =    {11-18},
  annote =   {\commentjeff{Overviews the ROOM specification
                  language at an architectural level. Includes a
                  specification of the inter-component communication
                  formalism. Also, it discusses code generation from
                  the ROOM model. There is a book referenced in the
                  cited works that might be usefull.}}
}
@Book{Selic94:ROOMBook,
  author =   {Bran Selic and Garth Gullekson and Paul T. Ward},
  title =    {Real-time Object Oriented Modeling},
  publisher =    {John Wiley and Sons, Inc.},
  year =     {1994},
  annote =   {\commentjeff{This book, which is about 500 pages
                  long, covers the ROOM methodology for object
                  oriented design of real time systems. The book is
                  divided into four parts. The first part includes
                  chapters which introduce real-time systems in
                  general and the ROOM notation in particular. In the
                  second part, a more detailed intoduction to the ROOM
                  modeling language is given. The third part of the
                  book contains chapters which detail the modeling
                  language. The fourth part includes chapters
                  detailing process issues related to the ROOM
                  notation. The book ends with a set of appendices
                  which include information on the ObjecTime Toolset,
                  an example of ROOM, rational statement, and
                  notational summaries.}}
}
@InProceedings{Selic93:ROOM,
  author =   {Bran Selic},
  title =    {An Efficient Object-Oriented Variation of the
                  Statecharts Formalism for Distributed Real-Time
                  Systems},
  booktitle =    {CHDL '93: IFIP Conf. on Hardware Description
                  Languages and Their Applications},
  year =     {1993},
  pages =    {},
  annote =   {\miketoread{}}
}


              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Betterstate Papers
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Book{Drusinsky97:BetterState,
  author =   {Doron Drusinsky},
  title =    {How to Make Statecharts Work For You},
  publisher =    {},
  year =     {1997},
  annote =   {\commentmike{BetterState is a tool for implementing
                  statecharts. I downloaded this tutorial from the ISI
                  website (www.isi.com) to try to discover some
                  information about the code generation facilities
                  present in the tool. Unfortunately, the document did
                  not explain anything specific about the capabilities
                  of the tool, other than it's possible to create a
                  multithreaded executable from the state
                  diagram. Some of the example state machines
                  presented did not make sense to me, as they had
                  transitions between different components of an AND
                  state. }}
}

              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Modechart
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Brockmeyer96:ModechartMAC,
  author =   {Monica Brockmeyer and Farnam Jahanian and Constance
                  Heitmeyer and Bruce Labaw},
  title =    {An Approach to Monitoring and Assertion-Checking of
                  Real-Time Specifications},
  booktitle =    {Fourth Int'l Workshop on Parallel and
                  Distributed Real-Time Systems},
  year =     {1996},
  pages =    {236-243},
  annote =   {\commentjeff{Includes detailed description of
                  Modechart specification with an example similar to
                  the production cell. This paper focuses on the
                  Montoring and Assertion Checking (MAC) tool that was
                  developed at the University of Michigan. The paper
                  includes a nice overview of how MAC fits into the
                  Modechart architecture.}}
}
@InProceedings{Mok96:SimulationVerification,
  author =   {Aloysius K. Mok and Douglas Stuart},
  title =    {Simulation vs. Verification: Getting the Best of
                  Both Worlds},
  booktitle =    {Proceedings of the Eleventh Annual Conf. on
                  Computer Assurance, COMPASS 96},
  year =     {1996},
  annote =   {\commentjeff{Provides an overview of the SVT
                  (Simulation-Verification) tool which allows that
                  user to simulate a Modechart specification up to a
                  certain point and then use the analyzer to perform
                  analysis up to a certain frontier. This is presented
                  as a possible method to limit the effects of the
                  state space explosion problem. SVT is a combination
                  of the existing MT toolset simulation and
                  verification tool. I think that this approach is
                  flawed, because I don't see how you could help but
                  get all the problems of simulation (i.e. only
                  testing certain execution paths) without gaining
                  much of the benefits of verification. It might be
                  usefull in certain contexts; however, I do not think
                  that it works as a general verification
                  methodology. Furthermore, I fail to see how you get
                  the "best of both worlds."}}
}
@InProceedings{Mok97:fault-tolerance,
  author =   {A. K. Mok and D. Stuart},
  title =    {Semantics of Fault Tolerant Actions in Modechart},
  booktitle =    {Proceedings of the 1997 IEEE Aerospace Conf.},
  volume =   {2},
  year =     {1997},
  pages =    {563-578},
  annote =   {\jefftoread}
}
@Article{Yang97:model-checking,
  author =   {J. Yang and A. K. Mok and F. Wang},
  title =    {Symbolic Model Checking for Event-Driven Real-Time
                  Systems},
  journal =  {ACM Transactions on Programming Languages and
                  Systems},
  volume =   {19},
  number =   {2},
  month =    {March},
  year =     {1997},
  pages =    {386-412},
  annote =   {\commentjeff{Printed from ACM; to be read.}}
}

@article{Andre03:synccharts,
 author = {Andr\'{e}, Charles},
 title = {Computing SyncCharts Reactions},
 journal = {Electron. Notes Theor. Comput. Sci.},
 volume = {88},
 year = {2004},
 issn = {1571-0661},
 pages = {3--19},
 doi = {http://dx.doi.org/10.1016/j.entcs.2003.05.007},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 }


@Article{Ardis96:comparison,
  author =   {A. M. Ardis and A. J. Chaves and J. L. Jagadeesan
                  and P. Mataga and C. Puchol and G. M. Staskauskas
                  and J. Von Olnhausen},
  title =    {A Framework for Evaluating Specification Methods for
                  Reactive Systems: Experience Report},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {22},
  number =   {6},
  month =    {June},
  year =     {1996},
  pages =    {378-389},
  annote =   {\commentjeff{This paper discusses the use of several
                  formal specification methods on a project at Bell
                  Labs. The project was to model a portion of the 5ESS
                  switch in each of the language and evaluate the
                  effectiveness of the languages in terms of a number
                  of criteria. The languages used were Modechart,
                  VFSM, Esterel, Basic LOTOS, Z, and SDL. In addition,
                  the authors developed the subsystem in C to compare
                  the formal approaches with the existing development
                  methodology. The authors divide the criteria into
                  two sections: fundemental and important. The
                  fundemental criteria are: \begin{itemize} \item
                  Applicability \item Usability in embedded systems
                  \item Hardware/Software compatibility \item
                  Implementability (path to code) \item
                  Testability/Simulation \item Checkability \item
                  Maintainability \item Modularity \item Level of
                  abstraction \item Soundness \item Verifiability
                  \item Run-time safety \item Tools maturity
                  \end{itemize} \noindent The importent criteria are:
                  \begin{itemize} \item Looseness \item Learning curve
                  \item Language maturity \item Data modeling \item
                  Discipline \end{itemize} }}
}

@InProceedings{Puchol95:code-gen,
  author =   {C. Puchol and A. K. Mok and D. A. Stuart},
  title =    {Compiling Modechart Specifications},
  booktitle =    {Proceedings of the 16th Real-Time Systems Symposium},
  year =     {1995},
  pages =    {256-65},
  annote =   {\commentget{Walter: Quarto QA76.54.R43}}
}

@Article{Jahanian94:semantics,
  author =   {F. Jahanian and A. K. Mok},
  title =    {Modechart: A Specification Language for Real-Time
                  Systems},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {20},
  number =   {12},
  month =    {December},
  year =     {1994},
  pages =    {933-947},
  annote =   {\jefftoread}
}

@article{Jahanian86:RTL,
  author =   {Farnam Jahanian and Aloysius K. Mok},
  title =    {Safety Analysis of Timing Properties in Real-Time
                  Systems},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {12},
  number =   {9},
  month =    {September},
  year =     {1986},
  pages =    {890-904},
  annote =   {\jefftoread}
}

@InProceedings{Heitmeyer92:modechart,
  author =   {C. Heitmeyer},
  title =    {A Toolset for Developing Real-Time Systems},
  booktitle =    {Proceedings of the NATO Advanced Study Institute on
                  Real-Time Computing},
  year =     {1994},
  pages =    {517-518},
  annote =   {}
}

@InProceedings{Clements93:modechart-avionics,
  author =   {P. C. Clements and C. L. Heitmeyer and B. G. Labaw
                  and A. K. Mok},
  title =    {Applying Formal Methods to an Embedded Real-Time
                  Avionics System},
  booktitle =    {Proceedings of the IEEE Workshop on Real-Time
                  Applications},
  year =     {1993},
  annote =   {\commentjeff{This paper discusses the application of
                  Modechart to a tactical air-launched
                  missle. Modechart was used in the specification of a
                  six-task subset of the overall control system
                  representing a challenging part of the
                  application. Several issues with the Modechart
                  toolset were discovered by the study:
                  \begin{itemize} \item Limitation to boolean only
                  data \item Lack of primatives for inter-component
                  communication \item Lack of state-reentry primative
                  (history connector). \item Insistance on timing
                  parameters being given as constants. \end{itemize}}
                  }
}

@InProceedings{Heitmeyer92:modechart-tools,
  author =   {C. L. Heitmeyer and B. G. Labaw and P. C. Clements
                  and A. K. Mok},
  title =    {Engineering CASE Tools to Support Formal Methods for
                  Real-Time Software Development},
  booktitle =    {Proceedings of the Fifth IEEE Int'l Workshop
                  on Computer-Aided Software Engineering},
  year =     {1992},
  annote =   {\jefftoread}
}


              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % PSDL
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@article{Kramer93:semantics,
  author =   {B. Kramer and Luqi and V. Berzins},
  title =    {Compositional Semantics of a Real-Time Prototyping
                  Language},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {19},
  number =   {5},
  month =    {May},
  year =     {1993},
  pages =    {453-477},
  annote =   {\commentjeff{This paper discusses the mapping of the
                  semantics of PSDL to high-level Petri nets.}}
}
@InProceedings{Luqi88:execution,
  author =   {Luqi and V. Berzins},
  title =    {Execution of a High Level Real-Time Language},
  booktitle =    {Proceedings of the Real-Time Systems Symposium},
  year =     {1988},
  annote =   {\commentmike{ Although this paper talks a little
                  about code generation, the focus of this system is
                  on generating timing constraints and combining
                  pieces of pre-written Ada code. It appears to me
                  (while I'm probably missing some of the background),
                  that PSDL is mostly a macro language. There was no
                  complete description of the capabilities of PSDL,
                  although a high level description of the main points
                  (operators and data streams) was provided. The focus
                  of this paper was on generating a static schedule
                  for the PSDL operators, which logically execute in
                  parallel, on a uniprocessor machine, although
                  extensions for multiprocessor machines are
                  discussed. The static schedule uses worst case
                  runtime analysis, so the processor will probably be
                  idle during a portion of execution. To utilize this
                  processor time, the system also includes a dynamic
                  scheduler, for jobs that are pre-emptible and not
                  time-critical. The system appears to rely on
                  accurate (or at least conservative) estimates on the
                  maximum running time of the low-levelrs written in
                  Ada. Most of what I see in this paper is a fancy
                  scheduler/linker for prewritten Ada
                  procedures. However, their scheduling mechanism is
                  interesting and appears to scale to multiprocessor
                  environments. } }
}
@article{Luqi93:prototype,
  author =   {Luqi},
  title =    {Real-Time Constraints in a Rapid Prototyping
                  Language},
  journal =  {Computer Languages},
  volume =   {18},
  number =   {2},
  year =     {1993},
  pages =    {77-103},
  annote =   {\commentget{Wilson Basement (Might already have)}}
}
@InProceedings{Luqi92:prototype,
  author =   {Luqi},
  title =    {Computer Aided System Prototyping},
  booktitle =    {1992 Int'l Workshop on Rapid System
                  Prototyping},
  year =     {1992},
  annote =   {\jefftoread}
}
@article{Luqi88:PSDL,
  author =   {Luqi and V. Berzins and R. Yeh},
  title =    {A Prototyping Language for Real-Time Software},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {14},
  number =   {10},
  month =    {October},
  year =     {1988},
  pages =    {1409-1423},
  annote =   {\jefftoread}
}
@article{Luqi88:prototype,
  author =   {Luqi and M. Ketabbchi},
  title =    {A Computer Aided Prototyping System},
  journal =  {IEEE Software},
  volume =   {FILL IN},
  number =   {FILL IN},
  month =    {March},
  year =     {1988},
  pages =    {66-72},
  annote =   {\jefftoread}
}

              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Rapide
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Katiyar94:type-language,
  author =   {Dinesh Katiyar and David Luckham and John Mitchell},
  title =    {A Type System for Prototying Language},
  booktitle =    {ACM SIGPLAN-SIGACT symposium on Principles of
                  Programming Languages, POPL 94},
  year =     {1994},
  pages =    {138-150},
  annote =   {\commentjeff{This paper discusses the type syste
                  used in the {\sc Rapide} toolset. The type language
                  in {\sc Rapide} is one of five languages; the others
                  being the executable, specification, pattern and
                  architecture languages. The type language provides
                  constructs for defining interfaces for components
                  and typing rules. It provides for subtyping in the
                  object-oriented sense, but with separate inheritance
                  mechanisms for interface and implementation.}}
}
@Article{Luckham95:poset-execution,
  author =   {David C. Luckham and John J. Kenney and Larry
                  M. Augustin and James Vera and Doug Bryan and Walter
                  Mann},
  title =    {Specification and Analysis of System Architecture
                  Using {Rapide}},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {21},
  number =   {4},
  month =    {April},
  year =     {1995},
  pages =    {336-354},
  annote =   {\commentjeff{Discussed the poset-based execution
                  model of the Rapide language. Example in the article
                  is based on the X/Open distributed transaction
                  processing standard.}}
}
@Article{Luckham95:arch-def-lang,
  author =   {David C. Luckham and James Vera},
  title =    {An Event-Based Architecture Definition Language},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {21},
  number =   {9},
  month =    {September},
  year =     {1995},
  pages =    {717-733},
  annote =   {\commentjeff{This paper discusses the use of {\sc
                  Rapide} as an architecture definition language. The
                  authors list several criterial for architecture
                  definition languages: \begin{itemize} \item
                  Component abstraction \item Communication
                  abstraction \item Communication integrity \item
                  Dynamicism \item Causality and time \item
                  Hierarchical refinement \item Relativity
                  \end{itemize} Of course, {\sc Rapide} satisfies
                  these requirements. }}
}
@Article{Luckham93:rapide,
  author =   {David C. Luckham and James Vera and Doug Bryan and
                  Larry Augustin and Frank Belz},
  title =    {Partial Orderings of Event Sets and Their
                  Application to Prototyping Concurrent Timed Systems},
  journal =  {Journal of Systems Software},
  volume =   {21},
  number =   {3},
  year =     {1993},
  month =    {June},
  pages =    {253-265},
  annote =   {\commentjeff{This paper discusses the RAPIDE system
                  for prototyping concurrent systems. RAPIDE is object
                  oriented. Of particular interest is the method that
                  RAPIDE uses to communicate between various
                  components in the system. This paper focuses
                  primarily on RAPIDE's use of partially ordered event
                  sets and it discusses RAPIDE's ability to analye the
                  event sets for violations of requirements.}}
}



              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Other Compettors
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@article{Caven90:labview,
  author =   {J. Caven and J. Jackman},
  title =    {An Icon-Based Approach to System Control
                  Development},
  journal =  {IEEE Transactions on Industrial Electronics},
  volume =   {37},
  number =   {3},
  month =    {June},
  year =     {1990},
  pages =    {259-264},
  annote =   {\commentjeff{This paper discusses the application of
                  National Instruments' LabView in a research
                  setting. The authors used LabView in the development
                  of control programs in a computer-integrated
                  manfacturing environment. Specificially, LabView was
                  used in the development of several MMS
                  (Manufacturing Message Specification) services. The
                  conclusions of the paper are that LabView, while
                  useful due to its graphical nature, falls short in
                  terms of the data types allowed and flexibility of
                  expression (i.e., no global variables). Note, that
                  this paper is quite old and that I have found no
                  other published work which addresses LabView.}}
}
@Inproceedings{Isazadeh96:viewcharts-language,
  author =   {Ayaz Isazadeh and David A. Lamb and Glenn
                  H. MacEwen},
  title =    {Viewcharts: A Behaviorial Specification Language for
                  Complex Systems},
  booktitle =    {Fourth Int'l Workshop on Parallel and
                  Distributed Real-Time Systems},
  year =     {1996},
  pages =    {208-215},
  annote =   {\commentjeff{Another variant of statecharts which
                  includes a hierarchy above the state machines to
                  scope the events and variables called
                  'Viewcharts'. Communication appears to be through
                  event broadcast qualified with the name of the
                  view. This is similar to the way that the TCAS
                  machines were arranges, except in TCAS their was not
                  explicit root of the hierarchy. This paper is
                  alittle weak in that it does not adaquately cite the
                  work of others. Their ideas are not new -- RSML did
                  it first -- but might provide some interesting
                  reading.}}
}
@InProceedings{Hoover95:Tablewise,
  author =   {D. N. Hoover},
  title =    {Tablewise, a Decision Table Tool},
  booktitle =    {Proceedings of the Tenth Annual Conf. on
                  Computer Assurance, COMPASS 95},
  year =     {1995},
  annote =   {\commentjeff{This paper discusses Tablewise, a tool
                  for generating decision tables. I find the notion to
                  be more difficult to understand than the {\sc
                  and/or} tables because it tries to be everything to
                  everyone instead of concentrating on a particular
                  specification language. However, the paper does have
                  some code generation information about how they
                  produced Ada code from the Tablewise tool that might
                  be usefull in our own code generation. They have
                  also interfaced their tool to PVS, as we have.}

                  \commentmike{The paper discusses Tablewise, a tool
                  for generating decision tables. Their notation
                  allows a few more bells and whistles than RSML {\sc
                  and/or} tables, such as multivalued rather than
                  boolean predicates. Each table corresponds to one
                  enumerated variable. Each value of the enumeration
                  can have 1+ columns describing when the variable
                  takes on this value. The tool performs completeness
                  and consistency checks on the table as a whole,
                  ensuring that no two columns overlap and that all
                  possible values of each enumerated variable are used
                  in one column or another. The underlying
                  implementation uses FDDs, a variation of BDDs that
                  can handle multivalued predicates. The tool uses a
                  straightforward approach to code Heitmeyer92:modechart-toolsgeneration. It uses
                  a nested if/then structure to ensure each condition
                  in the table is evaluated only once; it looks like a
                  1-1 mapping of the table's FDD. If we created BDDs
                  from our AND/OR tables, w could create exactly the
                  same code as TableWise. However, the 1-1 mapping
                  between the original table and the code
                  representation is lost. The authors do not make
                  proof of correctness arguments about the
                  transformations between the decision tables and the
                  generated Ada code. They did verify examples of
                  output from the tool. The code generation portion
                  can also create structured English explanations of
                  the tables as well as PVS code. } }
}
@InProceedings{Kordon95:H-COSTAM,
  author =   {F. Kordon and W. El Kaim},
  title =    {H-COSTAM: A Hierarchical Communicating State-machine
                  Model for Generic Prototyping},
  booktitle =    {Proceedings of the Sixth IEEE Int'l Workshop
                  on Rapid System Prototyping.},
  year =     {1995},
  annote =   {\commentjeff{H-COSTAM is a formalism based on petri
                  nets that allows for formal verification and code
                  generation. In the paper they talk about the
                  inter-component communication mechanisms of H-COSTAM
                  and the translation approaches that they used in
                  code generation as well as tranlation to other
                  formalisms.}}
}
@Article{Pulli93:IPTES,
  author =   {P. Pulli and R. Elmstrom},
  title =    {IPTES: A Concurrent Engineering Approach for
                  Real-Time System Development},
  journal =  {Real-Time Systems},
  volume =   {5},
  number =   {2-3},
  pages =    {139-152},
  month =    {May},
  year =     {1993},
  annote =   {\commentjeff{This paper defines the IPTES
                  development methodology, which is based on the
                  spiral model of software development. They are
                  working on tool support and thier model seems
                  interesting enough. The model is a formalized
                  version of the SA/RT using petri-nets.}}
}
@Article{Tyszberowicz92:Observ,
  author =   {Shmuel Tyszberowicz and Amiram Yehudai},
  title =    {OBSERV - A Prototyping Language and Environment},
  journal =  {ACM Transactions on Software Engineering and
                  Methodology},
  volume =   {1},
  number =   {3},
  month =    {July},
  year =     {1992},
  annote =   {\commentjeff{This paper presents an introduction to
                  the OBSERV formalism. OBSERV is a state-based formal
                  language much like Statecharts and RSML. It is an
                  object oriented framework where the finite state
                  machines are used to describe the behavior of each
                  object. The graphical tool for the system is named
                  CRUISE. (They used it to do a cruise control
                  system.) The paper is long and detailed, giving a
                  good picture of the specification. They appear to be
                  doing many of the same things as the RSML research;
                  however, I have been unable to find any further
                  papers from this group so it appears that they are
                  not longer pursuing this direction.}}
}
@article{Kim97:FTRTObjects,
  author =   {K.H. Kim and Chittur Subbaraman},
  title =    {Fault-Tolerant Real-Time Objects},
  journal =  {Communications of the ACM},
  volume =   {40},
  number =   {1},
  month =    {January},
  year =     {1997},
  pages =    {75-82},
  annote =   {\commentjeff{This paper discusses an object
                  modification that supports time-triggered methods
                  and message triggered methods. Moderately
                  interesting article writted in quite general
                  terms.}}
}


              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Tools Related Papers
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Blackburn98:tool-requirements,
  author =   {Mark R. Blackburn and Robert D. Busser},
  title =    {Requirements for Industrial-Strength Formal Method
                  Tools},
  booktitle =    {Proceedings of the Second IEEE Workshop on
                  Industrial Strength Formal Methods (WIFT'98)},
  year =     {1998},
  annote =   {\commentjeff{This paper presents a summary of a
                  workshop session from WIFT that outlines some
                  requirements for formal methods tools if they are to
                  be used in industry.}}
}
@InProceedings{Heimdahl98:wift-report,
  author =   {Mats P.E. Heimdahl and Constance L. Heitmeyer},
  title =    {Formal Methods for Developing High Assurance
                  Computer Systems: Working Group Report},
  booktitle =    {Proceedings of the Second IEEE Workshop on
                  Industrial Strength Formal Methods (WIFT'98)},
  year =     {1998},
  annote =   {\commentjeff{This presents a report from a working
                  group at WIFT which discussed the uses and
                  requirements of formal methods in industrial
                  settings.  It presents a figure from Connie
                  regaurding the adoption of formal methods in
                  industry.}}
}
@InProceedings{Hall98:industrial-fm-requirements,
  author =   {Anthony Hall},
  title =    {What Does Industry Need from Formal Specification Techniques?},
  booktitle =    {Proceedings of the Second IEEE Workshop on
                  Industrial Strength Formal Methods (WIFT'98)},
  year =     {1998},
  annote =   {\commentjeff{This presents Anthony Hall's view of
                  industry's requirements for formal specification
                  techniques based on his work with Praxis in England.}}
}

@InProceedings{Heimdahl04:FAAToolsForum,
  author =   {Mats P.E. Heimdahl},
  title =    {Tool Intensive Software Development:
                New Challenges for Verification, Validation, and Certification},
  booktitle =    {Proceedings of FAA and Embry Riddle Aeronautical University Software Tools Forum},
  month =   {May},
  year =     {2004}
}


              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Architecture Description Languages
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@TechReport{MetaH93:manual,
  AUTHOR =   {Steve Vestal},
  TITLE =    {MetaH Programmer's Manual},
  NUMBER =   {1.1.4},
  INSTITUTION =  {Honeywell Technology Center},
  ADDRESS =  {3660 Technology Drive, Mpls, MN 55418},
  MONTH =    {},
  YEAR =     {1993},
  annote =   {}
}

              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Estelle
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Thees97:XEC,
  author =   {Joachim Thees and Reinhard Gotzhein},
  title =    {The eXperimental Esterel Compiler - Automatic c
                  Generation of Implementations from Formal
                  Specifications},
  booktitle =    {Proceedings of FMSP '98, The Second Workshop on
                  Formal Methods In Software Practice.},
  year =     {1998},
  annote =   {\commentmike{This paper describes an architecture
                  for a research Estelle compiler. Estelle is a
                  Pascal-like imperative language with formal
                  semantics. The focus of this paper is on improving
                  the efficiency of automatic generation of C++ code
                  from Estell specifications. Their approach is
                  similar to ours in that the generated code is human
                  readable. However, they make no claims as to the
                  correctness of the code, nor do they discuss whether
                  portions of their code can be replaced by hand coded
                  C++. They have performed some empirical testing on
                  which portions of Estelle specifications consume the
                  most CPU and have attempted to optimize these
                  portions. They give performance comparisons against
                  other Estelle compilers, but not against hand coded
                  version of specs.} }
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Synchronous Languages
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@INPROCEEDINGS{Benveniste03thesynchronous,
    author = {Albert Benveniste and Paul Caspi and Stephen A. Edwards and Nicolas Halbwachs and Paul Le Guernic and
    Robert De Simone},
    title = {The synchronous languages twelve years later},
    booktitle = {Proceedings of the IEEE},
    year = {2003},
    pages = {64--83}
}
@INPROCEEDINGS{Dion04,
   author = {Bernard Dion and Thierry Le Sergent and Bruno Martin and Herbert Griebel},
   title = {Model-Based Development for Time-Triggered Architectures},
   booktitle = {The 23rd Digital Avionics Systems Conf. (DASC)},
   year = {2004},
   month = {October}
}
@InProceedings{Herzner05,
  author = {Herzner, W and  Schlick, R and  Le Guennec, A and  Martin, B},
    title =  {Model-Based Simulation of Distributed Real-time Applications},
     booktitle = {5th IEEE Int'l Conf. on Industrial Infomatics},
    year = {2007},
    month = {June},
    pages = { 989 -- 994}
}

@PhdThesis{pike_diss,
  author = {Lee Pike},
  title  = {Formal Verification of Time-Triggered Systems},
  school = {Indiana University},
  year   = {2006},
  note   = {Available at \url{http://www.cs.indiana.edu/~lepike/phd.html}}}

@PhdThesis{park_thesis,
  author = {Myung-Hwan Park},
  title  = {On Selecting Effective Oracle Data},
  school = {University of Minnesota-Twin Cities},
  year   = {2010}}


@Article{Namjoshi10,
   author = {Kedar Namjoshi and Richard Treffler},
   title = {On The Completeness of Compositional Reasoning Methods},
   journal = {ACM Journal on Computational Logic},
   volume = {11},
   number = {3},
   year = {2010}
}


@InProceedings{Pnueli98:synchronous-translation,
  author =   {A. Pnueli and O. Shtrichman and M. Siegel},
  title =    {Translation Validation for Synchronous Languages},
  booktitle =    {Proceedings of the 25th Int'l Colloquium on
                  Automata, Languages and Programming, ICALP'98},
  year =     {1998},
  publisher = {Springer-Verlag},
  pages = {235-246},
  annote =   {\commentmike{read}}
}

@InProceedings{Pnueli98:DC-to-C,
  author =     {A. Pnueli and O. Shtrichman and M. Siegel},
  title =      {Translation Validation: from DC+ to C},
  booktitle =  {Int'l Workshop on Current Trends in
               Applied Formal Methods},
  year =       {1999},
  series =     {Lecture Notes in Computer Science Vol. 1641},
  publisher =  {Springer-Verlag},
  pages =      {137-150},
  annote =     {\miketoread}
}

@InProceedings{Pnueli99:SIGNAL-to-C,
  author =     {A. Pnueli and O. Shtrichman and M. Siegel},
  title =      {Translation Validation: from SIGNAL to C},
  booktitle =  {Correct System Design.  Recent Insights and Advances},
  year =       {1999},
  publisher =  {Springer-Verlag},
  pages =      {231-255},
  annote =     {\miketoread}
}

@InProceedings{Pnueli98:translation-validation,
  author =     {A. Pnueli and M. Siegel and E Singerman},
  title =      {Translation Validation},
  booktitle =  {Tools and Algorithms for the Construction and
                Analysis of Systems (TACAS'98)},
  year =       {1998},
  publisher =  {Springer-Verlag},
  pages =      {151-166},
  annote =     {\miketoread}
}



          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          %  Signal
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@article{Benveniste91:signal,
  author =   {A. Benveniste and P. Le Guernic and C. Jacquemot},
  title =    {Synchronous Programming with Events and Relations:
              the {SIGNAL} Language and its Semantics},
  journal =  {Science of Computer Programming},
  volume =   {16},
  number =   {2},
  month =    {September},
  year =     {1991},
  pages =    {103-149},
  annote =   {\miketoread}}
}



@TechReport{Amagbegnon95:production-cell,
  author =   {Toch{\'{e}}ou Pascalin Amagbegnon and Paul Le Guernic
                  and Herv{\'{e}} Marchand and {\'{E}}ric Rutten},
  title =    {The SIGNAL Data Flow Methodology Applied to a
                  Production Cell},
  institution =  {Unit{\'{e}} de recherche INRIA Rennes},
  year =     {1995},
  OPTkey =   {},
  OPTtype =     {},
  OPTnumber =   {2522},
  OPTaddress =     {INRISA, Campus Universitaire de Beaulieu,
                  35042 RENNES Cedex (France) },
  OPTmonth =    {March},
  annote =       {\miketoread}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          %  LUSTRE
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{Halbwachs93:synchronous-systems,
  author =   {Halbwachs, N.},
  title =    {Synchronous Programming of Reactive Systems},
  publisher =    {Klower Academic Press},
  year =     {1993},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =  {},
  annote =   {\miketoread}
}

@InProceedings{Kahn74:parallel,
   author = {Gilles Kahn},
   title = {The Semantics of Simple Language for Parallel Programming},
   booktitle = {IFIP Congress 1974},
   year = {1974},
   pages = {471--475}
}

@InProceedings{Caspi87:lustre,
   author = {P. Caspi and D. Pilaud and N. Halbwachs and J. A. Plaice},
   title = {{LUSTRE}: A Declarative Language for Programming Synchronous Systems},
   booktitle = {ACM Symp. Principles Program. Lang. (POPL)},
   address = {Munich, Germany},
   year = {1987},
   pages = {178 -- 188}
}

@ARTICLE{Halbwachs91:lustre,
  AUTHOR =   {N. Halbwachs and P. Caspi and P. Raymond and
                  D. Pilaud},
  TITLE =    {The {S}ynchronous {D}ataflow {P}rogramming {L}anguage
                  {Lustre}},
  JOURNAL =  {Proceedings of the IEEE},
  VOLUME =   {79},
  NUMBER =   {9},
  PAGES =    {1305-1320},
  MONTH =    {September},
  YEAR =     {1991},
  annote =   {\commentmike{
              Lustre is a dataflow language that
              provided many of the ideas that were used in the
              formal semantics for RSML-e.  It is a dataflow
              language that describes the interactions of a set of
              {\em nodes} which describe a transformation from a
              set of inputs to a set of outputs, {\em
              variables} which are used as shorthands for
              often used expressions, and {\em clocks} which describe
              when nodes or variables are to be recomputed.

              RSML-e = Lustre + hierarchies + interfaces +
                 slightly more general arrays + built-in time +
                 UNDEFINED values + more elaborate history lists
                 - tuple types - clocks - modules.

              In RSML-e, history information is maintained through value
              traces for all variables.  In other words, we have a
              list of all assignments to each variable since the
              specification began execution.  In Lustre, history
              information is maintained by a special kind of
              expression, PRE, that maintains the value assigned
              to the expression prior to the current execution.
              These expressions are always of the form:
              \[PRE(exp, initial)\]
              \noindent where $exp$ is the expression whose previous value
              is to be found, and $initial$ is the initial value
              of the PRE expression.  Formally, the PRE-histories
              are maintained by {\em changing the syntax}
              of the PRE expression.  So, for example, if a PRE
              expression is:
              \[PRE(exp, initial)\]
              \noindent and the value of $exp$ at evaluation is
              $v$, then the syntax of the program becomes:
              \[PRE(exp, v)\]
              \noindent for the next evaluation.

              Lustre does not have an internal notion of time,
              which is both good and bad, compared to RSML-e.  In
              order to keep track of assignment times or change
              times, it is necessary to add extra variables to a
              Lustre spec.  On the other hand, Lustre does not
              require that the underlying hardware or
              encapsulating C code have a notion of clock time,
              where RSML-e requires it.  Therefore, there may be
              platforms that cannot support certain RSML-e
              specifications because there is no notion of time.
              Most of the time, a clock can be created manually to
              correspond to RSML-e's internal clock.  For example,
              any of the Lustre clocks, represented by MILLISECOND
              signals can be translated into RSML-e time.

              RSML-e does more automatic bookkeeping for the history
              lists for variables than does Lustre, but at the
              cost of being more verbose.  The required size for
              history lists for an RSML-e implementation is
              automatically determined.

              Lustre's concept of variables is much more
              'lightweight' than RSML's.  One only need declare the
              type (int, real, or bool), and declare an assignment
              expression in Lustre.  For RSML-e, you must provide
              units, min/max values, type, parent, and assignment
              relation information.  Also, in Lustre, you can
              group variable assignments by type, like any other
              programming language:
              \begin{verbatim}
               a, b, c: int
              \end{verbatim}
              If we defaulted the PARENT: field to NONE and placed
              the rest of the crap in strong types (containing
              min/max values and units as well as basic type
              information), then we would have similar conciseness
              in declarations.

              Lustre's nodes provide a good example of how we
              should approach modules in RSML-e.  Nodes simply
              have an externally visible interface and local
              variables, much like they would in RSML-e.  Only
              values can be passed through node interfaces, so
              scoping of functions is not a concern.  It is the
              lowest common denominator approach, but it appears
              successful.
  }}
}

@INPROCEEDINGS{Halbwachs91:codegen,
  AUTHOR =   {N. Halbwachs and P. Raymond and C. Ratel},
  TITLE =    {Generating Efficient Code From Data-Flow Programs},
  BOOKTITLE =    {Third Int'l Symposium on Programming
                  Language Implementation and Logic Programming},
  ADDRESS =  {Passau (Germany)},
  MONTH =    {August},
  YEAR =     {1991},
  annote =   {\commentmike{This paper describes an approach to
  efficient code generation for Lustre specifications.  The
  approach works by treating all Boolean variables within the
  specification as describing a state space, and then building a
  finite state automaton of that state space.  In other words, a
  node of the FSA represents one or more assignments to the set
  of boolean variables of the specification.  Normally, all
  variables have to be recomputed, but this approach allows
  the assignments to be encoded directly into the structure of the
  FSA.

  In order to keep the size of the FSA from blowing up, they
  introduce ``demand-driven'' control synthesis, which groups sets
  of states into equivalence classes in terms of how they affect
  the output of the machine.  If several states all cause the same
  sequence of outputs to be generated for all inputs, then they
  are equivalent and can be collapsed into a single state.

  The authors do not make any correctness arguments about the
  transformations, but they seem intuitively obvious.  Proving
  these optimizations correct using a fully formal system would be
  a daunting task.

  The underlying power of Lustre is very similar to that of RSML-e,
  while having a much smaller semantics.  Lustre can be
  translated to an imperative language like C using a
  straightforward approach.  This paper describes a significant
  optimization of the translated code.  It creates an automaton
  out of the possible states of all Boolean state variables.  For
  example, if a specification had three Booleans, then some
  example states would be {x=t; y=f; z=t}, {x=f; y=f; z=t }.
  Then, rather than compute the value of each boolean variable, it
  computes the next state of the automaton, which describes the
  values of all boolean variables.  Because of the syntax of
  Lustre, specifications must be both complete and consistent, so
  there is no non-determinism in the automaton.

  This optimization could also be applied to RSML-e, if we adopt
  the execution semantics that is currently used by the Nimbus
  toolset (which ensures determinism and completeness of macros
  and state variable assignments, provided functions are
  complete).

  One issue that they do not consider is applying the same
  approach to enumerated values.  This would be the area that
  could provide significant benefit for RSML-e specifications.  If
  we could create a true automaton out of the enumerated
  variables, we could maintain much of the execution of the
  specification as a finite-state automata.  Of course, it would
  be impossible to understand, if bugs arose.  }}
}

@Article{Bouajjani92:minimization,
    AUTHOR = {A. Bouajjani and J. C. Fernandez and N. Halbwachs and
        P. Raymond and C. Ratel},
    TITLE = {Minimal State Graph Generation},
    JOURNAL = {Science of Computer Programming},
    VOLUME = {18},
    NUMBER = {3},
    PAGES = {247-269},
    YEAR = {1992},
    annote = {\commentmike{State graph minimization paper for Lustre}}
}

@INPROCEEDINGS{pollux:bonas,
    AUTHOR={F. Rocheteau and N. Halbwachs},
    TITLE={Pollux, A Lustre-based hardware design environment},
    BOOKTITLE={Conf. on Algorithms and Parallel VLSI Architectures II},
    ADDRESS = {Chateau de Bonas},
    EDITOR = {P. Quinton and Y. Robert},
    MONTH = {June },
    YEAR= {1991},
    annote = {\commentmike{This paper describes how one can create a hardware
        circuit directly from a Lustre specification, provided that
        specification has some rather draconian limitations - no types other
        that Boolean are supported.  However, it is possible to "build"
        integers out of arrays of Boolean values, and predefined functions
        exist to add, subtract, etc. these values.  It is very interesting
        work from the standpoint of making hardware designer's lives easier.
        It also may be possible to take higher level specifications containing,
        say, integers and enumerated types, and translate them into a form
        that could be directly implemented on hardware.  But it would be a
        hell of a lot of work.  Also, the way times are currently managed in
        RSML-e would make it difficult to translate directly to hardware.}}
}



@InProceedings{Maraninchi2000:case-study,
  author =   {F. Maraninchi and Y. R{\'{e}}mond},
  title =    {Applying Formal Methods to Industrial Cases:
    The Language Approach (The Production-Cell and Mode-Automata)},
  booktitle =   {Proc. 5th Int'l Workshop on Formal
                  Methods for Industrial Critical Systems},
  year =  {2000},
  OPTaddress =     {Berlin, Germany},
  month =    {April},
  annote = {\commentmike{ This paper describes an application of Mode
   Automata (a front end to Lustre) to the production cell case study.
   It presents an overview of their model, which I found difficult to
   read, and suboptimally structured.  Also, they provided no
   description on formal or even informal reasoning about the model's
   correctness.

   I believe that the modelling language as presented here is not
   conducive to creating easily readable systems.  For each state
   within a mode machine, an expression assigning the value of
   each output variable must be provided.  For systems with a large
   number of output variables, the specifications become buried
   in (mostly static) assignments to variables.  In RSML-e, we don't
   assign variables directly within the mode machine, so we don't
   get stuck with this ``information overload''.  What you're really
   interested in, of course, is the information {\em updates}.
   Variables must be assigned exclusively by one mode state variable
   (to use our terminology) - other mode machines can be referenced,
   but only by defining IF statements in the output variable
   assignment.  Thus, if you have outputs that depend on multiple
   mode variables (a common occurrence?), you're pretty well
   screwed trying to use this formalism.  Also, the conditions
   that you're allowed for transitions within the mode machine
   is a strict subset of LUSTRE conditions, so that it is
   {\em not possible according to the formal semantics} to
   reference the current values of variables.

   On the other hand, with this style, it is possible to see at a
   glance how {\em all} variables are updated when in a particular
   mode.

   Note:  this visualization can be seen as merely an alternate view
   in RSML-e: by a syntactic traversal of the AST, we could
   generate this sort of view.}}
}




@InProceedings{Maraninchi98:mode-automata,
  author =   {Florence Maraninchi and Yann R{\'{e}}mond},
  title =    {Mode-Automata: About Modes and States for
                  Reactive Systems},
  booktitle =   {Proc. European Symposium on Programming},
  year =  {1998},
  OPTaddress =     {Lisbon, Portugal},
  annote =   {
  \commentmike{This paper describes an extension to the Lustre
   programming language to support hierarchical mode machines
   within Lustre nodes.  The facilities provided are, in
   fact, very similar to those provided by RSML-e, with a
   few differences that I think negatively impact the
   expressiveness and readability of Mode Automata in comparison
   to RSML-e machines.  These concerns I have described in
   the writeup for the Mode Automata Production Cell case study.

   One other issue has to do with the efficiency of the
   implementation described in this paper.  Because Lustre does
   not support enumerated types, the implementation uses a
   Boolean variable {\em per state}; This encoding creates
   a large state space, and more importantly, requires that
   the transition conditions must be recomputed for ALL boolean
   variables.  Even more, each of the computations must check
   whether either 1). None of the exitting transitions are
   possible or 2). The entry transition is possible.

   Although an efficient representation is possible (using a
   set of log-n boolean variables to represent an enumeration
   of n values), it is much more difficult to read!
}}
}


@InProceedings{Caspi96:synchronous-kahn-networks,
  author =   {Paul Caspi and Marc Pouzet},
  title =    {Synchronous Kahn Networks},
  booktitle =   {ACM Sigplan Int'l Conf. on
Functional Programming},
  OPTpages =    {226-238},
  OPTyear =     {1996},
  OPTaddress =     {Philidelphia},
  OPTmonth =    {May},
  annote = {\commentmike{This paper describes a generalization
  of the synchronous language Lustre to functional programming
  over streams.  The technique described by Caspi and Pouzet
  allow the creation of infinite streams in a functional
  language that can be evaluated lazily.  Many functional
  languages, such as Haskell, already have this
  capability.  However, this paper presents restrictions
  on infinite streams so that they can be implemented in a
  much more efficient way, in which no intermediate lists
  are required to store successive values of the streams.

  I gave the paper a cursory read-through, but I was unable
  to understand the simple sieve of Erastosthenes example,
  as implemented in this language.  I will re-read it after
  the programming language class talks a little bit about
  lazy-evaluation languages.}
  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Esterel
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{Berry92:EsterelDesign,
  author =   { G\'{e}rard Berry and Georges Gonthier},
  title =    {The {E}sterel Synchronous Programming Language:
                  Design, Semantics, Implementation},
  journal =  {Science of Computer Programming},
  volume =   {19},
  number =   {2},
  year =     {1992},
  pages =    {87-152},
  annote =   {\commentmike{This article explains in a nutshell the
                  entire Esterel environment, including its syntax and
                  semantics, and how these semantics map to a target
                  execution language such as C or Ada. Esterel is an
                  imperative programming language; it's syntax is
                  similar to an ALGOL based language. It supports
                  constructs for sequential or parallel execution of
                  instructions, loops, and conditional statements. It
                  is based on the synchrony hypothesis, so all of
                  these statements are considered to take zero
                  time. It uses events as units of external time, and
                  contains statements to emit and wait for events. In
                  other words, the code to respond to a given event is
                  infinitely fast, but time elapses between input
                  events. Since the language supports sequences of
                  statements, it is possible to specify an order of
                  calculations for one event, something that is not
                  possible in RSML. Esterel programs look like
                  conventional imperative programs; large Esterel
                  programs are difficult to read and understand, more
                  so than other imperative programs because of
                  non-local control structures (events). Esterel does
                  not have any internal notion of time; however, it is
                  straightforward to create a time constructs by using
                  a regular time pulse as an input event. The
                  compilation approach taken by the language seems
                  extremely efficient; it creates a FSA directly from
                  a Esterel Program, then generates the code to
                  execute events for the FSA. The mapping provided by
                  the system is provably correct. However, the
                  generated code cannot be understood or modified. It
                  is essentially a black box. Debugging the generated
                  code is next to impossible. Berry presents an
                  interesting argument on the determinism of timers in
                  Esterel vs. other languages. It may be difficult to
                  make an argument that our RSML compiler is
                  completely deterministic w.r.t. the external
                  environment since the timeout events may essentially
                  compete with the external events if they happen
                  concurrently. No support for concurrency in the
                  generated code is planned. } }
}


@Misc{REACTIS,
   author = {},
   title = {Reactive Systems Inc. {Reactis Product Description}},
   howpublished = {http://www.reactive-systems.com/index.msp},
   key = {Reactive Systems Inc.}
}



@BOOK{Dabney04:Simulink,
  AUTHOR =       {James Dabney and Thomas Harmon},
  TITLE =        {Mastering Simulink},
  PUBLISHER =    {Prentice Hall},
  YEAR =         2004,
  address =      "Upper Saddle River, NJ"
}



              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % KIDS
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Ledru96:kidsvdm,
  author =   {Yves Ledru},
  title =    {Using {KIDS} as a Tool Support for {VDM}},
  booktitle =    {Internal Conf. on Software Engineering},
  year =     {1996},
  annote =   {\miketoread}
}
@InProceedings{Ledru94:kidsvdm,
  author =   {Yves Ledru},
  title =    {Proof-Based Development of Specifications with
                  {KIDS/VDM}},
  booktitle =    {Formal Methods - Europe },
  year =     {1994},
  annote =   {\miketoread}
}
@article{Smith94:kids,
  author =   {Douglas R. Smith},
  title =    {{KIDS}: A Semiautomatic Program Development System},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {16},
  number =   {9},
  month =    {September},
  year =     {1990},
  pages =    {1024-1042},
  annote =   {\miketoread}
}

              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % VDM
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{Fitzgerald98:VDM,
  author =   {John Fitzgerald and Peter Gorm Larsen},
  title =    {Modelling Systems: Practical Tools and Techniques in Software Development},
  publisher =    {Cambridge University Press},
  year =     {1998},
  annote =   {\commentmike{Great introduction to modelling systems in VDM.  Gives
                introduction to predicate logic, set theory,
                discrete functions & relations, etc., then describes VDM and how to
                use it to model systems.}}
}

@article{Jones94:LPF,
  author =   {C.B. Jones and C.A. Middelburg},
  title =    {A typed logic of partial functions reconstructed classically},
  journal =  {Acta Informatica},
  volume =   {31},
  number =   {5},
  month =    {},
  year =     {1994},
  pages =    {399-430},
  annote =   {\miketoread}
}

@misc{VDM1997:tools,
  title =    {The {IFAD} {VDM$^{++}$} Toolbox User Manual},
  author =   {The VDM Tool Group},
  month =    {September},
  year =     {1997},
  howpublished = {Technical Report, IFAD-VDM-43.  Available from
  IFAD, Forskerparken 10, 5230 Odense M, Denmark},
  annote =   {\miketoread}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Classical Logics
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@article{Aaron97:underspecification,
  author =   {E. Aaron and D. Gries},
  title =    {Formal justification of underspecification},
  journal =  {Information Processing Letters},
  volume =   {64},
  number =   {3},
  month =    {November 14},
  year =     {1997},
  pages =    {115-121},
  annote =   {}
}

@article{Gries95:underspecification,
  author =   {David Gries and Fred B. Schneider},
  title =    {Avoiding the Undefined by Underspecification},
  journal =  {Computer Science Today: Recent Trends and Developments
             (Lecture Notes in Computer Science) },
  volume =   {1000},
  number =   {},
  optmonth = {},
  year =     {1995},
  pages =    {366-373},
  annote =   {\commentmike{Good paper.  No time to write about it right now}}
}


@Misc{Arthan:Z-undefinedness,
  author =   {R. D. Arthan},
  title =    {Undefinedness in {Z}: Issues for Specification and Proof},
  howpublished = {http://www.lemma-one.com/papers/27.doc},
  year =     {},
  month =    {}
}

@article{Parnas95:logic,
  author =   {D. Parnas},
  title =    {A Logic for Describing, not Verifying, Software},
  journal =  {Erkenntnis (Kluwer)},
  volume =   {43},
  number =   {3},
  month =    {November},
  year =     {1995},
  pages =    {321-338},
  annote =   {\miketoread}
}

@article{Parnas93:logic,
  author =   {D. Parnas},
  title =    {Predicate Logic for Software Engineering},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {19},
  number =   {9},
  month =    {September},
  year =     {1993},
  pages =    {856-862},
  annote =   {\miketoread}
}

@article{Farmer90:logic,
  author =   {W. M. Farmer},
  title =    {A Partial Functions Version of Church's Simple Theory of Types},
  journal =  {Journal of Symbolic Logic},
  volume =   {55},
  number =   {3},
  month =    {September},
  year =     {1990},
  pages =    {1269-1291},
  annote =   {\miketoread}
}

              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Temporal Logics
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@article{Wang93:APTL,
  author =   {Farn Wang and Aloysius K. Mok and Allen Emerson},
  title =    {Distributed Real-Time System Specification and
                  Verification in APTL},
  journal =  {ACM Transactions on Software Engineering and
                  Methodology},
  volume =   {2},
  number =   {4},
  month =    {October},
  year =     {1993},
  pages =    {346-378},
  annote =   {\jefftoread}
}

              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % RSML Papers
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@PhdThesis{Czerny98:dissertation,
  author =   {B.J. Czerny},
  title =    {Integrative Analysis of State-Based Requirements for
                  Completeness and Consistency},
  school =   {Michigan State University},
  year =     {1998},
  month =    {May}
}
@InProceedings{Czerny98:integrative,
  author =   {B.J. Czerny and M.P.E. Heimdahl},
  title =    {Automated Integrative Analysis of State-Based
                  Requirements},
  booktitle =    {Proceedings of the 13th IEEE Int'l
                  Conf. on Automated Software Engineering
                  (ASE'98)},
  pages =    {125--134},
  year =     {1998},
  address =  {Honolulu, Hawaii},
  month =    {October},
}
@InProceedings{Britt94:TCAS-Case,
  author =   {Joan J. Britt},
  title =    {Case Study: Applying Formal Methods to the Traffic
                  Alert and Collision Avoidance System (TCAS) II},
  booktitle =    {Proceedings of the Ninth Annual Conf. on
                  Computer Assurance, COMPASS 94},
  year =     {1994},
  annote =   {\commentjeff{Interesting overview of the TCAS
                  specification process. The article includes an
                  overview of the TCAS SRS, and a comparison with the
                  original psuedocode specification. It concludes that
                  RSML needs to develop tool support (which has since
                  been started), and a development methodology.}}
}

@InProceedings{Heimdahl98:TCAS-Exp,
  author =   {Mats P.E.Heimdahl and Nancy G.Leveson and Jon D. Reese},
  title =    "Experiences From Specifying the TCAS II Requirements Using RSML",
  booktitle =    {17th Digital Avionics Systems Conf.},
  month =    {November},
  year =     {1998}
}


@Misc{Erickson00:ms-project,
  author =   {Debra M. Erickson},
  title =    {Structuring Formal Requirements Specifications For
                  Reuse: A Mobile Robotics Case Study},
  howpublished = {Masters Project, University of Minnesota},
  month =    {April},
  year =     {2000}
}

@Article{Jaffe91,
  author =   {Matthew S. Jaffe and Nancy G. Leveson and Mats
                  P.E. Heimdahl and Bonnie E. Melhart},
  title =    {Software Requirements Analysis for Real-Time
                  Process-Control Systems},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {17},
  number =   {3},
  month =    {March},
  year =     {1991},
  pages =    {241-258},
  annote =   {\commentjeff{This paper describes various criteria
                  that should be present in requirements
                  specifications. It covers input and output
                  variables, states, transitions, trigger to output
                  relationships, and reachability (among other things)
                  in the RSML model.}}
}
@TechReport{Keenan96:tech-report,
  AUTHOR =   {David~J.~Keenan and Mats~P.E.~Heimdahl},
  TITLE =    {Generating Provably Consistent Code from
                  Hierarchical State Machines},
  NUMBER =   {MSU-CPS-96-25},
  INSTITUTION =  {Department of Computer Science, Michigan State
                  University},
  ADDRESS =  {East Lansing, Michigan},
  MONTH =    {May},
  YEAR =     {1996},
  annote =   {\commentmike{Dave Keenan's Masters Thesis is
                  concerned with generating a provably correct RSML
                  compiler. For related work, he based his design on
                  transformational systems like CIP and
                  KIDS. Unfortunately, the formalization is cobbled
                  together from the original functional semantics of
                  RSML, guarded commands, and pseudocode. The
                  translation between the three representations is not
                  formalized, which requires that the reader use
                  "common sense" to reason about the correctness of
                  the generated code. No claims about the correctness
                  of the runtime library are made. For my thesis,
                  there are several opportunities for further
                  research: creating a complete formalization of the
                  RSML next-state function in guarded commands or Z,
                  formalizing the run-time library that implements the
                  set operations and state representation, formalizing
                  the portions of the system that deal with external
                  events (timeouts and message-received events), and
                  compiling to a simple, provably correct language,
                  like Tosca. However, the last option would present
                  some formidible headaches, as Tosca does not support
                  functions, arithmetic operators other than +/-, or
                  structured types!}}
}
@InProceedings{Keenan97,
  author =   {D.J.~Keenan and M.P.E.~Heimdahl},
  title =    {Code Generation from Hierarchicl State Machines},
  booktitle =    {Proceedings of the Int'l Symposium on
                  Requirements Engineering},
  year =     {1997},
  OPTpages =     {},
  OPTannote =    {}
}
@Article{Leveson94,
  author =   {N.G. Leveson and M.P.E. Heimdahl and H. Hildreth and
                  J.D. Reese},
  title =    {{Requirements Specification for Process-Control
                  Systems}},
  journal =  {IEEE Transactions on Software Engineering},
  year =  {1994},
  volume =   {20},
  number =   {9},
  month =    {September},
  pages =    {684-706},
  annote =   {\commentjeff{This is the introductory paper on
                  RSML. It describes the syntax and semantics of the
                  language as it relates to statecharts. This paper is
                  no longer completely accurate with the way that we
                  are expressing RSML today; however, it is a good
                  place to start for those who do not know RSML yet.}}
}


@MastersThesis{Hasselgren97:ms-thesis,
  author =   {Bengt Hasselgren},
  title =    {How to Structure a Reusable Requirements
                  Specification by Using Operational Modes},
  school =   {Stockholm University},
  year =     {1997},
  month =    {November},
  annote =   {\commentjeff{This thesis represents the start of our
                  work to develop reuse strategies based on
                  operational modes of the system.  }}
}

@Article{Heimdahl96:analysis,
  author =   {Mats P. E. Heimdahl and Nancy G. Leveson},
  title =    {Completeness and Consistency in Hierarchical
                  State-Base Requirements},
  journal =  {IEEE Transactions on Software Engineering},
  year =     {1996},
  volume =   {22},
  number =   {6},
  month =    {June},
  pages =    {363-377},
  annote =   {\commentjeff{This paper discusses how the analysis
                  of an RSML machine is done, what types of analysis
                  can be done etc. It goes into the mathematial
                  formalism of the analysis.}}
}
@InProceedings{Heimdahl97:icfem-interfaces,
  author =   {Mats P.E. Heimdahl and Jeffrey M. Thompson},
  title =    {Specification and Analysis of System Level
                  Inter-Component Communication},
  booktitle =    {First Int'l Conf. on Formal Engineering
                  Methods},
  year =     {1997},
  month =    {November},
  pages =    {192-201},
  annote =   {\commentjeff{This paper discusses the formal
                  foundations of commications between RSML
                  statemachines. Due to space limitations, on the {\sc
                  Send-Receive} communication is completely
                  discussed. Analysis criteria are given, as well as
                  some examples of using PVS to analyze the conditions
                  in the interface handlers.}}
}
@Article{Heimdahl98:interfaces-computer,
  author =   {Mats P.E. Heimdahl and Jeffrey M. Thompson and
                  Barbara J. Czerny},
  title =    {Specification and Analysis of Intercomponent
                  Communication },
  journal =  {IEEE Computer},
  year =     {1998},
  OPTkey =   {},
  OPTvolume =    {31},
  OPTnumber =    {4},
  month =    {April},
  pages =    {47-54},
  OPTnote =  {},
  annote =   {\commentmike{This article describes RSML channels.}}
}
@techreport{Heimdahl98:interface-def-tech-report,
  author =   {Mats P.E. Heimdahl},
  title =    {On the Formal Semantics of {RSML}},
  institution =  {University of Minnesota},
  address =  {Department of Computer Science, Minneapolis, MN},
  year =     {1998},
  note =     {In preparation.}
}
@techreport{Heimdahl98:interface-tech-report,
  author =   {Mats P.E. Heimdahl and Jeffrey M. Thompson and
                  Barbara J. Czerny and Duminda Wijesekera},
  title =    {Specifying and Analyzing System Level
                  Inter-Component Interfaces},
  institution =  {University of Minnesota},
  address =  {Department of Computer Science, Minneapolis, MN},
  year =     {1998},
  number =   {TR 98-030}
}

@InProceedings{Heimdahl97:slicing,
  author =   {M.P.E. Heimdahl and M.W. Whalen},
  title =    {Reduction and Slicing of Hierarchical State Machines},
  booktitle =    {Proceedings of the Fifth ACM SIGSOFT Symposium on the
Foundations of Software Engineering},
  year =     {1997},
  month =    {September},
  OPTannote =    {}
}

@InProceedings{heimdahl98:slicing,
  author =   {Mats P.E. Heimdahl and Jeffrey M. Thompson and
                  Michael W. Whalen},
  title =    {On the Effectiveness of Slicing Hierarchical State
                  Machines: A Case Study},
  booktitle =    {Proceedings of the Twenty-fourth EUROMICRO
                  Conf.},
  pages =    {435-444},
  year =     1998,
  volume =   1
}


@techreport{Heimdahl98:nimbus-overview-techreport,
  author =   {Mats P.E.~Heimdahl and Jeffrey M.~Thompson and
                  Michael W.~Whalen},
  title =    {Executing State-Based Specifications in a
                  Heterogeneous Environment},
  institution =  {University of Minnesota},
  address =  {Department of Computer Science, Minneapolis, MN},
  year =     1998,
  number =   {TR 98-029}
}

@InProceedings{Heimdahl03:Nimbus,
  author =   {Mats P.E. Heimdahl and Michael W. Whalen and Jeffrey M. Thompson},
  title =    {Nimbus: A Tool for Specification Centered Development},
  booktitle =  {Proceedings of the 11th IEEE Int'l Requirements Engineering Conf.},
  year =     {2003},
  month =  {September}
}

@Article{Heimdahl00:interfaces-journal,
  author =   {Mats P.E. Heimdahl and Jeffrey M. Thompson},
  title =    {Specifying and Analysing System-Level
                  Inter-Component Interfaces},
  journal =     {Requirements Engineering},
  year =     {2000},
  volume =   {5},
  pages =    {208-224}
}

@InProceedings{Ratan96:TCASTools,
  author =   {Vivek Ratan and Kurt Partridge and Jon Reese and
                  Nancy Leveson},
  title =    {Safety Analysis Tools for Requirements
                  Specifications},
  booktitle =    {Proceedings of the Eleventh Annual Conf. on
                  Computer Assurance, COMPASS 96.},
  year =     1996,
  annote =   {\commentjeff{Very nice overview of where we are
                  going with this tool set. Talks about fault tree
                  analysis and deviation analysis.}}
}
@InProceedings{Thompson99:nimbus-overview,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl},
  title =    {An Integrated Development Environment Prototyping
                  Safety Critical Systems},
  booktitle =    {Tenth IEEE Int'l Workshop on Rapid System
                  Prototyping (RSP) 99},
  pages =    {172-177},
  year =     {1999},
  month =    {June}
}
@TechReport{Thompson99:nimbus-proto-techrep,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl and
                  Steven P. Miller},
  title =    {Specification Based Prototyping for Embedded
                  Systems},
  institution =  {University of Minnesota},
  year =     1999,
  number =   {TR 99-006},
  address =  {Department of Computer Science, Minneapolis, MN}
}

@InProceedings{Whalen99:cg-requirements,
  author =   {Michael W. Whalen and Mats P.E. Heimdahl},
  title =    {On the Requirements of High-Integrity Code
                  Generation},
  booktitle =    {4th IEEE Int'l Symposium on High Assurance
                  Systems Engineering},
  pages =    {217-226},
  year =     1999,
  volume =   {LNCS yyy},
  annote =   {}
}

@InProceedings{Whalen99:cg-approach,
  author =   {Michael W. Whalen},
  title =    {An Approach to Automatic Code Generation for Safety-Critical
                  Systems},
  booktitle =    {Proceedings of the 14th IEEE Int'l
                  Conf. on Automated Software Engineering
                  (ASE'99)},
  pages =    {315-318},
  year =     1999,
  volume =   {},
  annote =   {}
}

@techreport{whalen00:undefined,
  author =   {Michael W.~Whalen and Mats P.E.~Heimdahl},
  title =    {Representing the Unknown in Specification Languages},
  institution =  {University of Minnesota},
  address =  {Department of Computer Science, Minneapolis, MN},
  year =     2000,
  number =   {TR 00-024}
}


@TechReport{Heimdahl02:formpcs,
  author =   {Mats P.E. Heimdahl and Jeffrey M. Thompson and
                  Steven P. Miller },
  title =    {Product Families, Formality, and Reuse: A Guide to
                  the {FORM$_{PCS}$} Method},
  institution =  {University of Minnesota},
  year =     {2002},
  OPTkey =   {},
  OPTtype =     {},
  OPTnumber =   {},
  OPTaddress =     {},
  OPTmonth =    {},
  OPTnote =     {},
  OPTannote =   {}
}

@MastersThesis{Thompson99:ms-thesis,
  author =   {Jeffrey M. Thompson},
  title =    {{\sc Nimbus}: A Framework for Static Analysis and
                  Simulation of System-level Inter-component
                  Communication},
  school =   {University of Minnesota},
  year =     1999,
  month =    {December},
}
@InProceedings{Thompson99:nimbus-proto,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl and
                  Steven P. Miller},
  title =    {Specification Based Prototyping for Embedded
                  Systems},
  booktitle =    {Seventh ACM SIGSOFT Symposium on the Foundations on
                  Software Engineering},
  pages =    {163-179},
  year =     1999,
  number =   {1687},
  series =   {LNCS},
  month =    {September},
  annote =   {}
}

@TechReport{Thompson00:light-control-tech-report,
  author =   {Jeffrey M. Thompson and Michael W. Whalen and Mats
                  P.E. Heimdahl},
  title =    {Requirements Capture and Evaluation in {{\sc Nimbus}}:
                  The Light-Control Case Study},
  institution =  {University of Minnesota},
  year =     {2000},
  number =   {TR 00-003},
  note =     {Submitted to special issue of the {\em Journal of
                  Universal Computer Science}},
  month =    {January}
}

@TechReport{Thompson00:hardware-reuse-tech-report,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl and Debra
                  M. Erickson},
  title =    {Structuring Formal Control Systems Specifications
                  for Reuse: Surviving Hardware Changes},
  institution =  {University of Minnesota},
  year =     {2000},
  number =   {TR 00-004},
  month =    {January},
  note =     {Submitted to the {\em Fifth NASA Langley Formal
                  Methods Workshop}}
}

@Article{Thompson00:light-control,
  author =   {Jeffrey M. Thompson and Michael W. Whalen and Mats
                  P.E. Heimdahl},
  title =    {Requirements Capture and Evaluation in {{\sc Nimbus}}:
                  The Light-Control Case Study},
  journal =      {Journal of Universal Computer Science},
  year =     {2000},
  OPTkey =   {},
  volume =    {6},
  number =    {7},
  pages =     {731--757},
  month =     {July},
  OPTnote =     {To appear.},
  OPTannote =    {}
}

@InProceedings{Thompson00:hardware-reuse,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl and Debra
                  M. Erickson},
  title =    {Structuring Formal Control Systems Specifications
                  for Reuse: Surviving Hardware Changes},
  booktitle =    {Proceedings of the Fifth NASA Langley Formal Methods
                  Conf. (Lfm2000)},
  OPTpages =     {},
  year =     {2000}
}

@TechReport{Thompson01:family-struct-tech-report,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl},
  title =    {Extending the Product Family Approach to Support
                  n-Dimensional and Hierarchical Product Lines},
  institution =  {University of Minnesota},
  year =     {2001},
  number =   {TR 01-012},
  month =    {February}
}

@InProceedings{Thompson01:family-struct,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl},
  title =    {Extending the Product Family Approach to Support
                  n-Dimensional and Hierarchical Product Lines},
  booktitle =   {The Fifth IEEE Int'l Symposium on
                  Requirements Engineering},
  OPTpages =    {},
  year =  {2001},
  OPTaddress =     {Toronto, Canada},
  month =    {August},
  OPTorganization = {IEEE}
}

@Article{Thompson02:family-struct-journal,
  author =   {Jeffrey M. Thompson and Mats P.E. Heimdahl},
  title =    {Structuring Product Family Requirements for
                  n-Dimensional and Hierarchical Product Lines},
  journal =     {Requirements Engineering Journal},
  year =     {2002},
  OPTkey =   {},
  OPTvolume =   {},
  OPTnumber =   {},
  OPTpages =    {},
  OPTmonth =    {},
  note =  {(Submitted)},
  OPTannote =   {}
}

@PhdThesis{Thompson02:phd-thesis,
  author =   {Jeffrey Michael Thompson},
  title =    {Structuring Formal State-Based Specifications for
                  Reuse and the Development of Product Families},
  school =   {University of Minnesota},
  year =     {2002},
  OPTmonth =    {May}
}

@InProceedings{Miller01:dasc,
  author =   {Steven P. Miller and Alan C. Tribble},
  title =    {Extending the Four-Variable Model to Bridge the
                  System-Software Gap},
  booktitle =   {Proceedings of the Twentith IEEE/AIAA Digital
                  Avionics Systems Conf. (DASC'01)},
  OPTpages =    {},
  year =  {2001},
  OPTaddress =     {Daytona Beach, Florida, USA},
  month =    {October}
}

@InProceedings{Miller05:FormalVerif,
  author =   {S.P.~Miller and E.A.~Anderson and L.G.~Wagner and M.W.~Whalen and M.P.E.~Heimdahl},
  title =    {Formal {V}erification of {F}light {C}ritical {S}oftware},
  booktitle =   {Proceedings of the AIAA Guidance, Navigation and Control Conf. and Exhibit},
  OPTpages =    {},
  year =  {2005},
  OPTaddress =     {San Francisco, California, USA},
  month =    {August}
}

@InProceedings{Leveson99:experiences,
  author =   {Nancy G. Leveson and Mats P.E. Heimdahl and Jon
                  Damon Reese},
  title =    {{Designing Specification Languages for Process
                  Control Systems: Lessons Learned and Steps to the
                  Future}},
  booktitle =    {Seventh ACM SIGSOFT Symposium on the Foundations on
                  Software Engineering},
  pages =    {127-145},
  year =     {1999},
  series =   {LNCS},
  volume =   {1687},
  month =    {September},
  annote =   {}
}
@MastersThesis{Whalen00:ms-thesis,
  author =   {Michael W. Whalen},
  title =    {A Formal Semantics for ${RSML}^{-e}$},
  school =   {University of Minnesota},
  year =     {2000},
  month =    {May}
}

@InProceedings{Whalen99:approach,
  author =   {Michael W. Whalen},
  title =    {An Approach to Automatic Code Generation for
                  Safety-Critical Systems},
  booktitle =    {Seventh ACM SIGSOFT Symposium on the Foundations on
                  Software Engineering},
  pages =    {Fill in numbers},
  year =     1999,
  volume =   {LNCS Fill in numbers},
  month =    {September},
  annote =   {}
}

@PhdThesis{Whalen02:phd-thesis,
  author =   {Michael William Whalen},
  title =    {{\sc Fill in Later}},
  school =   {University of Minnesota},
  year =     {2002},
  OPTkey =   {},
  OPTtype =     {},
  OPTaddress =     {},
  OPTmonth =    {},
  OPTnote =     {},
  OPTannote =   {}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Nancy Leveson:
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Inproceedings{Dupuy00:mcdc,
   author = {A. Dupuy and N. Leveson},
   title = {An Empirical Evaluation of the {MC/DC} Coverage Criterion
            on the HETE-2 Satellite Software},
   booktitle = {Proc. of the Digital Aviation Systems Conf. (DASC)},
   address = {Philadelphia, USA},
   month = {October},
   year = {2000}
}


@Article{Leveson:software-safety,
  author =   {Nancy G. Leveson},
  title =    {Software Safety: Why, What, and How?},
  journal =  {ACM Computing Surveys},
  volume =   {18},
  number =   {2},
  month =    {June},
  year =     {1986},
  annote =   {\commentjeff{This is Leveson's foundation article on
                  software safety. She aurgues that software safety
                  should be a field of research in its own right, not
                  grouped in with security or reliebility as in the
                  past. Security is primarily concerned with negative
                  requirements, and reliebility is concerned with all
                  failures not just with the ones where negative
                  consequences result. This article provides a
                  detailed view of the field, begining with a clear
                  statement of the problem, and has a number of
                  examples of safety accidents.}}
}
@Article{Leveson:safety-analysis,
  author =   {Nancy G. Leveson and Janice L. Stolzy},
  title =    {Safety Analysis Using Petri Nets},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {13},
  number =   {3},
  month =    {March},
  year =     {1987},
  annote =   {}
}

@InProceedings{Leveson92:steam,
  author =   {Nancy G. Leveson },
  title =    {High-Pressure Steam Engines and Computer Software},
  booktitle =    {Proceedings of the 22nd annual ACM computer science
                  Conf. on Scaling up: meeting the challenge of
                  complexity in real-world computing applications},
  year =     {1992},
  annote =   {\commentmike{This paper discusses the parallels of
                  using steam engines to generate power in the 18th
                  century and using software to control
                  safety-critical systems today. In the 18th century,
                  no regulatory agency existed for steam power, very
                  few inventors were versed in the science behind
                  steam boilers, substandard materials were often used
                  for their construction, and operators were
                  inadequately trained in the safe operation of steam
                  boilers. Consequently, the number of accidents was
                  high, causing both loss of life and property. The
                  most prominent inventor, James Watt, campaigned
                  against high-pressure steam boilers because of the
                  inherent difficulty in constructing and operating
                  them safely. This situation sounds quite similar to
                  software engineering today. The safety issues from
                  the steam boilers were in large part because the
                  inventors did not understand the science involved in
                  their construction. This was in part because the
                  science in the field did not catch up with the
                  inventions until 50 years after the steam boiler was
                  invented. The same problem exists in software today;
                  the field of formal software methods is currently in
                  a primitive state where it is difficult to
                  accurately predict the behavior of software using
                  it. Good article. }}
}


@InProceedings{Leveson97:OperatorError,
  author =   {Nancy G. Leveson and Everett Palmer},
  title =    {Designing Automation to Reduce Operator Errors},
  booktitle =    {Proceedings of the IEEE Systems, Man, and Cybernetics Conf.},
  month = {October},
  year =     {1997},
  annote =   {}}
  }


@InProceedings{Miller99:ModeConfusion,
  author =   {Steven P. Miller and James N. Potts },
  title =    {Detecting Mode Confusion Through Formal Analysis and Modeling},
  booktitle =    {NASA Contractor Report NASA/CR-1999-208971},
  year =     {1999},
  annote =   {}}
  }

@inproceedings{ButlerMiller98:ModeConfusion,
    AUTHOR = {R. Butler and S. Miller and J. Potts and V. Carreno},
    TITLE = {A Formal Methods Approach to the Analysis of Mode Confusion},
    BOOKTITLE = {17st Digital Avionics Systems Conf. (DASC'98)},
    ADDRESS = {Belllevue, WA},
    MONTH = {October},
    volume = {1},
    Pages = {C41/1 -- C41/8},
    YEAR = 1998
}


@InProceedings{JMH03:ModeConfusion,
  author =   {A.~Joshi and S.P.~Miller and M.P.E.~Heimdahl},
  title =    {Mode Confusion Analysis of a Flight Guidance System using Formal Methods},
  booktitle =    {22nd Digital Avionics Systems Conf. (DASC'03)},
  month = {October},
  year =     {2003},
  pages = {2.D.1-1 -- 2.D.1-11},
  note = {},
  annote =   {}}
  }

@Article{Leveson00:intent,
  author =   {Nancy G. Leveson},
  title =    {Intent Specifications: An Approach to Building
                  Human-Centered Specifications},
  journal =  {IEEE Transactions on Software Engineering},
  year =     {2000},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTpages =     {},
  OPTmonth =     {},
  note =     {To appear.},
  OPTannote =    {}
}

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %
    % Accidents
    %
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{Kletz88,
  author =   {T. Kletz},
  title =    {Wise after the event},
  journal =  {Contr. Instrum.},
  year =     1988,
  volume =   20,
  number =   10,
  note =     {}
}

@Misc{NYT86:ozone,
  author =   {New York Times (Science Times Section)},
  title =    {Ozone Hole over South Pole},
  howpublished = {},
  year =     1986,
  month =    {July 29}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Z
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%
% Note: it should be "Spivey" not "Spivy", but I don't want to
% break any existing paper references
% :-) Mike
%%%

@book{Spivy92,
  Author =   "J.M. Spivey",
  Title =    {The Z Notation: A Reference Manual},
  Publisher =    "Prentice-Hall",
  year =     "1992",
  Mark =     ""
}

@book{Spivey92,
  Author =   "J.M. Spivey",
  Title =    {The Z Notation: A Reference Manual},
  Publisher =    "Prentice-Hall",
  year =     "1992",
  Mark =     ""
}

@Misc{Miesels97:z-eves-reference,
  author =   {Irwin Meisels and Mark Saaltink},
  title =    {The Z/EVES Reference Manual},
  howpublished = {Available at http://www.ora.on.ca/z-eves/documentation.html},
  year =     {1997},
  month =    {September}}

@book{Woodcock96:UsingZ,
  Author =   "Jim Woodcock and Jim Davies",
  Title =    {Using Z: Specification, Refinement, and Proof},
  Publisher =    "Prentice-Hall",
  year =     "1996",
  Mark =     ""
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Online Dictionaries
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Misc{foldoc:operational-semantics,
  author =   {FOLDOC},
  title =    {Operational Semantics definition from Free Online Dictionary of Computing},
  howpublished = {via the world-wide-web: http://www.foldoc.org},
  year =     {1996},
  month =    {August}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Semantics Papers
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{Mosses98:semantics,
   author =  {Peter Mosses},
   title =   {Semantics, Modularity, and Rewriting Logic},
   journal = {Electronic Notes in Theoretical Computer Science},
   volume = {15},
   year = {1998},
   publisher = {Elsevier},
   annote = {\miketoread}
}

@Article{Schmidt96:semantics-survey,
  author =   {David A. Schmidt},
  title =    {Programming Language Semantics},
  journal =  {ACM Computing Surveys},
  volume =   {28},
  number =   {1},
  month =    {March},
  year =     {1996},
  pages =    {265-267},
  annote =   {\commentmike{Very basic overview of three different
  approaches to formalize program language semantics:
  denotational, operational, and axiomatic.  Worth reading as a
  first introduction into programming language semantics.
  }}
}

@book{Winskel93:semantics,
   Author = {Glynn Winskel},
   Title = {The Formal Semantics of Programming Languages: An
   Introduction},
   Publisher = {The MIT Press},
   Year={1993},
   annote = {\commentmike{ This is a great tutorial and reference
   book describing structural operational semantics, denotational
   semantics, and axiomatic semantics.  It describes a toy
   imperative language, IMP, and then provides semantic
   descriptions using all three types of semantics, showing the
   equivalence of the denotational and operational descriptions of
   the language.

   Chapters 3 and 4, describing the different proof techniques
   that can be used with structural operational semantics, are
   theoretically illuminating and practically useful.  They
   describe structural induction, induction over derivations,
   induction over derivation length.  These inductive techniques
   are subsumed by generalized rule induction, introduced at the
   end of the chapter.  Chapter 4 also provides a justification of
   inductive definitions as we are accustomed to seeing for
   context-free grammars.
   }}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Axiomatic Semantics Papers
       %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Floyd67:axiomatic-semantics,
    author = {Robert W. Floyd},
    title  = {Assigning Meanings to Programs},
    booktitle = {Proceedings of the Symposium of Applied Mathematics 19},
    year  =     {1967},
    pages =     {19-32},
    publisher = {American Mathematical Society, Providence, R. I.},
    series  =   {Mathematical Aspects of Computer Science},
    annote =    {\miketoread}
}

@Article{Hoare69:axiomatic-semantics,
  author =   {C.A.R. Hoare},
  title =    {An Axiomatic Basis for Computer Programs},
  journal =  {Communications of the ACM},
  volume =   {12},
  number =   {10},
  month =    {October},
  year =     {1969},
  pages =    {576-580},
  annote =   {\miketoread}
}

@book{Cohen91:programming,
   Author = {Cohen},
   Title = {Programming in the 1990s},
   Publisher = {Springer-Verlog},
   Year={1991},
   annote = {\commentmike{ Read it a long time ago...should take
   another look.
   }}
}

@book{Dijkstra76:programming-discipline,
   Author = {E. W. Dijkstra},
   Title = {A Discipline of Programming},
   Publisher = {Prentice-Hall, Englewood Cliffs, N.J.},
   Year={1976},
   annote = {\commentmike{ Should get Dad's copy & take a look}}
}

@Article{Dijkstra:guarded-commands,
  author =   {E.W. Dijkstra},
  title =    {Guarded Commands, Nondeterminacy, and Formal
              Derivation of Programs},
  journal =  {Programming Methodology.  A Collection of Articles by
              Members of the IFIP WG2.3},
  publisher = {Springer-Verlag},
  editor =   {David Gries},
  year =     {1978},
  pages =    {166-175},
  annote =   {\miketoread}
}

@Article{Good85:proofs,
  author =   {D.I. Good},
  title =    {Mechanical Proofs about Computer Programs},
  journal =  {Mathematical Logic and Programming Languages},
  publisher = {Prentice-Hall},
  editor =   {C.A.R. Hoare and J.C. Shepherdson},
  year =     {1985},
  annote =   {\miketoread}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Denotational Semantics Papers
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{Scott71:denotational-semantics,
  AUTHOR =   {Dana Scott and Christopher Strachey},
  TITLE =    {Towards a Mathematical Semantics for Computer Languages},
  NUMBER =   {PRG-6},
  INSTITUTION =  {Oxford University Programming Research Group},
  ADDRESS =  {Oxford, England},
  MONTH =    {},
  YEAR =     {1971},
  annote =   {\commentmike{Gotta read this
  }}
}

@TechReport{Scott71:lattices,
  AUTHOR =   {Dana Scott},
  TITLE =    {Continuous Lattices},
  NUMBER =   {PRG-7},
  INSTITUTION =  {Oxford University Programming Research Group},
  ADDRESS =  {Oxford, England},
  MONTH =    {},
  YEAR =     {1971},
  annote =   {\commentmike{Gotta read this
  }}
}

@Article{Strachey66:semantics,
  author =   {Christopher Strachey},
  title =    {Towards a Formal Semantics},
  journal =  {Formal Language Description Languages},
  year =     {1966},
  pages =    {198-220},
  annote =   {\miketoread}
}

@TechReport{Strachey73:varieties,
  AUTHOR =   {Christopher Strachey},
  TITLE =    {The Varieties of Programming Languages},
  NUMBER =   {PRG-10},
  INSTITUTION =  {Oxford University Programming Research Group},
  ADDRESS =  {Oxford, England},
  MONTH =    {},
  YEAR =     {1973},
  annote =   {\miketoread}
}

@TechReport{Mosses74:algol-60,
  AUTHOR =   {P. Mosses},
  TITLE =    {The Mathematical Semantics of Algol-60},
  NUMBER =   {PRG-12},
  INSTITUTION =  {Oxford University Programming Research Group},
  ADDRESS =  {Oxford, England},
  MONTH =    {},
  YEAR =     {1974},
  annote =   {\miketoread}
}

@TechReport{Tennent78:Pascal,
  AUTHOR =   {R.D. Tennent},
  TITLE =    {A Denotational Definition of the Programming Language Pascal},
  NUMBER =   {},
  INSTITUTION =  {Oxford University Programming Research Group},
  ADDRESS =  {Oxford, England},
  MONTH =    {},
  YEAR =     {1978},
  annote =   {\miketoread}
}

@Article{Spoto2000:prolog-semantics,
  author =   {F. Spoto},
  title =    {Operational and goal-independent denotational semantics for Prolog with cut},
  journal =  {Journal of Logic Programming},
  volume =   {42},
  number =   {1},
  month =    {January},
  year =     {2000},
  pages =    {1-46},
  annote =   {}
}

@Article{Abelson98:scheme-semantics,
  author =   {H. Abelson and R.K. Dybvig and C.T. Haynes and G.J Rozas and N.I. Adams and
             D.P Friedman and E. Kohlbecker and G.L Steele and D.H. Bartley and R. Halstead
             and D. Oxley and G.J. Sussman and G. Brooks and C. Hanson and K.M. Pitman and M.Wand},
  title =    {Revised report on the algorithmic language Scheme},
  journal =  {Higher Order and Symbolic Computation},
  volume =   {11},
  number =   {1},
  month =    {August},
  year =     {1998},
  pages =    {7-105},
  annote =   {}
}


@book{Allison86:semantics,
    Author = {Lloyd Allison},
    Title = {A Practical Introduction to Denotational Semantics},
    Publisher = {Athen\ae um Press Ltd.},
    Year = {1986},
    annote =   {\commentmike{ This book presents a quick but thorough overview
                of denotational semantics for imperative languages.  First, it
                describes the fundamentals of the approach, starting with
                Church's lambda functions, then providing an overview of
                mathematical domains to show that denotational definitions,
                in a form similar to lambda calculus, have a well-defined
                meaning.  The denotational descriptions of successively
                more complicated imperative languages are then provided.}}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Structural Operational Semantics Papers
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@book{Pierce02:types-and-pls,
   Author = {Benjamin C. Pierce},
   Title = {Types and Programming Languages},
   Publisher = {The MIT Press},
   Year = {2002},
   annote = {\commentmike{ This book provides a breathtaking overview of
      the semantics of programming languages: it describes imperative,
      functional, and object-oriented languages.  It uses structural
      operational semantics as a unifying presentation technique for
      static and dynamic semantics of each of these languages.  It is
      a must-read for a thorough understanding of the semantics of
      programming languages.}}
}

@Article{Klint93:centaur,
  author =   {P. Klint},
  title =    {A Meta-Environment for Generating Programming Environments},
  journal =  {ACM Transactions on Software Engineering and Methodology},
  volume =   {2},
  number =   {2},
  month =    {April},
  year =     {1993},
  pages =    {176-201},
  annote =   {}
}


@InProceedings{Clement89:centaur,
  author =   {D. Clement and J. Incerpi and G. Kahn},
  title =    {CENTAUR: Towards a `Software Toolbox' for Programming Environments.},
  booktitle =    {Software Engineering Environments.  Int'l Workshop on
    Environments },
  pages =    {287-304},
  year =     {1990},
  publisher = {Springer-Verlag},
  annote =   {\miketoread}
}

@InProceedings{Pettersson94:rml,
    author = {Mikael Pettersson},
    title  = {RML - A New Language and Implementation for Natural
                Semantics},
    booktitle = {6th Int'l Symposium on Programming
                 Language Implementation and Logic Programming
                 (PLILP'94)},
    year  =     {1994},
    month =     {September},
    pages =     {117-131},
    publisher = {Springer-Verlag},
    series  =   {Lecture Notes in Computer Science 844},
    annote =    {\miketoread}
}

@InProceedings{Turi97:semantics,
  author =   {D. Turi and G. Plotkin},
  title =    {Towards a Mathematical Operational Semantics},
  booktitle =    {Proceedings. 12th Annual IEEE Symposium on Logic in Computer Science},
  pages =    {280-291},
  year =     {1997},
  annote =   {}
}

@InProceedings{Attali93:eiffel-semantics,
  author =   {I Attali and D. Caromel and M. Oudshoorn},
  title =    {A Formal Definition of the Dynamic Semantics of the Eiffel Language},
  booktitle =    {16th Australian Computer Science Conf. (ACSC-16), Brisbane, Australia},
  pages =    {},
  month =    {February},
  year =     {1993},
  annote =   {}
}


@InProceedings{Haridi91:prolog-semantics,
  author =   {S. Haridi and C. Palamidessi},
  title =    {Structural operational semantics for Kernel Andorra Prolog},
  booktitle =    {PARLE'91 Parallel Architectures and Languages Europe Volume II: Parallel Languages},
  publisher = {Springer-Verlag},
  pages =    {238-253},
  year =     {1991},
  annote =   {}
}

@book{Milner97:ML-semantics,
    Author = {Robin Milner and Mads Tofte and Robert Harper and David MacQueen},
    Title = {The Definition of Standard ML},
    Publisher = {The MIT Press},
    Year = {1997},
    annote =   {\commentmike{Ugh.}}
}

@TechReport{Plotkin81:sos,
  AUTHOR =   {Gordon D. Plotkin},
  TITLE =    {A Structural Approach to Operational Semantics},
  NUMBER =   {DAIMI FN-19},
  INSTITUTION =  {Computer Science Department, Aarhus
                  University},
  ADDRESS =  {Aarhus, Denmark},
  MONTH =    {September},
  YEAR =     {1981},
  annote =   {\commentmike{This 'technical report' is actually a
             187 page book describing a complete approach for
             representing semantics for imperative and functional
             languages.  Structural operational semantics views
             the execution of a program as a series of
             transformations of an abstract state.  This state
             is a mapping from identifiers to values, where the
             identifiers can represent constants, variables, or
             functional types.

             The transformations are described as rules, similar
             to rules of natural deduction, that describe under
             what circumstances the state may be transformed, and
             what the result of the transformation is.  The former
             objects are the premises of the rule, and the latter
             is the conclusion of the rule.

             Plotkin makes a very conscious effort to keep the
             required mathematical apperatus for the rules as
             simple as possible.  SOS does not introduce fixpoints
             (as in denotational semantics), and keeps all of the
             mathematics involving the manipulation of states and
             environments finitary.

             Non-recursive functions and procedures with parameters
             are given a nice treatment as closures corresponding
             exactly to declarations of the form $let$ $x$ $in$
             $expr$.  Recursive functions and procedures require
             somewhat clumsy definitions.
  }}
}

@InProceedings{Kahn87:natural-semantics,
  author =   {G. Kahn },
  title =    {Natural Semantics},
  booktitle =    {In Proc. of the 4th Annual Symposium
                  on Theoretical Aspects of Computer Science},
  year =     {1987},
  pages =    {22-39},
  series =   {Lecture Notes in Computer Science 247},
  annote =   {\commentmike{
         This article discusses {\em Natural Semantics}, a
         specialization of structural operational semantics.  It
         first of all makes a strong case for structural
         operational semantics, as opposed to denotational
         semantics, describing the following problems with
         denotational descriptions, each having to do with the
         functional character of denotational descriptions vs. the
         relational character of Natural Semantics:
         \begin{itemize}
            \item Type checking is much more 'natural' in NS.
            With rule-based approaches, it is straightforward to
            describe the rules for a well-typed expression; if an
            expression is not well-typed, then there simply can be
            no derivation for the expression.  With denotational
            descriptions, a fake type like {\em type-error} must be
            added to the domain of types so that the type-checking
            function can return something.  Also, the typing rules
            of operational semantics are not required to encode a
            proof-search mechanism - they can simply describe what
            valid type inference is, without describing {\em how}
            to derive the type for an expression.

            \item Translations between languages can also be described
            at a higher level with NS than with denotational
            semantics.  Thus, specifying the behavior of a
            translator requires coding it in a denotational
            approach.

            \item Denotational semantics requires continuations to
            express control transfers, a construct that is
            notationally difficult for language designers (aside:
            certainly true for me!).  As denotational semantics
            are functional, it is very difficult to describe
            parallel or non-deterministic computations.
         \end{itemize}

         The paper then goes on to describe a translation approach
         from a stripped down variant of ML (Mini-ML) to the
         categorical abstract machine (CAM).  No arguments of the
         correctness of the translation are provided; instead,
         simply the 'code template' necessary for each Mini-ML
         construct is provided in CAM.

         It also discusses type-checking for Mini-ML using natural
         semantics.
  }}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Proof-Carrying Code
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{Necula98:untrusted-agents,
  author =   {George C. Necula and Peter Lee},
  title =    {Safe, Untrusted Agents using Proof-Carrying Code},
  journal =      {Mobile Agents and Security},
  year =     {1998},
  pages =    {61-91},
  editor =   {G. Vigna},
  publisher = {Springer-Verlag},
  annote =   {\miketoread}
}

@inproceedings{Necula98:proof-representation,
  AUTHOR =   {George C. Necula and Peter Lee},
  TITLE =    {Efficient Representation and Validation of Proofs},
  booktitle =  {Thirteenth Annual IEEE Symposium on Logic in Computer Science},
  Month =    {June},
  YEAR =     {1998},
  PAGES =    {93-104},
  publisher = {IEEE Computer Society},
  annote =   {\commentmike{read}}
}

@inproceedings{Necula97:pcc,
  AUTHOR =   {George C. Necula},
  TITLE =    {Proof-Carrying Code},
  booktitle =  {Conf. Record of POPL'97: The 24th ACM
               SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  YEAR =     {1997},
  PAGES =    {106-119},
  publisher = {ACM},
  annote =   {\commentmike{read}}
}

@inproceedings{Necula96:kernel-extensions,
  AUTHOR =   {George C. Necula and Peter Lee},
  TITLE =    {Safe Kernel Extensions Without Run-Time Checking},
  booktitle =  {Second USENIX Symposium on Operating Systems Design
     and Implementation (OSDI). },
  YEAR =     {1996},
  PAGES =    {229-243},
  publisher = {ACM},
  annote =   {\commentmike{should read}}
}

@misc{Schneider98:security,
   author = {Fred B. Schneider},
   title =  {Enforceable Security Policies},
   howpublished = {Computer Science Technical Report TR98-1644,
                   Cornell University, Computer Science Department},
   year = {1998},
   month = {September}
}

@Article{Alpern85:liveness,
  author =   {Bowen Alpern and Fred. B. Schneider},
  title =    {Defining Liveness},
  journal =      {Information Processing Letters},
  year =     {1985},
  volume =   {21},
  number =   {4},
  pages =    {181-185},
  annote =   {\miketoread}
}



@inproceedings{Necula98:certifying-compiler,
  AUTHOR =   {George C. Necula and Peter Lee},
  TITLE =    {The Design and Implementation of a Certifying Compiler},
  booktitle =  {ACM Sigplan '98 Conf. on Programming
                Language Design and Implementation},
  Month =    {June},
  YEAR =     {1998},
  PAGES =    {333-344},
  publisher = {ACM},
  annote =   {\commentmike{read}}
}

@PhdThesis{Necula98:phd-thesis,
  author =   {George C. Necula},
  title =    {Compiling with Proofs},
  school =   {Carnegie Mellon University},
  year =     {1998},
  annote =   {\commentjeff{Melhart's discussed the external, black
                  box view of the communication between various system
                  components in requirements specification. She
                  includes a dicussion of the various time times in
                  intercomponent communication as well as a discussion
                  of fault tree analysis. The thesis begins with a
                  discussion of modeling in general and moves the
                  intercomponent topic. In the incomponent section,
                  Melhart discusses various time types (continous,
                  periodic, stimulus response) and the proper
                  interconnection of components using these time
                  types. In addition, she discusses the importance of
                  channel compatibility and min/max assumptions. The
                  thesis concludes with a section on analysis with her
                  proposed model (with fault tree analysis).}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% ASMS
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@inproceedings{Borger00:UML,
 author = {B\"{o}rger, Egon and Cavarra, Alessandra and Riccobene, Elvinia},
 title = {Modeling the Dynamics of UML State Machines},
 booktitle = {ASM '00: Proceedings of the Int'l Workshop on Abstract State Machines, Theory and Applications},
 year = {2000},
 isbn = {3-540-67959-6},
 pages = {223--241},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

@INPROCEEDINGS{Jin02describingthe,
    author = {Yan Jin and Robert Esser and Jrn W. Janneck},
    title = {Describing the Syntax and Semantics of UML Statecharts
      in a Heterogeneous Modelling Environment},
    booktitle = {In Proc. Diagrammatic Representation and Inference, LNAI 2317},
    year = {2002},
    pages = {320--334},
    publisher = {Springer}
}

@Article{Gurevich93:evolving-algebras,
  author =   {Yuri Gurevich},
  title =    {Evolving Algebras: An Attempt to Discover Semantics},
  journal =      {Current Trends in Theoretical Computer Science},
  year =     {1993},
  pages =    {266-292},
  editor =   {G. Rozenberg and A. Salomaa},
  publisher = {World Scientific},
  annote =   {\miketoread}
}

@inproceedings{Borger99:java-semantics,
  AUTHOR =   {Egon B\"orger and Wolfram Schulte},
  TITLE =    {A Programmer Friendly Modular Definition
              of the Semantics of Java},
  booktitle =  {Formal Syntax and Semantics of
              Java.  Lecture Notes in Computer Science},
  YEAR =     {1999},
  editor =   {J. Alves-Foss},
  VOLUME =   {1523},
  PAGES =    {353--404},
  publisher = {Springer-Verlag Berlin Heidelberg New York},
  annote =   {\commentmike{read}}
}

@inproceedings{Borger95:processor,
  AUTHOR =   {Egon B\"orger and G. Del Castillo},
  TITLE =    {A Formal Method for Provably Correct Composition
             of a Real-Life Processor out of Basic Components (The
             APE100 Reverse Engineering Project) },
  booktitle =  {Proceedings of the First IEEE Int'l
                Conf. on Engineering of Complex Computer Systems
                (ICECCS'95).},
  YEAR =     {1995},
  editor =   {},
  VOLUME =   {},
  PAGES =    {},
  publisher = {IEEE Press},
  annote =   {\commentmike{not read}}
}

@inproceedings{Borger98:jvm-semantics,
  AUTHOR =   {Egon B\"orger and Wolfram Schulte},
  TITLE =    {Defining the Java Virtual Machine as a Platform
              for Provably Correct Java Compilation},
  booktitle =  {Proceedings of MFCS'98.  Lecture Notes in Computer
  Science},
  YEAR =     {1998},
  editor =   {L. Brim and J. Gruska and J. Zlatuska},
  VOLUME =   {1450},
  PAGES =    {17--35},
  publisher = {Springer-Verlag Berlin Heidelberg New York},
  annote =   {\commentmike{not read}}
}

@inproceedings{Borger94:occam-semantics,
  AUTHOR =   {Egon B\"orger and I. Durdanovic},
  TITLE =    {Occam: Specification and Compiler Correctness Part 1:
              The Primary Model},
  booktitle =  {Proceedings of the IFIP Working Conf. on
                Programming Concepts, Methods, and Calculi (PROCOMET'94)
                },
  YEAR =     {1994},
  editor =   {E.R. Olderog},
  PAGES =    {489-508},
  publisher = {North-Holland},
  annote =   {\commentmike{not read}}
}

@inproceedings{Beierle96:steam-boiler,
  AUTHOR =   {Christophe Beierle and Egon B\"orger and Igor
                  Durdanovic and Uwe Gl\"asser and Elvinia Riccobene},
  TITLE =    {Refining Abstract Machine Specifications of the
                  Steam Boiler Control to Well Documented Executable
                  Code},
  booktitle =   {Formal Methods for Industrial
                  Applications. Specifying and Programming the
                  Steam-Boiler Control. Lecture Notes in Computer
                  Science, State-of-the-Art Survey},
  YEAR =  {1998},
  editor =   {J.R. Abrial and E. B\"orger and H. Langmaack},
  VOLUME =   {1165},
  PAGES =    {52--78},
  publisher =   {Springer-Verlag Berlin Heidelberg New York},
  annote =   {\commentmike{read}}
}

@inproceedings{Borger94:prolog-semantics,
  AUTHOR =   {Egon B\"orger and Dean Rosenzweig},
  TITLE =    {The WAM --- Definition and Compiler Correctness},
  booktitle =  {Logic Programming: Formal Methods and Practical
                Applications},
  YEAR =     {1994},
  editor =   {C. Beierle and L. Pl\"umer},
  PAGES =    {1--71},
  publisher = {Elsevier Science Publishers B.V.},
  annote =   {\commentmike{read}}
}

@InProceedings{Wallace95:cpp-semantics,
  AUTHOR =   {Charles Wallace},
  TITLE =    {The Semantics of the C++ Programming Language},
  booktitle =  {Specification and Validation Methods},
  YEAR =     {1995},
  editor =   {E. B\"orger},
  PAGES =    {131-164},
  publisher = {Oxford University Press},
  annote =   {\commentmike{read}}
}

@article{gutjahr1999partition,
  title={Partition testing vs. random testing: The influence of uncertainty},
  author={Gutjahr, W.J.},
  journal={IEEE Transactions on Software Engineering},
  volume={25},
  number={5},
  pages={661--674},
  issn={0098-5589},
  year={1999},
  publisher={IEEE}
}

@inproceedings{Borger99:asm-overview,
  AUTHOR =   {Egon B\"orger},
  TITLE =    {High-Level System Design and Analysis using
              Abstract State Machines},
  booktitle =  {Current Trends in Applied Formal Methods (FM-Trends 98).
                Lecture Notes in Computer Science},
  YEAR =     {1999},
  VOLUME =   {1641},
  editor =   {D. Hutter and W. Stephan and P Traverso and M. Ullmann},
  PAGES =    {1-43},
  publisher = {Springer-Verlag Berlin Heidelberg New York},
  annote =   {\commentmike{read}}
}

@inproceedings{Borger00:asm-composition,
  AUTHOR =   {Egon B\"orger and Joachim Schmid},
  TITLE =    {Composition and Submachine Concepts for Sequential ASMs},
  booktitle =  {Proceedings of CSL'2000 (Gurevich Festschrift).
                Lecture Notes in Computer Science},
  YEAR =     {2000},
  VOLUME =   {},
  editor =   {P. Clote and H. Schwichtenberg},
  PAGES =    {},
  publisher = {Springer-Verlag Berlin Heidelberg New York},
  annote =   {\commentmike{read}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Structural Induction
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@inproceedings{Lawall93:partial-evaluation,
  AUTHOR =   {Julia L. Lawall},
  TITLE =    {Proofs by Structural Induction using Partial Evaluation},
  booktitle =  {Proceedings of PEPM'93 },
  YEAR =     {1993},
  VOLUME =   {},
  editor =   {},
  PAGES =    {155-166},
  publisher = {ACM},
  annote =   {\commentmike{This paper describes an approach to do
  machine-assisted structural induction proofs by partial
  evaluation, specifically to prove structural properties about
  transformations on source code.  So, for example, it can assist
  automating proofs that transformations are associative or
  inverses, for example.  The approach is outside the realm of
  what I need at this point, both because I'm interested in
  semantic as well as structural properties (does the program have
  the same behavior after transformation?), and also, I'm not
  ready to look at machine-assisted proofs at this time.  }}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Transformational approaches
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{Bergstra97:transformational-toolkit,
  author =   {J.A. Bergstra and T. B. Dinesh and J. Field and J. Heering},
  title =    {Toward a Complete Transformational Toolkit for Compilers},
  journal =      {ACM Transactions on Programming Languages},
  year =     {1997},
  month =    {September},
  volume =   {19},
  number =   {5},
  pages =    {639-684},
  annote =   {\commentmike{ Long paper making a case for using PIM
  as an intermediate representation for different languages for a
  compiler.  The semantics are algebraic, but it seems that the
  equality rules are used, at least in section 3, as
  inference (implicative) rules defining the operational semantics for PIM.

  The algebraic semantics trades structural induction for
  equational reasoning for proofs.  They describe some advantages
  to using the equational approach over structural induction, but
  I don't understand these advantages.

  For me, this paper is not necessary.  The authors are trying to
  create a very general intermediate language suitable for a
  complete imperative language with pointers, side effects, etc.,
  which is unnecessarily complex for what I'm trying to do.  Also,
  creating equational specifications is a big pain in the ass, so
  creating representations of languages in their intermediate
  language seems difficult and abstruse.

  Aside: I probably should read a survey paper on algebraic
  specifications before I graduate
  }}
}

@Article{Bauer89:CIP,
  author =       {F. L. Bauer and B. Moller and M. Partsch and P. Pepper},
  title =        {Formal Program Construction by
        Transformations--Computer-Aided, Intuition-Guided
        Programming},
  journal =      {IEEE Transactions on Software Engineering},
  volume =       {15},
  number =       {2},
  pages =        {165--180},
  month =        {February},
  year =         {1989},
  annote =       {}
}

@inproceedings{Dritz77:TAMPR,
  author =   {K.W. Dritz},
  title =    {Multiple Program Realizations using the TAMPR system},
  booktitle =    {Portability of Numerical Software},
  year =     {1977},
  editor =   {W. Cowell},
  pages =    {405-423},
  publisher =    {Springer-Verlag}
}

@Article{Boyle84:TAMPR,
  author =   {J.M. Boyle and M.N. Muralidharan},
  title =    {Program Reusability through Program Transformation},
  journal =  {IEEE Transactions on Software Engineering},
  month =    {September},
  year =     {1984},
  volume =   {10},
  number =   {5},
  annote =   {\commentmike{read}}
}

@article{Zave91,
  Author =   "P. Zave",
  Title =    "An Insider's Evaluation of {PAISL}ey",
  Journal =  tse,
  Year =     "1991",
  Volume =   "17",
  Number =   "3",
  Month =    "March",
  Mark =     "Summary of Paisley. Also some good pointers on what
                  went right and what went wrong in her reseach
                  efforts. "
}

@Article{Zave91:PAISLeyEval,
  author =   {Pamela Zave},
  title =    {An Insider's Evaluation of PAISLey},
  journal =  {IEEE Transactions on Software Engineering},
  month =    {March},
  year =     {1991},
  volume =   {17},
  number =   {8},
  annote =   {\commentjeff{Evaluation of the work done on the
                  PAISLey language. Includes some usefull evaluation
                  criteria which could be applied to any special
                  purpose language.}}
}


@article{Auernheimer86,
  Author =   "B. Auernheimer and R. A. Kemmerer",
  Title =    "{RT-ASLAN}: {A} specification language for real-time
                  systems",
  Journal =  "{IEEE} {T}ransactions on {S}oftware {E}ngineering",
  Year =     "1986",
  Volume =   "12",
  Number =   "9",
  Month =    "September",
  Mark =     ""
}
@inproceedings{Refine-Users,
  Author =   "L. Abraido-Fandino",
  Title =    "An overview of {REFINE} 2.0",
  Booktitle =    "Proceedings of the second symposium on knowledge
                  engineering, Madrid, Spain",
  Year =     "1987",
  Note =     ""
}
@Article{Partsch83:Transformation,
          author = {H. Partsch and R. Steinbr\"{u}ggen},
          title = {Program Transformation Systems},
          journal = {ACM Computing Surveys},
          month = {September},
          year = {1983},
          volume = {15},
          number = {3},
          annote = {\commentmike{Survey of wide spectrum languages.  Excellently
            written, this article provides all of the background information
            required to begin reading papers about specific systems.
            Since this review tries to explain at a high level the entire
            survey, it is quite long.
            Begins with description of ``Program'' vs.
            ``Program Scheme'', where a scheme seems to be simply an
            abstract program template that must be parameterized
            to be executable.  A transformation is defined as a relation
            between two program schemes P and P'.  A transformation is
            correct if a predefined semantic relationship holds between
            the schemes.  The relations can be: equivalence, weak equivalence,
            and descendent relations.  Weak equivalence only holds for defined
            situations for P (i.e. it ignores program termination and values
            outside the specified input range for P).  Descendence is used for
            nondeterministic schemes; it means that P' is equivalent to a subset
            of all of the possible non-deterministic behaviors of P.

            Transformation rules implement correct transformations between the
            program schemes.  Transformational programming starts with a formal
            specification and refines from the specification towards production
            level code.  Transformations can be from abstract specifications to
            code (program synthesis), Conversion from one programming language
            to another (program adaptation), or re-engineering from existing
            code (program description).  The system maintains a list of possible
            transformations, called a catalog.

            The systems usually track the transformations applied to the original
            artifact, providing an automatic journaling facility useful for
            program maintenance.  This facility is also useful in the face of
            small changes to the initial specification; the systems can
            conservatively re-apply transformations that are not affected by the
            change in the specification.

            Transformation rules can be implemented in two ways: via algorithms
            (procedural) or as an ordered pair of program schemes (schematic rule
            or pattern replacement) connected by a replacement symbol for
            equivalence or descendence.  The rules can also be categorized by
            their scope: local vs. global rules.  The local rules relate language
            constructs, describe algebraic properties, or express domain knowledge,
            usually at the 'sentence' level of the specification.  Global rules
            are used for dataflow analysis, consistency checks, etc.
            There are three varieties of user involvement - fully automatic
            systems, semi-automatic systems, and non-automated systems.  Fully
            automatic systems require no user involvement and usually only
            work in a narrow domain; the RSML code generator is an example
            of this type of system.  Automated systems can perform two types
            of rule matching: first order matching, where only object variables
            must be identified.  If functional variables are matched, second
            order matching is required.  The second order matching is generally
            too difficult to be entirely automated.
            }}
          }


@Article{Balzar85:AutoProgramming,
  author =   {Robert Balzar},
  title =    {A 15 Year Perspective on Automatic Programming},
  journal =  {IEEE Transactions on Software Engineering},
  month =    {November},
  year =     {1985},
  volume =   {11},
  number =   {11},
  annote =   {\commentmike{This article presents an overview of
                  the state of the art (in 1985) of program
                  transformation languages. It attempts to explain the
                  various translations between a high-level, informal
                  specification and a programming language. The
                  authors developed their own formal language, Gist,
                  to be used in an automated software development
                  environment. Gist is (apparently) a constraint
                  based, operational specification language. Aside:
                  I'm confused as to how a constraint-based language
                  can also be operational. Machine-assisted
                  transformations are performed on a Gist
                  specification, expanding a high-level spec into
                  something that can be machine executable. One
                  interesting note is that the group created a grammar
                  (Paddle) to represent the sequence of
                  transformations on the specification as well as the
                  spec language itself. This greatly simplifies
                  specification maintenance; when a specification is
                  modified, a parser examines the high-level spec and
                  the Paddle program used to transform it into a
                  low-level specification. It then creates a new
                  (incomplete) translation maintaining all
                  transformations unaffected by the spec changes. In
                  order to ensure that specifications are correct, the
                  group uses three different tools: first, a
                  paraphrase tool that generated structured English
                  from a Gist specification. This tool allows the
                  specification writers to catch errors of intent -
                  i.e. the semantics of the formal spec didn't match
                  the desired behavior of the spec writers. The second
                  tool is a simulator, which executes Gist
                  specifications given a set of inputs. The third tool
                  is a specialized symbolic simulator, which allows
                  simulation test cases to be partially
                  specified. Those inputs not specified are tested
                  symbolically for all possible input values. Their
                  future work is to create a high-level meta-language
                  for Paddle, to try to further automate the
                  translation process. They've had some success using
                  this meta-language approach for specialized domains,
                  notably expert systems. Sort of interesting work;
                  however they mention that it has only been
                  successful o pedagogical examples. It seems to me
                  that if you must repeatedly recursively abstract
                  away from your desired solution (as they're doing
                  with their high-level Paddle language), you're using
                  the wrong approach to solve the problem. }}
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % General Formal Methods Papers
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{Bowen95:seven-more-myths,
  author =   {Jonathan P. Bowen and Michael G. Hinchey},
  title =    {Seven More Myths of Formal Methods},
  journal =  {IEEE},
  year =     {1995},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {July},
  pages =    {34-40},
  OPTnote =  {},
  annote =   {\commentjeff{Discusses seven more myths of formal
                  methods; written as a followup to the earlier
                  article written by Hall. Myths are: 8) formal
                  methods delay developement, 9) formal methods lack
                  tools, 10) formal methods replace traditional
                  engineering methods, 11) formal methods only apply
                  to software, 12) formal methods are unneccesary, 13)
                  formal methods are not supported, 14) formal methods
                  people always use formal methods. }}
}
@Article{Bowen95:10-commandments,
  author =   {Jonathan P. Bowen and Michael G. Hinchey},
  title =    {Ten Commandments of Formal Methods},
  journal =  {IEEE Computer},
  year =     {1995},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {April},
  pages =    {56-63},
  OPTnote =  {},
  annote =   {\commentjeff{Discusses the ten commandments of
                  formal methods as seen by the authors. Basically
                  presents ten tips to using formal methods
                  sucessfully. The ten tips are: 1) choose the right
                  notation for the problem, 2) don't over-formalize,
                  3) estimate costs, 4) make sure to have a formal
                  methods expert on hand, 5) don't abondon traditional
                  development methods -- integrate formal methods into
                  them, 6) produce good documentation, 7) formal
                  methods are not a substitue for other quality
                  standards, 8) other methods that increase system
                  quality should also be applied, 9) test the system
                  thoroughly -- testing shows only the presence of
                  errors not the absense of them, 10) reuse.}}
}
@Article{Craigen95:fm-reality-check,
  author =   {Dan Craigen and Susan Gerhart},
  title =    {Formal Methods Reality Check: Industrial Usage},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {21},
  number =   {2},
  month =    {Febuary},
  year =     {1995},
  annote =   {\commentjeff{This paper is based on a survey of
                  formal methods usage in industrial settings. The
                  author discuss the cases and systems involved as
                  well as the formal methods used in each case. They
                  provide recommendations for the evolutionary
                  developement of formal methods techniques including:
                  more tools, technology transfere, notational
                  issues.}}
}
@Article{Dill96,
  author =   "David L. Dill and John Rushby",
  title =    "Acceptance of Formal Methods: Lessons from Hardware
                  Design",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{This article focuses on the successes
                  that formal methods have enjoyed in the hardware
                  arena. The authors point out that hardware is
                  'easier' than software in several respects (no
                  pointers, no potentially unbounded loops or
                  recursion, and no dynamically created
                  processed). They assert that despite these
                  differences, there are lessons to be learned from
                  the hardware experience. First, we need more
                  powerful, better tools. Second, use tools to find
                  bugs, rather that prove overall correctness. Third,
                  target the use of formal methods within the
                  project. Finally, researchers should apply
                  themselves to real problems.}}
}
@Article{Dillon94,
  author =   {L. K. Dillon and G. Kutty and P. M. Melliar-Smith
                  and Y. S. Ramakrishna},
  title =    {A Graphical Interval Logic for Specifying Concurrent
                  Systems},
  journal =  {ACM Transactions on Software Engineering and
                  Methodology},
  year =     1994,
  volume =   3,
  number =   2,
  month =    {April},
  pages =    {131-165},
  annote =   {\commentjeff{This article I thought was alittle
                  easier to go through. The elevator example was
                  helpful -- it is a familar problem. I think it will
                  be interesting to see the tool.}}
}
@Article{Glass96,
  author =   "Robert L. Glass",
  title =    "Formal Methods are a Surrogate for a More Serious
                  Software Concern",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{Mr. Glass asserts that the formal
                  methods debate is an symptom of 'a chasm that exists
                  between software in academe and software in
                  industry. Academics and practitioners have a
                  different view of where the industry is going. Glass
                  asserts that academia should do less in the way of
                  preaching about how things ought to be done and more
                  in the way of studying how things are done and how
                  best to improve them. He cites a lack of
                  cost-benefit analysis, and a lack of customer
                  understandability as the chief problems.}}
}
@Article{Hall90,
  author =   "Anthony Hall",
  title =    "Seven Myths of Formal Methods",
  journal =  "IEEE Software",
  year =     1990,
  month =    "September",
  annote =   {\commentjeff{This article discusses the various uses
                  and properties of formal methods. It begins with a
                  discussion of what it means to be a formal
                  method. As it turns out, many things that are not
                  'normally' thought of as formal languages can be
                  interpreted as such. For example, programming
                  languages. The article then goes on to discuss some
                  uses of formal methods (requirements analysis,
                  systems design, ...). Finally, several examples of
                  formal methods are discussed including Z, Larch,
                  VDM, and others.}}
}
@Article{Hall96,
  author =   "Anthony Hall",
  title =    "What is the Formal Methods Debate About?",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{The author is a practitioner at Praxis
                  software who advocates the use of formal methods in
                  development, citing real world examples of how they
                  have benefited projects at his company. He maintains
                  that, as far as we can tell, formal methods are
                  cheaper that conventional methods for critical
                  systems.}}
}
@Article{Hinchey96,
  author =   "Michael G. Hinchey and Jonathan P. Bowen",
  title =    "To Formalize or not to Formalize?",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{Article identifies four major reasons
                  for industry's reluctance to accept formal
                  methods. First, formal methods are not required by
                  any standards body. This makes formal methods seem
                  'optional'; however, since standards bodies are
                  moving currently using formal methods, it seems
                  plausible that in the future formal methods may be a
                  requirement. Second, tool support is not up to the
                  challenge. The authors advocate development of
                  IFDSEs (Integrated Formal Development Support
                  Environments). Third, education does not adequately
                  support the transfer. Undergradute education must
                  include the necessary foundations to apply formal
                  methods. Finally, there are numerous myths
                  associated with formal methods.}}
}

@Article{Holloway96,
  author =   "C. Michael Holloway and Ricky W. Butler",
  title =    "Impediments to Industrial Use of Formal Methods",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{In this article, the authors focus on
                  three problems with the industrial use of formal
                  methods. They use their own work with formal methods
                  at the NASA Langley research center as an example of
                  the correct application of formal methods. The three
                  problems they cite are 1) inadequate tools, 2)
                  inadequate examples, and 3) a 'build it and they
                  will come' expectation.}}
}

@Conf.{Jackson96:Z-analysis,
  author =   {Daniel Jackson and Craig A. Damon},
  title =    {Elements of Style: Analyzing a Software Design
                  Feature with a Counterexample Detector},
  booktitle =    {ISSTA '96},
  year =     {1996},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
OPTnote =      {},
  annote =   {\commentjeff{ This article gives an example of
          an analysis tool for the Z specification language.
          The authors present a word-processor paragraph
          formating as an example.  They present several
          techiques for reducing the complexity of generating
          a counterexample, including discovery of derived
          variables, short circuit enumeration, and
          isomorph elimination.}}
}

@Article{Jackson96:lightweight-fm,
  author =   "Daniel Jackson and Jeannette Wing",
  title =    "Lightweight Formal Methods",
  journal =  "IEEE Computer",
  year =     1996,
  month =    apr,
  pages = "21-22",
  annote =   {\commentjeff{The authors suggest that for formal
                  methods to be feasible, the cost must be
                  dramatically reduced and the analysis must be
                  automated. They suggest for elements of a
                  lightweight formal methods approach. Partiality in
                  language means that methods must be design with tool
                  support in mind. Partiality in modeling means that
                  specifications should focus on important details at
                  the expense of others. Partiality in analysis means
                  that formal methods can be used even when a proof is
                  not possible to generate test cases. Partiality in
                  composition means that for a large system, the
                  specification may have to be analyzed in several
                  independent pieces.}}
}

@Misc{Jackson96:nitpick,
  author =   {Daniel Jackson and Craig A. Damon},
  title =    {Nitpick Reference Manual},
  howpublished = {Technical Report CMU-CS-96-109.  School of Computer Science,
    Carnegie Mellon University, Pittsburgh, PA},
  year =     {1996},
  month =    {January}}


@Article{Jones96,
  author =   "Cliff B. Jones",
  title =    "A More Rigorous Approach to Formal Methods",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{Jones advocates a formal methods light
                  approach. He uses formal methods to help clarify
                  requirements and design; he states that 'only in
                  extreme cases would I recommend formal proofs for
                  design steps.' He says that it is important for all
                  development team members to be able to read and
                  understand the formal specification.}}
}

@Article{Lutz96,
  author =   "Michael J. Lutz",
  title =    "Consumable Mathematics for Software Engineers",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{The author asserts that 'software
                  development is an engineering activity. The goals of
                  software development are essentially the same as
                  those of other engineering fields: the creation of
                  useful products and processes in an effective,
                  economical, and timely fashion.' He states that in
                  order for formal methods to be a valuable tool, we
                  must look at the way that mathematics is used in
                  other engineering disciplines: as a tool that is
                  used when it is effective. While mathematics in
                  other areas have been boiled down to only the
                  essence of what the engineer needs, formal methods
                  often require 'detailed knowledge of underlying
                  mathematical theory.'}}
}
@Article{Parnas96:mathematical-methods,
  author =   "David Lorge Parnas",
  title =    "Mathematical Methods: What We Need and Don't Need",
  journal =  "IEEE Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{In this article, parnas asserts several
                  positions regarding formal methods. First, that
                  mathematics should be part of every engineer's
                  toolset, including software engineers. Second, that
                  the mathematical methods currently employed by
                  software engineers are not much like the tools used
                  by other engineers. They are theoretically sound,
                  but difficult to use. Third, that researchers should
                  focuses on building on top of the current
                  foundations, instead of trying to re-invent the
                  wheel. Fourth, formal methods notation is cumbersome
                  and hard to read. Fifth, the distinction between
                  models, specifications, and descriptions is not
                  clear in the literature. Sixth, there is an
                  unreasonable focus on proof of correctness. Finally,
                  the fact that many spend time berating practitioners
                  for not applying their methods.}}
}
@Article{Pnueli,
  author =   {A. Pnueli},
  title =    {Applications of Temporal Logic to Specification and
                  Verification of Reactive Systems: A Survey of
                  Current Trends},
  journal =  {Lecture Notes in Computer Science Number 224},
  year = {1986},
  pages = {510-584},
  publisher = {Springer-Verlag},
  OPTnote =  {},
  annote =   {\commentjeff{I thought that this paper was very hard
                  to read and understand. The notation for temporal
                  logic is even worse than Z (at least that's
                  semi-familar). It would literally take years before
                  you understood all the symbols well enough to do
                  anything useful.}}
}
@Article{Wing90,
  author =   "Jeannett M. Wing",
  title =    "A Specifier's Introduction to Formal Methods",
  journal =  "Computer",
  year =     1990,
  month =    "September",
  annote =   {\commentjeff{Discusses the seven misconceptions
                  associated with formal methods: 1) that they
                  guarantee that software is perfect, 2) that they
                  work by proving programs correct, 3) that only
                  highly critical systems can beneft, 4) they involve
                  complex (incomprehensible) math, 5) they increase
                  the cost of development, 6) they are
                  incomprehensible to clients, and 7) that nobody uses
                  them in the real world. The author shows that all
                  these things are misconceptions. The point is the
                  formal methods, like most things, are tools that
                  have limits, and are useful in certain situations.}}
}
@Article{Zave96,
  author =   "Pamela Zave",
  title =    "Formal Methods are Research, Not Development",
  journal =  "Computer",
  year =     1996,
  month =    apr,
  annote =   {\commentjeff{The author, from at AT\&T Research,
                  cites numerous examples of situations in the
                  beginning of her article that illustrate situation
                  in which formal methods would clearly be useful;
                  however, she asserts that formal methods are not
                  used in these cases because the principles, objects,
                  and relationships offered by current formal methods
                  are so unlike the problem at hand. She is skeptical
                  of the people that say that solution is better
                  software practitioners. Instead, she recommends that
                  we follow the example given to us by other
                  engineering disciplines. It is not clear from the
                  article what kind of organization she is suggesting,
                  however, other than to say that software systems are
                  not all the same and that we should be
                  specialized. I am not sure (and she does not say)
                  how this specialization could be accomplished
                  without fundamentally changing not only formal
                  methods but the computer science field as well.}}
}


@Book{Kletz92,
   author = {T. Kletz},
   title = {Hazop and Hazan: Identifying and Assessing Process Industry Standards},
   publisher = {Institution of Chemical Engineers},
   year={1992}
}

@Book{CISHEC77,
   author = {CISHEC},
   title = {A Guide to Hazard and Operability Studies},
   publisher = {The Chemical Industry Safety and Health Council of the
                Chemical Industries Association Ltd.},
   year={1977}
}

@InProceedings{McDermid95:hazop,
  author =   {J.A. McDermid and D. J. Pumfrey},
  title =    {A Development of Hazard Analysis to Aid Software Design},
  booktitle =    {COMPASS '94: Proceedings of the Ninth Annual Conf. on
                  Computer Assurance},
  publisher = {IEEE/NIST},
  month =     {June},
  year =     {1994},
  pages =    {17-25},
}

          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          %   PVS Papers
          %
          %   Barb Czerny is the one that read most of these
          %   Most of the papers are available from
          %     SRI Int'l's web site
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Book{Smullyan68,
  author =   {R.M. Smullyan},
  title =    {First-Order Logic},
  publisher =    {Springer Verlag, New York},
  year =     {1968}
}
@TechReport{Shankar91,
  author =   {N. Shankar},
  title =    {Mechanical Verification of a Schematic Protocol for
                  Byzantine Fault-Tolerant Clock Synchronization},
  institution =  {SRI Int'l},
  year =     {1991},
  number =   {SRI-CSL-91-04},
  month =    {June},
  OPTannote =    {}
}

@TechReport{Owre:SCRtoPVS,
  author =   {S. Owre and J. Rushby and N. Shankar},
  title =    {Analyzing Tabular and State-Transition Requirements Specifications in {PVS}},
  institution =  {SRI Int'l},
  year =     {1995},
  number =   {SRI-CSL-95-12},
  month =    {June},
  OPTannote =    {}
}

@Article{Owre95,
  author =   {S. Owre and J. Rushby and N. Shankar and F. von Henke},
  title =    {Formal Verification for Fault-Tolerant Architectures:  Prolegomena to the Design of {PVS}},
  journal =      {IEEE Transactions on Software Engineering},
  year =     {1995},
  OPTkey =   {},
  volume =   {21},
  number =   {2},
  OPTpages =     {},
  month =    {February},
  OPTnote =      {},
  OPTannote =    {}
}
@Manual{pvssl93,
  title =    {The {PVS} Specification Language},
  author =   {S. Owre and N. Shankar and J.M. Rushby},
  organization = {Computer Science Laboratory;  {SRI} Int'l},
  address =      {Menlo Park, {CA} 94025},
  edition =      {Beta Relese},
  year =     {1993},
  month =    {April}}
@Manual{pvssvs93,
  title =    {User Guide for the {PVS} Specification and
          Verification System},
  author =   {S. Owre and N. Shankar and J.M. Rushby},
  organization = {Computer Science Laboratory;  {SRI} Int'l},
  address =      {Menlo Park, {CA} 94025},
  edition =      {Beta Release},
  year =     {1993},
  month =    {March}}
@Manual{pvspc93,
  title =    {The {PVS} Proof Checker: A Reference Manual},
  author =   {N. Shankar and S. Owre and J.M. Rushby},
  organization = {Computer Science Laboratory;  {SRI} Int'l},
  address =      {Menlo Park, {CA} 94025},
  edition =      {Beta Release},
  year =     {1993},
  month =    {March}}
@InProceedings{pvstut95,
  author =   {J. Crow and S. Owre and J. Rushby and others},
  title =    {A Tutorial Introduction to {PVS}},
  booktitle =    {WIFT 95: Workshop on Industrial-Strength Formal
          Specification Techniques},
  year =     {1995}}
@InProceedings{rushby92,
  author =   {J. Rushby},
  title =    {Formal Specification and Verification for Critical
          Systems: Tools, Achievements, and Prospects},
  booktitle =    {Electric Power Research Institute ({EPRI}) Workshop
          on Methodologies for Cost-Effective, Reliable
          Software Verification and Validation},
  year =     {1992},
  month =    {January},
  pages =    {9-1 to 9-14}}
@TechReport{rushby93a,
  author =   "J. Rushby",
  title =    "Critical System Properties: Survey and Taxonomy",
  institution =  "Computer Science Laboratory; {SRI} Int'l",
  year =     "1993; revised February 1994",
  number =   "CSL-93-01",
  address =      "Menlo Park, CA 94025 USA",
  month =    "May",
  note =     "via anon ftp: ftp.csl.sri.com"}
@TechReport{rushby93b,
  author =   "J. Rushby",
  title =    "Formal Methods and the Certification of Critical Systems",
  institution =  "Computer Science Laboratory; {SRI} Int'l",
  year =     "1993",
  number =   "CSL-93-7",
  address =      "Menlo Park, CA 94025 USA",
  month =    "December",
  note =     "via anon ftp: ftp.csl.sri.com"}
@InProceedings{rushby93c,
  author =   {J.M. Rushby and M. Srivas},
  title =    {Using {PVS} to prove some theorems of {D}avid {P}arnas},
  booktitle =    {Higher Order Logic Theorem Proving and its
          Applications (6th Int'l Workshop, {HUG} '93},
  year =     {1993},
  month =    {August},
  pages =    {163-173}}
@article{Rushby93,
  author = {J.M. Rushby and F. {von Henke}},
  title = {Formal verification of algorithms for critical systems},
  journal = {IEEE Transactions on Software Engineering},
  volume = 19,
  number = 1,
  pages = {13-23},
  month = {January},
  year = 1993
}
@Misc{rushby95,
  author =   {J.M. Rushby},
  title =    {Model Checking and Other Ways of Automating formal methods},
  howpublished = {position paper for panel on Model Checking for
          Concurrent Programs; Software Quality Week},
  year =     {1995},
  month =    {May/June}}
@Misc{rushbypersonal,
  author =   {J.M. Rushby},
  year =     {1995},
  note =     {Personal communication}}
@InProceedings{Miller95,
  author =   {S.P. Miller and M. Srivas},
  title =    {Formal Verification of the {AAMP5} Microprocessor},
  booktitle =    {Proceedings of the Int'l Workshop on
          Industrial Strength Formal Techniques},
  year =     {1995},
  pages =    {2-17},
  OPTannote =    {}
}

@INPROCEEDINGS{SanjaiTranslation-icfem03,
  AUTHOR    = "Sanjai Rayadurgam and Anjali Joshi and Mats P.E. Heimdahl",
  TITLE     = "Using PVS to prove Properties of Systems Modelled in a Synchronous Dataflow Language",
  BOOKTITLE = "Proceedings of the 5th Int'l Conf. on Formal Engineering Methods (ICFEM'03)",
  YEAR      = "2003",
  MONTH     = Nov,
  PAGES     = {167--186},
  PUBLISHER = {Springer},
}





          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Architecture and Structuring
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{Clements98:SoftArch,
  author =   {Len Bass and Paul Clements and Rick Kazman},
  title =    {Software Architecture in Practice},
  publisher =    {Addison-Wesley},
  year =     {1998},
  edition =  {},
  annote =   {}
}

@Book{Garlan96:Soft-Arch,
  author =   {Mary Shaw and David Garlan},
  title =    {Software Architecture -- Perspectives on an Emerging Descipline},
  publisher =    {Prentice Hall},
  year =     {1996},
  edition =  {},
  annote =   {}
}

@Book{Perry90,
  author =   {William E. Perry},
  title =    {A standard for testing application software},
  publisher =    {},
  year =     {1990},
  edition =  {},
  annote =   {}
}


@InProceedings{Giannakopoulou02:Soft-Arch,
  author =   {D. Giannakopoulou and C. Pasareanu and and H. Barringer},
  title =    {Assumption Generation for Software Component Verification},
  booktitle =   {Proc. ofthe 17th IEEE Int'l Conf. on Automated Software Engineering (ASE 2002)},
  year =  {2002},
  OPTaddress =     {Edinburgh, UK },
  annote =   {
  \commentdan{This paper discusses a technique for using model checking to
  generate environmental assumption constraints.  Typically, when verifying a
  software component, it is verified for all possible environments.  Their claim
  is that in reality a component is required to statisfy properties only in specific
  environments.

  When checking a component against a property, their model-checking algorithm returns
  one of the three following results:  1.) the component satisfies the property for any
  environment.  2.) the component violates the property for any environment.  3.) the
  algorithm generates an assumption that characterizes exactly those environments in
  which the component satisifies the property.  The idea here is that if the environment
  generated by step 3 is not a realistic environment, then the component is still "correct",
  because the property is only false under an unrealistic environment.}}}


@InProceedings{Iyer02,
 author =   {Anoop Iyer, Diana Marculescu},
  title =    {Power and Performance Evaluation of Globally Asynchronous Locally Synchronous Processors},
  booktitle =   {Intl. Symposium on Computer Architecture (ISCA)},
  year =     {2002},
  pages =    {},
  OPTannote =    {}
}

@InProceedings{Magee99:Soft-Arch,
  author =   {J. Magee and J. Kramer and D. Giannakopoulou},
  title =    {Behaviour Analysis of Software Architectures},
  booktitle =   {Proc. of the 1st Working IFIP Conf. on Software Architecture (WICSA1)},
  year =  {1999},
  OPTaddress =     {San Antonio, TX, USA},
  annote =   {
  \commentdan{This paper describes an approach for behavior specification
  and analysis on an existing software architecture.  They use Darwin
  structural descriptions as a framework for their behaiviour analysis.
  Component behavoir is described either graphically as a Labelled
  Transition System (LTS) or in their own FSP (Finite State Processes)
  process algebra notation.

  Their analysis tool is LTSA.  It allows users to explore execution
  scenarios. It also supports reachability analysis, which performs
  an exhaustive search of the state space to detect ERROR and deadlock states.
  Safety properties are stated usin property automata, and a violation is
  detected during reachability analysis if the model can produce a trace that is
  not accepted by the automata.  The LTSA tool also allows behavioural models
  to be checked against liveness specified in LTL.}}}



              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % General Software Engineering
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



@Book{Brooks95:mythical-man-month,
  author =   {Brooks Jr., Frederick P.},
  title =    {The Mythical Man Month},
  publisher =    {Addison-Wesley},
  year =     {1995},
  edition =  {Anniversary},
  annote =   {\commentjeff{This is Brooks' book with the "No
                  Silver Bullet article in the end.}}
}

@Article{Brooks87:bullet,
  author =   {F. P. Brooks},
  title =    {No Silver Bullet -- Essence and Accidents of
                  Software Engineering},
  journal =      {IEEE Computer},
  year =     {1987},
  volume =   {20},
  number =   {4},
  pages =    {10-19},
  month =    {April},
  annote =   {\commentjeff{This is Brooks' landmark paper in
                  Software Engineering in which he discusses
                  accidental and essential complexity -- complexity is
                  either inherant in the problem or is introduced, for
                  example, by the notation used to solve the problem.
                  We can eliminate accidental complexity by changing
                  the notion (for example, the move from assembly
                  language to high-level programming languages).  We
                  cannot eliminate essential complexity -- it is a
                  part of the problem.  Furthermore, software problems
                  include a lot of essential complexity.}}
}


@article{Glass96:theory-practice-relationship,
  author =   { Robert L. Glass },
  title =    { The Relationship Between Theory and Practice in
                  Software Engineering},
  journal =  {Communications of the ACM},
  volume =   {39},
  number =   {11},
  month =    {November},
  year =     {1996},
  pages =    {11-13},
  annote =   {\commentmike{Short article advocating (in some
                  cases) current software engineering practice over
                  current theory. Evidence where experience came
                  before theory is sighted in other fields such as
                  thermodynamics and aerodynamics. The areas he feels
                  where practice is ahead of theory are: Software
                  design, Software maintenance, User interface,
                  Programming in the large, Modeling and simulation,
                  and Metrics. }}
}
@article{Zave97:req-eng-survey,
  author =   { Pamela Zave },
  title =    {Classification of Research Efforts in Requirements
                  Engineering},
  journal =  {ACM Computing Surveys},
  volume =   {29},
  number =   {4},
  month =    {December},
  year =     {1997},
  pages =    {315-321},
  annote =   {\commentjeff{Interesting, if a bit shallow and/or
                  short, survey of various research being done in the
                  area of requirements engineering. Long
                  bibliography.}}
}
@article{Zave97:req-eng-dark-corners,
  author =   { Pamela Zave },
  title =    {Four Dark Corners of Requirements Engineering},
  journal =  {ACM Transactions on Software Engineering and
                  Methodology},
  volume =   {6},
  number =   {1},
  month =    {January},
  year =     {1997},
  pages =    {1-29},
  annote =   {\commentmike{This article discusses some of the
                  relationships between a physical system and a
                  proposed req-eng spec. They make a case for the
                  requirements document consisting only of a
                  description of the current environment, and a
                  description of the environment after the software
                  system has been implemeted, thereby avoiding the
                  implementation bias existing in most
                  specifications. By their estimation, RSML would be a
                  wholly unsuitable requirements specification
                  language. They discuss why the entities of a system
                  should be split depending on whether they are
                  machine and environment controlled. Perhaps this
                  article would be more useful to me if I had more
                  experience building complex Zed-like specifications,
                  but I found it dry and somewhat esoteric.}}
}
@Article{Parnas96:software-jewels,
  author =   {David Lorge Parnas},
  title =    {Why are Software Jewels so Rare?},
  journal =  {IEEE Computer},
  month =    {February},
  year =     {1996},
  pages =    {57-60},
  annote =   { \commentjeff{Parnas talks about the characterstics
                  of a "jewel" software system and the people who
                  create it. He talks about several topics, including
                  lean software, reinventing the wheel, goals
                  vs. limitations, and design vs. language.}}
}
@Article{Wirth95:plea-for-lean-sw,
  author =   {Niklaus Wirth},
  title =    {A Plea for Lean Software},
  journal =  {IEEE Computer},
  month =    {February},
  year =     {1995},
  pages =    {64-68},
  annote =   {\commentjeff{Talks about need to eliminate
                  unnecessary and little used features from
                  software. "Software's girth has surpassed its
                  functionality, largely because hardware advances
                  makes this possible. The way to streamline software
                  lies in disciplined methodologies and a return to
                  the essentials.}}
}


              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Hybrid Systems / AI / Robotics
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{Asimov42,
  author =   {Asimov, I},
  title =    {Runaround},
  journal =  {Astounding Science Fiction},
  year =     {1942},
  OPTkey =   {},
  volume =   {},
  number =   {},
  pages =    {},
  OPTnote =  {},
  annote =   {}
}

@Article{Brooks86:subsumption,
  author =   {Rodney A. Brooks},
  title =    {A Robust Layered Control System for a Mobile Robot},
  journal =     {IEEE Journal of Robotics and Automation},
  year =     {1986},
  volume =   {RA-2},
  number =   {1},
  pages =    {14-23},
  month =    {March},
  annote =   {\commentjeff{This is Rodney Brooks' formative paper
                  on the subsumption architecture for mobile robotics.}}
}

@Artice{Cofer96,
  author =   {Darren Cofer},
  title =    {Reliable Implementation of Process Control Systems
          for Advanced Avionics},
  journal =      {Honeywell Technology Center},
  year =     {1996},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  OPTnote =      {},
  annote =   {\commentjeff{Another of the papers in the hybrid
          systems package from honeywell.}}
}
@Article{Cofer97,
  author =   {Darren Cofer and Lance Sherry and Jerry Kelley and
          Shankar Sastry and Claire Tomlin and George Pappas
          and John Lygeros and Datta Godbole and Goerge Meyer},
  title =    {Affordable Implementation of Reliable Hybrid Systems},
  journal =      {Honeywell Technology Center},
  year =     {1997},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {January},
  OPTnote =      {},
  annote =   {\commentjeff{This is the introductory paper from
          Honeywell on their hybrid systems research.  It
          includes 7 chapters.  Chapter 1 is the summaryand
          introduction to the paper.  Chapter 2 discusses
          hybrid systems in air transport applications.
          Chapter 3 talks about Honeywell's operational
          proceedure methodology.  Chapter 4 defines the
          mathematical semantics of thier model. Chapter 5
          discusses static analysis.  Chapter 6 talks about
          the implementation of the systems.  Chapter 7 is the
          conclusion.  Overall, this paper is good; however,
          it is somewhat difficult to understand without the
          background provided by the journal papers included
          in the same package with this paper.}}
}
@Book{Craig89:Intro-Text,
  author =   {John J. Craig},
  title =    {Introduction to Robotics},
  publisher =    {Addison-Wesley},
  year =     {1989},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This is a text for an introductory
          robotics course.  Although it is somewhat old, it has several
          useful point in the chapters about robot
          programmin.  It has a chapter about online robot
          programming and one about offline robot
          programming.}}
          }
@Article{Crites96:ai-elevator,
  author =   {Robert H. Crites and Andrew G. Barto},
  title =    {Improving Elevator Performance Using Reinforcement
          Learning},
  journal =      {Advances in Neural Information Processing Systems 8},
  year =     {1996},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This paper discusses the control of an
          elevator system using an artificial neural network.
          Crites et. al. describe the the reinforcement
          procedure used and the data that was fed into the
          system for training.  Finally, they describe how
          their results improve over traditional elevator
          control approaches.}}
}
@Article{Decotignie96,
  author =   {J. D. Decotignie and D. M. Auslander},
  title =    {Executives for Real Time Control},
  journal =      {Japan/USA Symposium on Flexible Automation},
  year =     {1996},
  OPTkey =   {},
  volume =   {1},
  OPTnumber =    {},
  month =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This talks about several issues
          relating to scheduling tasks within a real time controller.}}
}
@Article{Delson96,
  author =   {Nathan Delson and Harry West},
  title =    {Segmentation of Task into Subtasks for Robot
          Programming by Human Demonstration},
  journal =      {Japan/USA Symposium on Flexible Automation},
  year =     {1996},
  OPTkey =   {},
  volume =   {1},
  OPTnumber =    {},
  month =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This talks primarily about the human
          computer interface and the control of robots by lead
          through or demonstration.}}
}
@Article{Freund94,
  author =   {Freund, E. and Mayer, R. and Dierks, F. and
          Judaschke, U. and Kernebeck, U. and Lammen, B.},
  title =    {Safety Aspects for Autonomous Robot Systems},
  journal =      {Proceedings of the Int'l Workshop on
          Infomation Processing in Autonomous Mobile Robots},
  year =     {1994},
  OPTkey =   {},
  volume =   {},
  number =   {},
  pages =    {295-310},
  Optnote =      {},
  annote =   {\commentjeff{This paper discussed the Multi-Agent
          Control System (MACS).  This is a heirarchical
          manufacturing system in which several robot work
          cells and autonomous mobile robots work together to
          perform a task.  The author's hope is that, using
          MACS, the system can achieve a greater degree of
          flexibility and safety.  In many respects the design
          of MACS is similar to the work done by the Honeywell
          Technology Center with the new air traffic control
          system.  MACS could be viewed as a generalization of
          a hierarchical hybrid systems architecture that
          could be build with RSML.}}
}
@Article{Fukuda92,
  author =   {Toshio Fukuda},
  title =    {Theory and Applications of Neural Networks for
          Industrial Control Systems},
  journal =      {IEEE Transactions on Industrial Electronics},
  year =     {1992},
  OPTkey =   {},
  OPTvolume =    {39},
  OPTnumber =    {6},
  month =    {December},
  pages =    {472-489},
  OPTnote =      {},
  annote =   {\commentjeff{This is a survey paper that describes
          various applications of neural networks, fuzzy sets,
          and other artifical intelligence technologies to
          industrial control systems.}}
}
@Article{Gast89,
  author =   {David Gast},
  title =    {Combining Robotic Assembly with Just-In-Time Manufacture},
  journal =      {Assembly Automation},
  year =     {1989},
  OPTkey =   {},
  volume =   {9},
  number =   {2},
  pages =        {88-90},
  month =    {May},
  OPTnote =      {},
  annote =   {\commentjeff{Talks about how to combine
          just-in-time manufacture with use of industrial
          robots.  Fairly old paper, but provides an overview
          of why you want to interface with a CAD system.}}
}
@Article{Hoskins92,
  author =   {J. C. Hoskins and D. M. Himmelblau},
  title =    {Process Control via Artifical Neural Networks and
          Reinforcment Learning},
  journal =      {Computers and Chemical Engineering},
  year =     {1992},
  OPTkey =   {},
  OPTvolume =    {16},
  OPTnumber =    {4},
  pages =    {241-251},
  OPTnote =      {},
  annote =   {\commentjeff{This paper discusses applications of
          neural networks to process control systems using
          reinforcement learning.  The paper centers on use of
          neural networks for problems where there exists no
          objective function except in the form of the
          evaluation of sucess or failure of the control
          actions.  The goal is to develop a function that
          maps the current state of a process into suitable
          control actions through experience.  The authors
          state the important point that control in this
          manner is not applicable to general control systems,
          but might be useful in certain specialized areas.
          The authors thus far have focused on chemical
          engineering areas.  It is an interesting and unique
          article about controlling processes in this manner.}}
}
@Article{Lygeros97,
  author =   {John Lygeros and Claire Tomlin and Shankar Sastry},
  title =    {Multiobjective Hybrid Controller Synthesis},
  journal =      {Department of Electrical Engineering and Computer
          Science, University of California, Berkeley},
  year =     {1997},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {January},
  pages =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This paper describes the formal
          notation of the hybrid systems model used by the
          Honeywell group.  It has a small example of a steam
          boiler (one of the few non-avionics examples in this
          collection of papers).}}
}
@Article{McDermott96:flex-manufacture,
  author =   {Kevin J. McDermott},
  title =    {A PC-Based Programmable Controller Platform for a
          Flexible Manufacturing System},
  journal =      {Japan/USA Symposium on Flexible Automation},
  year =     {1996},
  OPTkey =   {},
  volume =   {1},
  OPTnumber =    {},
  month =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This talks about using DACs and a PC
          to control manufacturing processes.  It does not
          talk about safety; however, many of the arguments
          that they apply to using PC's and interfaces to
          processes could also be used to support the use of
          RSML with the added bonus that RSML is analyzable
          for safety and completeness issues whereas many
          other systems (i.e. those from National Instruments
          and those described here) are not.}}
}
@Article{McDermott96b:cad-int,
  author =   {Kevin McDermott and William Tereshkovich},
  title =    {Hardware/Software Design Interfacing Between CAD
          Systems and Industrial Robots},
  journal =      {Japan/USA Symposium on Flexible Automation},
  year =     {1996},
  OPTkey =   {},
  volume =   {1},
  OPTnumber =    {},
  month =    {},
  OPTnote =      {},
  annote =   {\commentjeff{Talks about an interface protocol for
          exchanging data between industral robots and CAD systems.}}
}
@Article{Morely96,
  author =   {E. C. Morely and J. R. Wilson},
  title =    {The Matrix of Confusion --  A Classification of the
          Robot Movement},
  journal =      {Proceedings of the Institution of Mechanical
          Engineers, Part B (Journal of Engineering Manufacture)},
  year =     {1996},
  OPTkey =   {},
  volume =   {210},
  number =   {B3},
  month =    {},
  OPTnote =      {},
  annote =   {\commentjeff{Talks mainly about teach-pendant
          design as it relates to human-robot interesting.
          Interesting, but not applicable to RSML control issues.}}
}
@Article{Percival85,
  author =   {N. Percival},
  title =    {A Review of Safety Standards},
  journal =      {Robot Technology and Applications, Proceedings of
          the First Robotics Europe Conf.},
  year =     {1985},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  pages =        {55-60},
  OPTnote =      {},
  annote =   {\commentjeff{This old paper mainly focuses on
          robotic safety in terms of cages, control layout,
          etc.  It is useful as a base to understand how this
          type of approach can and cannot be applied.}}
}
@Article{Prinz96,
  author =   {Martin Prinz and Hsu-Chang Liu and Bartholomew
          O. NNaji and Tim Lueth},
  title =    {From CAD-Based Kinematic Modeling to Automated Robot
          Programming},
  journal =      {Robotics and Computer-Integrated Manufacturing},
  year =     {1996},
  OPTkey =   {},
  volume =   {12},
  number =   {1},
  pages =    {99-109},
  OPTnote =      {},
  annote =   {\commentjeff{Provides a description of current CAD
          interfaces and thier shortcommings.  Describes
          spatial relationships, thier importance, and frame
          assignments.}}
}
@Book{Russel95,
  author =   {Stuart Russel and Peter Norvig},
  title =    {Artificial Intelligence: A Modern Approach},
  publisher =    {Prentice Hall},
  year =     {1995},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =      {},
  annote =  {\commentjeff{This is the textbook for the
          introductory text in AI.}}
}
@Article{Sastry97,
  author =   {S. Sastry and G. Meyer and C. Tomlin and J. Lygeros
          and D. Godbole and G. Pappas},
  title =    {Hybrid Control in Air Traffic Management Systems},
  journal =      {Department of Electrical Engineering and Computer
          Science, University of California, Berkeley},
  year =     {1997},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {January},
  pages =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This paper more understandibly
          descibes the hybrid systems architecture in use in
          the longer paper by Honeywell's group.  It includes
          a very good description of the architure that I'm
          interested in on page 63 at the top.}}
}
@Book{scorbot-ref,
  author =   {Esched Robotec},
  title =    {SCORBASE Level 5 Reference Guide},
  publisher =    {Esched Robotec},
  year =     {1992},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This is the manual that describes the
          SCOREBASE language which is used with the Scorbot
          robots in the undergraduate robotics lab.}}
}
@Book{scorbot-user-manual,
  author =   {Esched Robotec},
  title =    {Scorbot-ER VII User's Manual},
  publisher =    {Esched Robotec},
  year =     {1991},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This is the user's manual for the
          Scorbot robots in the undergraduate robotics lab.}}
}
@Book{scorbot-acl,
  author =   {Esched Robotec},
  title =    {ACL Reference Guide},
  publisher =    {Esched Robotec},
  year =     {1992},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This is the ACL reference (command
          language) for the Scorbot robot system in the
          undergraduate robotics lab.}}
}
@Article{Simmons92:Ambler,
  author =   {R. Simmons},
  title =    {Concurrent Planing and Execution for Autonomous robots},
  journal =      {IEEE Control Systems },
  year =     {1992},
  OPTkey =   {},
  volume =   {12},
  number =   {1},
  pages = {46-50},
  month =    {February},
  OPTnote =      {},
  annote =   {}
}
@Article{Stratton95,
  author =   {D. Alexander Stratton and Robert Stengel},
  title =    {Real-Time Decision Aiding: Aircraft Guidance for
          Wind Shear Avoidance},
  journal =      {IEEE Transactions on Aerospace and Electronic Systems},
  year =     {195},
  OPTkey =   {},
  OPTvolume =    {31},
  OPTnumber =    {1},
  month =    {January},
  pages =    {117-123},
  OPTnote =      {},
  annote =   {\commentjeff{This paper in includes a dicussion of
          the wind shear avoidance problem for aircraft and
          how the authors used neural networks in a control
          system to "help flight crews avoid or survive
          enounter[s] with low altitude wind shear."  It
          provides an interesting application of this
          technology to the avionics domain.}}
}
@Article{Tomlin97,
  author =   {Claire Tomlin and George J. Pappas and Shankar Sastry},
  title =    {Conflict Resolution for Air Traffic Management: a
          Study in Multi-Agent Hybrid Systems},
  journal =      {Department of Electrical Engineering and Computer
          Science, University of California, Berkeley},
  year =     {1997},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {January},
  pages =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This paper describes how conflicts
          between independent agents in the air traffic
          control system are resolved.  This architecture
          could be generallized to any class of systems with
          the appropriate architecture.}}
}
@Article{Troxell90,
  author =   {W.O. Troxel},
  title =    {A Robotic Assembly Description Language Derived from
          Task-Acheiving Behaviors},
  journal =      {Proceedings of Manufacturing Int'l '90},
  year =     {1990},
  OPTkey =   {},
  volume =   {4},
  number =   {},
  month =    {},
  OPTnote =      {},
  annote =   {\commentjeff{This paper discusses an alternative
          approach to high level robot programming and task
          level description formalisms.  The author discusses
          the uncertainty problem, and limitations of
          classical approaches as well as on line verses off
          line programming techniques.  Finally, a formal
          "task assembly language" is introduced.  In the
          conclusion the author talks about program
          verification and proof of correctness for robotic
          systems.}}
}
@Article{Ward95,
  author =   {Ward, G.R. and Went, S.R.G.},
  title =    {Robot Safety},
  journal =      {Industrial Robot},
  year =     {1995},
  OPTkey =   {},
  volume =   {22},
  number =   {1},
  pages =    {10-13},
  OPTnote =      {},
  annote =   {\commentjeff{Interesting article about standards
          for robot safety.  Emphasizes that most accidents
          occur when the robot is not in normal operating mode
          (i.e. they occur when the robot is in maintenance
          mode).  References legislation that may pertain to
          robot safety.  Good overview.}}
}
@Article{Weld94,
  author =   {Weld, Daniel and Etzioni, Oren},
  title =    {The First Law of Robotics (A Call to Arms)},
  journal =      {Proceedings of the Twelfth National Conf. on
          Artificial Intelligence},
  year =     {1994},
  OPTkey =   {},
  volume =   {2},
  number =   {},
  pages =    {1042-1047},
  OPTnote =      {},
  annote =   {\commentjeff{Looks at safety from the perspective
          of improving the planning element of the system.
          This is a more general view of the robotic system
          than where we are today; indeed, if the advances
          that are theorized by Weld and Etzioni come about we
          will not need to use RSML like approaches.  However,
          in the here and now I think that we need some
          approach to verify the safety of robotic systems.
          It is not enough to simply hope for the future.}}
}
@Article{Wittenberg95,
  author =   {G. Wittenberg},
  title =    {Developments in Offline Programming: An Overview},
  journal =      {Industrial Robot},
  year =     {1995},
  OPTkey =   {},
  volume =   {22},
  number =   {3},
  pages =    {21-23},
  OPTnote =      {},
  annote =   {\commentjeff{Interesting overview of CAD
          interfaces to robotic systems}}
}



              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % High-Integrity Compilers
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Book{Stepney93:compilation,
  author =   {Susan Stepney},
  title =    {High Integrity Compilation},
  publisher =    {Prentice Hall},
  year =     {1993},
  annote =   {\commentmike{This book provides a complete
     description of an approach for creating a high-integrity code
     generator for a very simple imperative language: \begin{itemize}
     \item Only integer and Boolean types
     \item assignments, conditionals and loops
     \item no composite datatypes
     \item no functions/procedures
     \item no side effects
     \item no pointers
     \end{itemize}
     \noindent The source language is not quite powerful enough to be
     useful in a real setting, but is larger than many of the
     'toy' languages used in research papers.  Although I'm not
     well-versed on assembly languages, it appears that the
     assembly language is a toy language.  It assumes that all
     locations are addressible and that boolean and integer values have
     the same size.  There is only one register, the accumulator, and
     no concept of a program stack.  There are only a handful of
     assembly language instructions.

     The book describes the complete compilation process, assuming
     only that a syntactically correct abstract syntax tree has been
     constructed.  It describes type checking,
     declaration-before-use checking, and code-generation passes
     of the compiler, using a variant of denotational semantics.
     The semantics are not strictly denotational because the
     description of the 'while' loop is not compositional (it
     recursively calls itself, rather than describing the while
     fixpoint).  The code-generation pass uses templates to
     translate each Tosca construct into a sequence of Aida
     instructions.

     The book describes an interesting approach, but there are two
     serious issues.  First, the entire code generation process
     occurs in one pass.  This means that the one transformation
     is pretty course-grained, and that there are significant
     proof obligations for the pass.  Also, the one-pass approach
     precludes most optimizations.  Second, the approach can only
     be used in languages where the semantics of the source
     language can be immediately compositionally expressed in the
     target language.  For example, suppose that I'm translating
     RSML-e, and I'm using Pascal as a target language.  Pascal
     does not allow initializers within variable declarations;
     therefore, I must place the initializer for the variable in
     the mainline code, which is in a different location than the
     variable declaration.  This approach does not allow this kind
     of dislocation.}}
}

@Inproceedings{Stepney:compiler-integrity,
  author =   {Susan Stepney},
  title =    {Incremental Development of a High Integrity
                  Compiler: Experience from an Industrial Development},
  booktitle =    {Proceedings of the IEEE High Assurance Systems
                  Engineering Workshop },
  year =     {1998},
  volume =   {},
  pages =    {},
  annote =   {\commentmike{This paper details the implementation
                  of a high-assurance compiler for a Pascal-like
                  language using Z. They make the case for their proof
                  by providing a denotational semantics for both the
                  source language (Pasp) and the target assembly
                  language (AspII). An operational semantics is used
                  to describe the translation between the source and
                  assembly language. Then, they try to create an
                  equality proof between the denotational semantics of
                  the source level construct and the denotational
                  semantics of the assembly code generated by the
                  operational semantics of the source code. They
                  describe their approach by showing how to specify
                  assignment in Pasp using both operational and
                  denotational semantics, but they don't show how the
                  proof between the source and assembly versions is
                  performed, which would have been very useful to
                  me.

                  Their approach seems very successful. The
                  language was tested by NPL, which found only one bug
                  with the entire implementation. They describe
                  different levels of proof, providing successively
                  higher level of assurance. We could use an approach
                  similar to the one they espouse, with a few caveats:
                  first, we don't have a denotational semantics for
                  the target language: C++ or Ada. Second, we're
                  currently not familiar enough with Z to create these
                  kinds of specs. We might be able to use guarded
                  commands instead. }}
}

@Inproceedings{Boyle97:refinement-transformations,
  author =   {Victor L. Winter and James M. Boyle},
  title =    {Proving Refinement Transformations for Deriving
              High-Assurance Software},
  booktitle =    { High Assurance Systems Engineering Workshop },
  year =     {1997},
  volume =   {},
  pages =    {1-11},
  annote =   {\commentmike{read}}
}

@Inproceedings{Boyle:compiler-trust,
  author =   {James M. Boyle and R. Daniel Resler and Victor
                  L. Winter},
  title =    {Do You Trust Your Compiler? Applying Formal Methods
                  to Constructing High-Assurance Compilers},
  booktitle =    { High Assurance Systems Engineering Workshop },
  year =     {1997},
  volume =   {},
  pages =    {1-11},
  annote =   {}
}

@Inproceedings{Boyle97:compiler-trust,
  author =   {James M. Boyle and R. Daniel Resler and Victor
                  L. Winter},
  title =    {Do You Trust Your Compiler? Applying Formal Methods
                  to Constructing High-Assurance Compilers},
  booktitle =    { High Assurance Systems Engineering Workshop },
  year =     {1997},
  volume =   {},
  pages =    {1-11},
  annote =   {\commentmike{This paper focuses on a
                  transformational approach to create a provably
                  correct compiler. It discusses the basics of program
                  transformation and shows an example from a 3GL to a
                  RISC assembly language. They use denotational
                  semantics as the proof vehicle, but rather than
                  performing structural inductive proofs, they use
                  instead syntax derivation trees (SDTs) with
                  non-terminal nodes left without "filling in" the
                  terminal subtree underneath. Transformations on
                  these trees can be proven correct if they are
                  correct for all possible terminal subtrees under the
                  SDT. The transformations themselves are
                  mathematically correct, but there was no discussion
                  on whether the {\em program} that applied the rules
                  was correct. In this case, the program is TAMPR, an
                  automatic rewrite-rule based program transformation
                  system. It may be the case that TAMPR has been
                  validated, but it seems more likely that it has not,
                  which throws into question the implementation of the
                  whole code generation system.  The advantage of
                  Stepney's approach is that the compiler is written
                  in a smaller PROLOG interpreter, so that
                  there are no weak links in the process.

                  This approach has several positive points: the
                  work of compiling a program is broken into
                  several small chunks, each of which is
                  relatively easy to understand.  Also, since the
                  compilation process is broken into several
                  layers, it is possible to add optimizations to
                  the compiler as additional layers in the process
                  without having to recompute proofs of the other
                  layers.

                  It may be difficult to use the transformational
                  approach to our system.  To use this approach,
                  it is necessary to define a wide-spectrum
                  language that includes the semantics of both the
                  source and target languages.  This would require
                  quite a lot of work; the datatypes with and
                  without UNDEFINED would have to be explained.
                  Also, the transformational approach is usually
                  performed on systems where the target code is a
                  direct elaboration of the source code.  In our
                  system, the meaning of the code must be derived
                  using the dataflow of each of the state
                  variables. Also, I'm not sure how the transformational
                  approach would perform something like converting
                  a predicate to a decision tree.}}
}


@Article{Bergstra97:toolkit,
  author =   {J.A. Bergstra and T.B. Dinesh and J. Field and J. Heering},
  title =    {Towards a Complete Transformational Toolkit for Compilers},
  journal =      {ACM Transactions on Programming Languages and Systems},
  year =     {1997},
  OPTkey =   {},
  volume =   {19},
  number =   {5},
  pages =    {639-684},
  OPTnote =      {},
  annote =   {\commentmike{This paper describes a logic used with PIM,
              an intermediate representation for imperative
              languages.  It unfortunately assumes a great deal of
              background information that I am not familiar with.

              This article is interested in showing that the logic
              is complete; this is of little practical use to me
              with my current work. }}
}



              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Interfaces/Execution/Prototyping Papers
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{Allen97:ArchConnection,
  author =   {Robert Allen and David Garlan},
  title =    {A Formal Basis for Architectural Connection},
  journal =  {ACM Transactions on Software Engineering and
                  Methodology},
  volume =   {6},
  number =   {3},
  month =    {July},
  year =     {1997},
  pages =    {213-249},
  annote =   {\commentjeff{Interesting article about the
                  formalization of system architecture descriptions
                  based on CSP. The authors present a methodology for
                  constructing and analyzing architectural
                  descriptions that where connections are broken into
                  client, server, and glue CSP specifications called
                  WRIGHT. WRIGHT does not add to the formal power of
                  CSP, but is more like a methodology. It provides
                  some interesting ideas about architectural
                  description and some analsys of the positives and
                  negatives of using CSP.}}
}
@Article{Hoare:CSP,
  author =   { C.A.R. Hoare },
  title =    {Communicating Sequential Processes},
  journal =  {Communications of the ACM},
  volume =   {21},
  number =   {8},
  month =    {August},
  year =     {1978},
  pages =    {666-677},
  annote =   {\commentjeff{This is the CSP paper. The RSML
                  intercomponent interfaces are built on this
                  formalism. Hoare "suggests that input and output are
                  basic primatives of programming and that parallel
                  composition of communicating sequential processes is
                  a fundemental program structuring method". Although
                  the techniques described in the paper were aimed
                  originally at programming, the ideas presented are
                  general.}}
}
@Inproceedings{Liu:interface-checking,
  author =   {Lap Ming Liu and N. S. Prywes},
  title =    {Using Executable Specification Languages for
                  Interface Checking of Large, Distributed Systems},
  booktitle =    {Proceedings of the twenty-third Annual Hawaii
                  Int'l Conf. on System Sciences},
  year =     {1990},
  volume =   {2},
  pages =    {174-182},
  annote =   {\commentjeff{This paper discusses the consistency
                  checking of interfaces between the components of
                  large, distributed systems. They describe the
                  interface specifications of the MODEL approach. This
                  is based on various message types that are passed
                  between components. Interesting information about
                  interfaces in here.}}
}

@InProceedings{Lutz93:safety-errors,
  author =   {Robyn R. Lutz},
  title =    {Targeting Safety Related Errors During Software
                  Requirements Analysis},
  booktitle =   {SIGSOFT '93. First ACM SIGSOFT Symposium on the
                  Foundations of Software Engineering},
  pages =    {99-106},
  year =  {1993},
  volume =   {18(5)},
  series =   {SIGSOFT Software Engineering Notes},
  month =    {December},
  OPTaddress =  {Los Angeles, CA},
  annote =   {\commentjeff{All the information in this article is
                  also included in \cite{Lutz96:safety-errors} which
                  is typset somewhat nicer.}}
}
@Article{Lutz96:safety-errors,
  author =   {Robyn R. Lutz},
  title =    {Targeting Safety Related Errors During Software
                  Requirements Analysis},
  journal =  {Journal of Systems Software},
  volume =   {34},
  number =   {3},
  month =    {September},
  year =     {1996},
  pages =    {223-230},
  annote =   {\commentjeff{This paper summarizes the results of a
                  study about the causes of safety-related software
                  errors. "Safety related software errors found during
                  the integration of two spacecraft arose most
                  commonly from 1) misunderstandings of the software's
                  interfaces with the rest of the systems and 2)
                  discrepancies between the documented requirements
                  specifications and the requirements needed for
                  orrect functioning of the system." The paper
                  provides definitions of software errors, discusses
                  concurrency issues, makes references to Jaffe's work
                  on requirements analysis, and gives a nice tabular
                  summary of the results of the survey. Also, it gives
                  ten criteria for the interfaces in software and six
                  for the robustness of software as a "safety
                  checklist". This paper contains roughly the same
                  information as \cite{Lutz93:safety-errors}; however,
                  this paper is typeset in a somewhat easier to read
                  font, and might include some small additional
                  contribution.}}
}
@PhdThesis{Melhart:phd-thesis,
  author =   {Bonnie E. Melhart},
  title =    {Modeling the External Software Interface for
                  Requirements Specification \footnote{textbf{I don't
                  know if this is correct. Check this out}}},
  school =   {University of California, Irvine},
  year =     {1989},
  annote =   {\commentjeff{Melhart's discussed the external, black
                  box view of the communication between various system
                  components in requirements specification. She
                  includes a dicussion of the various time times in
                  intercomponent communication as well as a discussion
                  of fault tree analysis. The thesis begins with a
                  discussion of modeling in general and moves the
                  intercomponent topic. In the incomponent section,
                  Melhart discusses various time types (continous,
                  periodic, stimulus response) and the proper
                  interconnection of components using these time
                  types. In addition, she discusses the importance of
                  channel compatibility and min/max assumptions. The
                  thesis concludes with a section on analysis with her
                  proposed model (with fault tree analysis).}}
}
@techreport{Melhart:tech-report,
  author =   {Bonnie E. Melhart},
  title =    {Modeling the External Software Interface for
                  Requirements Specification},
  institution =  {University of California, Irvine},
  year =     {1989},
  number =   {89-41},
  annote =   {\commentjeff{This is a shorter version of Melhart's
                  Ph.D. thesis \cite{Melhart:phd-thesis}}}
}
@Article{Shaw92:CRSM,
  author =   {Alan C. Shaw},
  title =    {Communicating Real-Time State Machines},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {18},
  number =   {9},
  year =     {1992},
  month =    {September},
  pages =    {805-815},
  annote =   {\commentjeff{This paper discusses Shaw's
                  Communicating Real-Time State Machines (CSM's). Shaw
                  brings up the point that in a real time system it is
                  important to specify the given behavior of the
                  enironment as well as the required behavior of the
                  system. Shaw chooses to use a CSP like sytax instead
                  of the Statecharts event[condition]/action sytax
                  because of "differences in IO"; however, in a later
                  paper \cite{Heimdahl97:icfem-interfaces} we discuss
                  how the RSML syntax is equivalent to the CSP
                  notation. The paper includes several example
                  specifications: a mouse click recognizer, and a
                  train crossing gate. The paper gives analysis
                  criteria and discusses problems with the notation.}}
}
@InProceedings{Sidoran95:REE,
  author =   {James L. Sidoran and Carla L. Burns and Scott
                  Maethner and David Spencer and Hollis Bond},
  title =    {A Case Study on Rapid Systems Prototyping and its
                  Impact on System Evolution},
  booktitle =    {Sixth IEEE Int'l Workshop on Rapid System
                  Prototyping},
  year =     {1995},
  annote =   {\commentjeff{Proves and overview of the Requirements
                  Engineering Environment and its application to a
                  real world space debris hazard analsys system. REE
                  includes a Rapid Interface Protyping System (RIP),
                  and a Proto which is a simulator. The article does
                  not discuss the formality of the simulator, nor does
                  it mention any analysis capabilities of the tool. It
                  seems that the specification itself is rather {\em
                  informal} and as suh is not quite the same as what
                  we're doing. The paper does present some good ideas;
                  however, and is worth a quick read.}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Algorithm Theory
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Book{Cormen01:algo,
author={Cormen, T. and Leiserson, C. and Rivest, R. and Stein, C.},
title={Introduction to Algorithms},
publisher={MIT Press and McGraw-Hill},
year={2001}
}

      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %
    % Microsoft COM
    %
      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Book{Rogerson97:COM,
  author =   {Dale Rogerson},
  title =    {Inside COM},
  publisher =    {Microsoft Press},
  year =     {1997},
  annote =   {\commentmike{This book explains how to build COM
                  applications from the ground up using C++.}}
}

      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %
    % Patterns
    %
      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Book{Gamma95:Patterns,
  author =   {Erich Gamma and Richard Helm and Ralph Johnson and
                  John Vlissides},
  title =    {Design Patterns},
  publisher =    {Addison Wesley},
  year =     {1995},
  annote =   {\commentmike{This book is a gem. It discusses
                  various standard OO design approaches to various
                  problems.}}
}


      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %
    % Case studies: Steam Boiler
    %
      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Abrial96:Steam,
  author =   {J.R. Abrial},
  title =    {The Steam Boiler Control Specification Problem},
  booktitle =    { Schloss Dagstuhl },
  month =    {June},
  year =     {1995},
  annote =   {\commentmike{Description of the steam boiler
                  problem, in some amount of detail. It describes the
                  various sensors and actuators, modes, and failure
                  conditions of the system. One interesting note is
                  that they don't define any failure conditions based
                  on the steam pressure within the boiler. Can anyone
                  say ``major oversite''?}}
}

@TechReport{Miller03:FGS,
    Author = {S. Miller and A. Tribble and T. Carlson and E. J. Danielson},
    Title = {Flight Guidance System Requirements Specification},
    Institution = {NASA},
    Number = {CR-2003-212426},
    Month = {June},
    Year = {2003}
}

              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % Parallel Computation Survey
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{Skillicorn98:parallelism,
  author =   {David B. Skillicorn and Domenica Talia},
  title =    {Models and Languages for Parallel Computation},
  journal =  {ACM Computing Surveys},
  month =    {June},
  year =     {1998},
  volume =   {30},
  number =   {2},
  annote =   {\commentmike{}}
}


              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % BDD Survey
          %
              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{Bryant92:bdds,
  author =   {Randal E. Bryant},
  title =    {Symbolic Boolean Manipulation with Ordered
                  Binary-Decision Diagrams},
  journal =  {ACM Computing Surveys},
  month =    {September},
  year =     {1992},
  volume =   {24},
  number =   {3},
  pages = {293-318},
  annote =   {}
}
@article{Bryant86:bdd,
  Author =   "R. E. Bryant",
  Title =    "Graph-Based Algorithms for Boolean Function
                  Manipulation",
  Journal =  "IEEE Transactions on Computers",
  Year =     "1986",
  Volume =   "C-35",
  Number =   "8",
  Month =    "August",
  pages =    "677--691",
  Mark =     ""
}





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  Structuring and Methodological Work
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%
% Early Work on modularization and structuring
%

@InProceedings{Britton81:interfaces,
  author =   {K.H. Britton and R.A. Parker and D.L. Parnas},
  title =    {A Procedure for Designing Abstract Interfaces for
                  Device Interface Modules},
  booktitle =    {Fifth Int'l Conf. on Software
                  Engineering},
  OPTpages =     {},
  year =     {1981},
  OPTmonth =     {},
  annote =   {\commentjeff{This paper discusses the importance of
                  applying the principle of abstract interface design
                  to device interface modules. A device interface
                  provides virtual devices, that is, device-like
                  capabilities that are partially implemented in
                  software. The article describes common problems
                  involved in changing the hardware of the embedded
                  system and how the device interface module can be
                  used to eliminate some of those problems. It
                  discusses eleven common problems and proposes some
                  solutions. Some of these problems are still issues
                  today and this article, in spite of its age, remains
                  a usefull source of information.}}
}

@Book{Clements95:families,
  author =   {P. Clements},
  title =    {Software Cost Reduction through Disciplined Design},
  publisher =    {1984 Naval Research Laboratory Review},
  year =     {1985},
  address =  {Washington D.C.},
  note =     {Available as National Technical Information Service
                  order number AD-A1590000, pp. 79-87, July 1985},
  annote =   {\commentjeff{This article describes the rational and
                  initial results of the SCR project at the NRL -- the
                  A7 specification. It gives a high-level overview of
                  the 'SCR methodology' and of the A7 specification
                  project. It presents the lessons learned from the
                  SCR project as well as on overview of the process
                  used in developing the specification. It is usefull
                  from a historical perspective.}}
}

@Article{Parnas72:modules,
  author =   {D.L. Parnas},
  title =    {On the Criteria to be Used in Decomposing a System
                  into Modules},
  journal =  {Communications of the ACM},
  year =     1972,
  volume =   15,
  pages =    {1053-1058},
  month =    {December},
  annote =   {\commentget}
}

@Article{Parnas76:families,
  author =   {D.L. Parnas},
  title =    {On the Design and Development of Program Families},
  journal =  {IEEE Transactions on Software Engineering},
  year =     1976,
  volume =   2,
  number =   1,
  pages =    {1-9},
  month =    {March},
  annote =   {\commentjeff{This article is the first known article
                  to express the idea of a program family. In it,
                  Parnas describes the idea of a program family. This
                  includes both the obvious case where you have
                  related products -- for example, many different
                  versions of a product tailored to a customer's need
                  -- but also the case where you have many successive
                  versions of the same product. The fundemental ideas
                  that Parnas presents are that you wish to reduce the
                  'back-up' time in the software development process
                  that occurs when you start from a working
                  program. Thus, he introduces a tacit definition of
                  the separation between domain engineering and
                  application engineering. This article is a useful
                  starting point for the family literature, but work
                  that comes after this explains these concepts in
                  much greater and more usefull detail.}}
}

@InProceedings{Parnas78:design-extension,
  author =   {D.L. Parnas},
  title =    {Designing Software for Ease of Extension and
                  Contraction},
  booktitle =    {Third Int'l Conf. on Software
                  Engineering},
  year =     1978,
  annote =   {\commentjeff{This article builds
                  on~\cite{Parnas76:families} as Parnas refines the
                  idea of a program family and also introduces the
                  idea of a virtual machine and information hiding
                  through abstract interfaces. The article discusses
                  that you should avoid loops in the uses hierarchy of
                  the modules in a system.}}
}

@Article{Parnas86:rational-design,
  author =   {D.L. Parnas and P.C. Clements},
  title =    {A Rational Design Process: How and Why to Fake It},
  journal =  {IEEE Transactions on Software Engineering},
  year =     1986,
  volume =   12,
  number =   2,
  pages =    {251-257},
  annote =   {\commentjeff{In this article, Parnas discusses the
                  problems with expecting a software project to
                  proceed in a rational way, i.e., in the fashion
                  perscribed by most software engineering
                  methodologies. Parnas suggests that because this
                  will never happen, what we should do is to do the
                  software project as best we can and then produce
                  documentation and code that looks as if the software
                  were produced in this idealized manner. Parnas
                  describes the software process and documentation
                  involved. He also describes the role of
                  documentation and why documentation has
                  traditionally been outdated and of little use.}}
}

@Article{Parnas85:modularize,
  author =   {D.L. Parnas and P.C. Clements and D.M. Weiss},
  title =    {The Modular Structure of Complex Systems},
  journal =  {IEEE Transactions on Software Engineering},
  year =     1985,
  volume =   11,
  number =   3,
  pages =    {256-266},
  annote =   {\commentjeff{This paper described the module guide
                  associated with the A-7E aircraft Operational Flight
                  Program. The paper describes the format and
                  organization of the documentation using the A7 as an
                  example. Parnas {\em et al.} describe how the A7 was
                  split into a hardware-hiding module
                  (see~\cite{Britton81:interfaces}), a behavior-hiding
                  module, and a software decision module. The paper
                  advocates a hierarchical decomposition of the
                  modules. The paper can be viewed as a culmination of
                  much of the pervious work the Parnas has published
                  on structuring and designing software programs.}}
}

@Article{Parnas95:four-variable,
  author =   {D.L. Parnas and J. Madey},
  title =    {Functional Documentation for Computer Systems
                  Engineering},
  journal =  {Science of Computer Programming},
  year =     1991,
  volume =   25,
  number =   1,
  pages =    {41-61},
  annote =   {\commentjeff{This paper descibes the four variable
                  model for process control systems. The model is
                  described in terms of the documentation that you
                  need for the system: the System Requirements
                  Document being the REQ relation, etc. Parnas and
                  Madey also describe the constraints that must hold
                  on the various relations for the software system to
                  be well formulated. Although published in 1995, this
                  work is a refined version of the a technical
                  report~\cite{Parnas91:four-variable} that appeared
                  earler}}
}

%
% SCR and CoRE
%



@Manual{CoRE,
  title =    {Consortium Requirements Engineering Handbook},
  key =      {Software Productivity Consortium},
  organization = {Software Productivity Consortium},
  year =     1993,
  note =     {{SPC}-92060-{CMC}},
  annote =   {\commentjeff{This is the CoRE methodology
                  guidebook. It describes the CoRE methodology in
                  detail. For reading, look at chapters 1,2 and 6
                  first. Then, read chapters 3-5 which describe the
                  notations involved. Then, read the rest of it for
                  the detailed information. The CoRE methodology has
                  two notations: the behavioral notation which is
                  essentially SCR and the class notation which is a
                  way of structuring the SCR specifications using
                  classes and interfaces and other OO
                  concepts. Overall, the description of inheritance
                  (specialization and generalization) is
                  incomplete. In addition, the later chapters are
                  somewhat unclear and could be improved
                  upon. Nevertheless, there are many good ideas in
                  those and especially chapters 1 through 6 that need
                  to be looked at.}}
}

@InProceedings{Wiels99:scr-space-shuttle,
  author =   {Virginie Wiels and Steve Easterbrook},
  title =    {Formal Modeling of Space Shuttle Change Requests
                  using {SCR}},
  booktitle =    {Fourth Int'l Symposium of Requirements
                  Engineering (RE'99)},
  pages =    {14-16},
  year =     1999,
  month =    {April},
  annote =   {\jefftoread}
}

@Article{Easterbrook98:jss-scr-ivv,
  author =   {Steve Easterbrook and John Callahan},
  title =    {Formal Methods for Verification and Validation of
                  Partial Specifications},
  journal =  {Journal of Systems and Software},
  year =     1998,
  volume =   40,
  number =   3,
  annote =   {\jefftoread}
}

@InProceedings{Easterbrook97:ivv-expr-rep,
  author =   {Steve Easterbrook and John Callahan},
  title =    {Formal Methods for Verification and Validation of
                  Partial Specifications: An Experience Report},
  booktitle =    {Third IEEE Int'l Symposium on Requirements
                  Engineering (RE'97)},
  pages =    {160-168},
  year =     1997,
  month =    {January},
  annote =   {\jefftoread}
}

@InProceedings{Easterbrook96:scr-ivv,
  author =   {Steve Easterbrook and John Callahan},
  title =    {{SCR} and an {IV} \& {V} Tool},
  booktitle =    {Fifth Int'l Software Cost Reduction ({SCR})
                  Workshop},
  year =     1996,
  month =    {Feb},
  annote =   {\jefftoread}
}


%
% Methodology Related
%

@Article{Boehm88:spiral-model,
  author =   {Barry Boehm},
  title =    {A Spiral Model of Software Development and
                  Enhancement},
  journal =     {IEEE Computer},
  year =     {1988},
  volume =   {21},
  number =   {5},
  pages =    {61-72},
  month =    {May}
}

@InProceedings{Royce70:waterfall-model,
  author =   {W.W. Royce},
  title =    {Managing the Development of Large Software Systems:
                  Concepts and Techniques},
  booktitle =   {Proceedings of WESCON},
  year =  {1970},
  month =    {August}
}

%
% REVEAL methodolology
%

@Manual{REVEAL,
  title =    {{REVEAL}: A Keystone of Modern Systems Engineering},
  key =      {REVEAL},
  organization = {Praxis Critical Systems Limited},
  edition =  {Issue 1.1},
  month =    {July},
  year =  {2000},
  OPTannote =   {}
}

%
% Product Families
%

@Book{Weiss99:FAST-book,
  author =   {David M. Weiss and Lai, Chi Tau Robert},
  title =    {Software Product Line Engineering: A Family-Based
                  Software Development Process},
  publisher =    {Addison-Wesley},
  year =     1999,
  annote =   {\commentjeff{This book includes as a chapter the
                  information found in~\cite{Weiss97:commonality} and
                  also goes into more detail about the FAST process. A
                  formal description of the FAST process is given, as
                  well as examples of the forms, etc. to be used for
                  commonality analysis meetings and so on. The book
                  includes annotated bibliographies at the end of the
                  chapters that have good references to other
                  literatures about families and software
                  construction.}}
}

@TechReport{Weiss97:commonality,
  author =   {David M. Weiss},
  title =    {Defining Families: The Commonality Analysis},
  institution =  {Lucent Technologies Bell Laboratories},
  year =     {1997},
  address =  {1000 E. Warrenville Rd, Naperville, IL 60566},
  annote =   {\commentjeff{This paper desribes the commonality
                  analysis which is a key part of the FAST approach to
                  product families which David Weiss and others have
                  developed at Lucent. The paper's primary focus is on
                  the group dynamics and the process of the
                  commonality analysis. This is an important topic to
                  be sure, but more work is needed beyond this paper
                  to provide additional guidance in selecting
                  commonalities and defining the product families.}}
}

@InProceedings{Ardis97:families,
  author =   {Mark A. Ardis and David M. Weiss},
  title =    {Defining Families: The Commonality Analysis},
  booktitle =    {Nineteenth Int'l Conf. on Software
                  Engineering (ICSE'97)},
  pages =    {649-650},
  year =     {1997},
  annote =   {\commentjeff{This is a very short description of
                  commonality analysis and the FAST process given as a
                  summary of the FAST tutorial at ICSE'97.}}
}

@Article{Ardis00:case-study,
  author =   {Mark Ardis and Nigel Daley and Daniel Hoffman and
                  Harvey Siy},
  title =    {Software Product Lines: A Case Study},
  journal =  {Software Practice and Experience},
  year =     {2000},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTpages =     {},
  OPTmonth =     {},
  note =     {To Appear.},
  annote =   {\commentjeff{This article presents a case study with
                  the FAST process and some analysis on the effects
                  that the FAST process has on testing as well as how
                  the FAST process relates to more traditional
                  development procedures, for example, object oriented
                  programming. The article includes a good related
                  work section with pointers to Lam's work, etc.}}
}

@Article{Bentley86:little-lang,
  author =   {J.L. Bentley},
  title =    {Programming Pearls: Little Languages},
  journal =  {Communications of the ACM},
  year =     {1986},
  volume =   {29},
  number =   {8},
  pages =    {711-721},
  month =    {August},
  annote =   {\commentget}
}

@TechReport{Brownsword96:celciustech-family-case,
  author =   {Lisa Brownsword and Paul Clements},
  title =    {A Case Study in Successful Product Line Development},
  institution =  {Software Engineering Institute, Carnegie-Mellon
                  University},
  year =     {1996},
  number =   {CMU/SEI-96-TR-016},
  month =    {October},
  annote =   {\commentjeff{The paper discusses a case study done
                  by the SEI at a Swedish company, CelcisusTech
                  Systems, that builds command and control software
                  for ships.  The SEI group was able to change the
                  development paradigm of the company from building
                  the individual systems to building and then
                  maintaining the product line.  In this way, when a
                  new command and control system needs to be built,
                  they an quickly and easily modify the product line
                  so that the new systems, plus all previous systems
                  can be built.}}
}

@TechReport{Campbell90:intro-synthesis,
  author =   {Campbell, Grady H. Jr. and Stuart R. Faulk and David
                  M. Weiss},
  title =    {Introduction to Synthesis},
  institution =  {Software Productivity Consortium},
  year =     {1990},
  number =   {{INTRO-SYNTHESIS-PROCESS}-90019-{N}},
  address =  {Herdon, VA},
  annote =   {\commentget}
}


@InProceedings{Gupta97:auditdraw,
  author =   {Neeraj K. Gupta and Lalita J. Jagadeesan and
                  Eleftherios E. Koutsofios and David M. Weiss},
  title =    {Auditdraw: Generating Audits the {FAST} Way},
  booktitle =    {Third IEEE Int'l Symposium on Requirements
                  Engineering (RE'97)},
  pages =    {188-197},
  year =     {1997},
  annote =   {\commentjeff{This paper describes the application of
                  the FAST process~\cite{Weiss99:FAST-book} to Lucent
                  Technologies' 5ESS telephone switch. The result of
                  the project was an object-oriented language,
                  toolset, and process for specifying the requirements
                  and generating code for the 5ESS audits software.}}
}

@Article{Coplien98:commonality-variability,
  author =   {James Coplien and Daniel Hoffman and David Weiss},
  title =    {Commonality and Variability on Software Engineering},
  journal =  {IEEE Software},
  year =     {1998},
  volume =   {15},
  number =   {6},
  pages =    {37-},
  month =    {November/December},
  annote =   {\commentjeff{This article presents a good overview
                  of the scope, commonality, and variabliligy analysis
                  that is an integral part of domain engineering. It
                  is at a fairly high level, but does provide pointers
                  to other sources and is easy to read.}}
}

@TechReport{Cuka:exec-commands,
  author =   {David A. Cuka and David M. Weiss},
  title =    {Specifying Executable Commands: An Example of {FAST}
                  Domain Engineering},
  institution =  {Lucent Techonologies},
  year =     {unknown},
  note =     {Submitted to Transactions on Software Engineering},
  annote =   {\commentjeff{This article describes the FAST
                  approach as applied to the report printing feature
                  of the 5ESS telephone switch. It also gives an
                  overview of the FAST process.}}
}

@Article{Dikel97:apply-families,
  author =   {David Dikel and David Kane and Steve Ornburn and
                  William Loftus and Jim Wilson},
  title =    {Applying Software Product-Line Architecture},
  journal =  {IEEE Computer},
  year =     {1997},
  volume =   {30},
  number =   {8},
  pages =    {49-55},
  month =    {August},
  annote =   {\commentjeff{This article discusses a cases study at
                  Nortal that examined the use of a software product
                  line architecture. The article argues that in order
                  for a reuse process to be successful, certain
                  organizational factors must exists. The authors
                  present six principles believed to be critical to
                  the long term success of a software architecture.}}
}

@InProceedings{Lutz98:analysis-family,
  author =   {Robyn R. Lutz},
  title =    {Safety Analysis of Requirements for a Product
                  Family},
  booktitle =    {1998 Int'l Conf. on Requirements
                  Engineering (ICRE'98)},
  OPTpages =     {},
  year =     {1998},
  annote =   {\commentjeff{The article presents Lutz' results from
                  applying her safety checklist to a family of
                  instrumentation displays. She discusses FMEA
                  (Failure Modes and Effects Analysis) and FTA (Fault
                  Tree Analysis) as it was applied in the project. The
                  requirements were expressed in the four variable
                  model (SCR) and the paper discusses at what phases
                  in the development project the various analysis
                  techniques were effective at finding errors in the
                  commonalities and variablilities of the requirements
                  model. See~\cite{Lutz99:safe-reuse} for more
                  information.}}
}

@InProceedings{Lutz99:safe-reuse,
  author =   {Robyn R. Lutz},
  title =    {Toward Safe Reuse of Product Family Specifications},
  booktitle =    {Symposium on Software Reusability (SSR'99)},
  OPTpages =     {},
  year =     {1999},
  OPTannote =    {\commentjeff{This paper discusses more of Lutz'
                  results (see~\cite{Lutz98:analysis-family}). The
                  paper presents interesting results in the area of
                  developing product family specifications. The
                  article discusses Lutz' experience with dealing with
                  dependencies among options, hierarchies of
                  variabilities, near-commonalities, and dynamic
                  verses static variabilities. The paper points out
                  that more work is needed to make modeling decisions
                  reguarding near-commonalities as well as information
                  about how to model the requirements for a produce
                  family.}}
}

@Article{Lutz00:safe-reuse,
  author =   {Robyn R. Lutz},
  title =    {Extenting the Product Family Approach to Support
                  Safe Reuse},
  journal =     {Journal of Systems and Software},
  year =     {2000},
  volume =   {53},
  pages =    {207-217},
  annote =   {\commentjeff{This is a longer and more uptodate
                  version of~\cite{Lutz90:safe-reuse}}}
}

@InProceedings{Nakatani99:dom-eng,
  author =   {Lloyd H. Nakatani and Mark A. Ardis and Robert
                  G. Olsen and Paul M. Pontrelli},
  title =    {Jargons for Domain Engineering},
  booktitle =    {Second Conf. on Domain-Specific Languages
                  (DSL'99)},
  year =     {1999},
  annote =   {\commentjeff{This paper describes a process for
                  generating the domain specific languages used in the
                  FAST process by (essentially) treating these
                  languages themselves as a family of products. The
                  result is the InfoWiz tool which interprets a DSL
                  from a ``jargon'' specification.}}
}


@Book{Jazayeri00:ares-book,
  author =   {Mehdi Jazayeri and Alexander Ran and van der Linden, Frank},
  title =    {Software Architecture for Product Families:
                  Principles and Practice},
  publisher =   {Addison-Wesley},
  year =     {2000},
  OPTaddress =     {Boston, MA},
  OPTannote =   {}
}

@Book{Bosch00:architecture-book,
  author =   {Jan Bosch},
  title =    {Design and Use of Software Architectures: Adopting
                  and Evolving a Product-Line Approach},
  publisher =   {Addison-Wesley},
  year =     {2000},
  OPTaddress =     {Boston, MA},
  OPTannote =   {}
}

@InProceedings{Dolan98:stakeholders,
  author =   {Tom Dolan and Ruud Weterings and J.C. Wortman},
  title =    {Stakeholders in Software-System Family Architectures},
  booktitle =   {Development and Evolution of Software Architectures
                  for Product Families: Second Int'l ESPRIT
                  ARES Workshop},
  crossref =    {Linden98:ARES-workshop},
  pages =    {172-187},
  year =  {1998},
  OPTaddress =  {Las Palmas de Gran Canaria, Spain},
  OPTeditor =   {van der Linden, Frank},
  number =   {1429},
  series =   {Lecture Notes in Computer Science},
  month =    {February},
  publisher =   {Springer},
  OPTannote =   {}
}

@InProceedings{Cheong98:variant-architectures,
  author =   {Yu Chye Cheong and Akkihebbal L. Ananda and Stan
                  Jarzabek},
  title =    {Handling Variant Requirements in Software
                  Architectures for Product Families},
  booktitle =   {Development and Evolution of Software Architectures
                  for Product Families: Second Int'l ESPRIT
                  ARES Workshop},
  crossref =    {Linden98:ARES-workshop},
  pages =    {187-196},
  year =  {1998},
  OPTeditor =   {van der Linden, Frank},
  number =   {1429},
  series =   {Lecture Notes in Computer Science},
  OPTaddress =  {Las Palmas de Gran Canaria, Spain},
  month =    {February},
  publisher =   {Springer},
  OPTannote =   {}
}

@InProceedings{Meekel98:,
  author =   {Jacques Meekel and Thomas B. Horton and Charlie
                  Mellone},
  title =    {Architecting for Domain Variability},
  booktitle =   {Development and Evolution of Software Architectures
                  for Product Families: Second Int'l ESPRIT
                  ARES Workshop},
  crossref =    {Linden98:ARES-workshop},
  pages =    {205-213},
  year =  {1998},
  OPTeditor =   {van der Linden, Frank},
  number =   {1429},
  series =   {Lecture Notes in Computer Science},
  OPTaddress =  {Las Palmas de Gran Canaria, Spain},
  month =    {February},
  publisher =   {Springer},
  OPTannote =   {}
}

@Proceedings{Linden98:ARES-workshop,
  title =    {Development and Evolution of Software Architectures
                  for Product Families: Second Int'l ESPRIT
                  ARES Workshop},
  year =     {1998},
  editor =   {van der Linden, Frank},
  number =   {1429},
  series =   {Lecture Notes in Computer Science},
  month =    {February},
  publisher =   {Springer},
  OPTannote =   {}
}


@InProceedings{Baum98:extended-design-spaces,
  author =   {Lothar Baum and Lars Geyer and Georg Molter and
                  Steffen Rothkugel and Peter Sturm},
  title =    {Architecture-Centric Software Development Based on
                  Extended Design Spaces},
  booktitle =   {Development and Evolution of Software Architectures
                  for Product Families: The Second Int'l
                  Workshop on Development and Evolution of Software
                  Architectures for Product Familes (ARES)},
  pages =    {197-204},
  year =  {1998},
  OPTeditor =   {van der Linden, Frank},
  number =   {1429},
  series =   {Lecture Notes in Computer Science},
  OPTaddress =  {Las Palmas de Gran Canaria, Spain},
  month =    {February},
  publisher =   {Springer},
  OPTannote =   {}
}


@InProceedings{Baum00:requirements-design-spaces,
  author =   {L. Baum and M. Becker and L. Geyer and G. Molter},
  title =    {Mapping Requirements to Reusable Components Using
                  Design Spaces},
  booktitle =   {The Fourth Int'l Conf. on Requirements
                  Engineering (ICRE'00)},
  OPTpages =    {},
  year =  {2000},
  OPTaddress =     {Schaumburg, IL, USA},
  month =    {June},
  OPTannote =   {}
}

@TechReport{Lane90:design-spaces,
  author =   {Thomas G. Lane},
  title =    {Studying Software Architecture Through Design Spaces
                  and Rules},
  institution =  {Software Engineering Institute, Carnegie Mellon University},
  year =     {1990},
  number =   {CMU/SEI-90-TR-18},
  OPTaddress =     {Pittsburg, Pennsylvania 15213},
  month =    {November},
  OPTannote =   {}
}

@Proceedings{Frakes00:ICSR-6,
  title =    {Software Reuse: Advances in Software Reusability.
                  The Sixth Int'l Conf., ICSR},
  year =     {2000},
  editor =   {William B. Frakes},
  number =   {1844},
  series =   {Lecture Notes in Computer Science},
  address =  {Vienna, Austria},
  month =    {June},
  publisher =   {Springer}
}

@InProceedings{Gomaa00:OO-family-analysis,
  author =   {Hassan Gomaa},
  title =    {Object Oriented Analysis and Modeling for Families
                  of Systems with UML},
  booktitle =   {The Sixth Int'l Conf. on Software
                  Reuse (ICSR)},
  OPTcrossref =  {Frakes00:ICSR-6},
  pages =    {89-99},
  year =  {2000},
  OPTeditor =   {William B. Frakes},
  number =   {1844},
  series =   {Lecture Notes in Computer Science},
  OPTaddress =     {Vienna, Austria},
  month =    {June},
  publisher =   {June},
  annote =   {}
}

@InProceedings{Savolainen01:prod-line-manage,
  author =   {Juha Savolainen and Juha Kuusela},
  title =    {Consistency Management of Product Line Requirements},
  booktitle =   {Proceedings of the Fifth IEEE Int'l
                  Symposium on Requirements Engineering (RE'01)},
  pages =    {40-47},
  year =  {2001},
  OPTaddress =     {Toronto, Canada},
  month =    {August},
  OPTannote =   {}
}

@InProceedings{Faulk01:PRS-FGS,
  author =   {Stuart R. Faulk},
  title =    {Product-Line Requirements Specification ({PRS}): An
                  Approach and Case Study},
  booktitle =   {Proceedings of the Fifth IEEE Int'l
                  Symposium on Requirements Engineering (RE'01)},
  pages =    {48-55},
  year =  {2001},
  OPTaddress =     {Toronto, Canada},
  month =    {August},
  OPTannote =   {}
}

%
% Product Families: Methods
%

@InProceedings{Bayer99:Pulse,
  author =   {Joachim Bayer and Oliver Flege and Peter Knauber and
                  Roland Laqua and Dirk Muthig and Klaus Schmid and
                  Tanya Widen and Jean-Marc DeBaud},
  title =    {{PuLSE}: A Methodology to Develop Software Product
                  Lines},
  booktitle =   {Proceedings of the Fifth Symposium on Software
                  Reusability},
  pages =    {122-131},
  year =  {1999},
  OPTaddress =     {Los Angeles, CA, USA},
  month =    {May},
  OPTpublisher = {Association for Computing Machinery},
  OPTannote =   {}
}

@InProceedings{DeBaud99:Pulse-Eco,
  author =   {Jean-Marc DeBaud and Klaus Schmid},
  title =    {A Systematic Approach to Derive the Scope of
                  Software Product Lines},
  booktitle =   {Proceedings of the 1999 Int'l Conf. on
                  Software Engineering (ICSE'99)},
  pages =    {34-43},
  year =  {1999},
  OPTaddress =     {Los Angeles, CA, USA},
  month =    {May},
  OPTpublisher = {Association for Computing Machinery},
  OPTannote =   {}
}

@Article{Gomma96:edlc,
  author =   {H. Gomma and L. Kerschberg and V. Sugumaran and
                  C. Bosch and I. Tavakoli and L. O'Hara},
  title =    {A Knowledge-based Software Engineering Environment
                  for Reusable Software Requirements and Architectures
                  },
  journal =     {Automated Software Engineering},
  year =     {1996},
  volume =   {3},
  number =   {3,4},
  pages =    {285-307},
  month =    {August},
  OPTannote =   {}
}



%
% Reuse -- Software, Specification, and Requirements
%

@Article{Batory92:reuse,
  author =   {D. Batory and S. O'Mally},
  title =    {The Design and Implementation of Hierarchical
                  Software Systems with Reusable Components},
  journal =  {ACM Transactions on Software Engineering and
                  Methodology},
  year =     {1992},
  volume =   {1},
  number =   {4},
  pages =    {355-398},
  month =    {October},
  annote =   {\commentjeff{This article discribes a general
                  framework for reasoning about the implementation of
                  software systems with reusable components.  Examples
                  are given from the authors work with two
                  medium-large sized projets: Genesis, a customized
                  DBMS generation tool, and Avoca, a system for
                  constructing efficent and modular network software
                  suites.  The work is interesting and somewhat
                  related to product families.  It may provide a
                  system from which to reason about family
                  construction, but it is a little unclear in the
                  delivery of the information and seems to be a bit
                  difficult to use.}}
}

@InProceedings{Bailin95:diff-eng,
  author =   {S. Bailin},
  title =    {Difference-based Engineering},
  booktitle =    {Proceedings of the Seventh Annual Workshop on
                  Software Reuse},
  pages =    {28-30},
  year =     {1995},
  address =  {St. Charles, Illinois},
  month =    {April},
  annote =   {\commentget}
}

@Article{Campbell94:reuse,
  author =   {G. Campbell and J O'Connor and C. Mansour and
                  J. Turner-Harris},
  title =    {Reuse in Command and Control Systems},
  journal =  {IEEE Software},
  year =     {1994},
  volume =   {11},
  number =   {5},
  pages =    {70-79},
  month =    {September},
  annote =   {\commentjeff{This paper discusses a method for
                  program family construction which is essentially the
                  same as FAST by David Weiss and company.}}
}

@Book{Caper-Jones96:patterns-book,
  author =   {C. Caper-Jones},
  title =    {Patterns of Software Systems Failure and Success},
  publisher =    {Int'l Thompson Computer Press},
  year =     {1996},
  address =  {Boston, USA},
  OPTannote =    {}
}

@InProceedings{Chiang99:spec-reuse,
  author =   {Chia-Chu Chiang and David Neubart},
  title =    {Constructing Reusable Specifications Through
                  Analogy},
  booktitle =    {1999 ACM Symposium on Applied Computing},
  year =     {1999},
  pages =    {586-592},
  annote =   {\commentjeff{This paper discusses the construction
                  reuse using analogy.  Domain analysis and product
                  family construction has been successfull at reusing
                  software artifacts accross a well defined domain.
                  Reuse based on analogy holds the promise of being
                  able to generalize the results of one domain to
                  another.  The examples given here are in the TUG
                  specification language (see~\cite{Chiang94:tug}).
                  This is a logic-style specification language with a
                  module construct.}}
}

@InProceedings{Chiang94:tug,
  author =   {Chia-Chu Chiang and Joseph E. Urban},
  title =    {Development of the TUG Specification Language to
                  Support Specification Reuse},
  booktitle =    {Proceedings of the Eighteenth Annual Int'l
                  Computer Software and Applications Conf.
                  (COMPSAC'94)},
  pages =    {17-22},
  year =     {1994},
  annote =   {\commentjeff{This paper describes the TUG
                  specification language. The language contains
                  polymorphism (after a fashion) and other usefull,
                  reuse-oriented features.  The language does allow
                  renaming and expansion of reused components.  This
                  article is a very high-level overview of the
                  language, which from the article, does not seem that
                  much different from other logic-style languages.  In
                  addition, the language appears to be too low-level
                  to be usefull as a requirements notation -- it would
                  not be understood by all stakeholders in the project
                  and would suffer the same problems as, for example,
                  Z or Larch.}}
}

@InProceedings{Darimont97:reuse-op-req,
  author =   {Robert Darimont and Jeanine Souquieres},
  title =    {Reusing Operational Requirements: A Process Oriented
                  Approach},
  booktitle =    {Proceedings of the Third IEEE Int'l
                  Symposium on Requirements Engineering (RE'97)},
  pages =    {16-25},
  year =     {1997},
  month =    {January},
  annote =   {\commentjeff{This article discusses the possibility
                  of reusing pieces of formal specifications through
                  the formalization of operational requirements. At
                  this level, it is similar to the work that we intend
                  to do with requirements reuse. However, authors
                  approach is similar to analogy based requirements
                  reuse techniques and is not the same as what we're
                  doing.}}
}

@Article{Finkelstien88:formatted-req-reuse,
  author =   {A. Finkelstien},
  title =    {Reuse of Formatted Requirements Specifications},
  journal =  {Software Engineering Journal},
  year =     {1988},
  volume =   {3},
  number =   {5},
  pages =    {186-197},
  OPTmonth =     {},
  annote =   {\commentget}
}

@Article{Gomaa95:family-arch,
  author =   {H. Gomaa},
  title =    {Reusable Software Requirements and Architectures for
                  Families of Systems},
  journal =  {Journal of Systems and Software},
  year =     {1995},
  volume =   {25},
  number =   {3},
  pages =    {189-202},
  month =    {August},
  annote =   {\commentget}
}

@InProceedings{Harandi93:analogy-in-reuse,
  author =   {Mehdi Harandi},
  title =    {The Role of Analogy in Software Reuse},
  booktitle =    {Proceedings of the 1993 ACM Symposium on Applied
                  Computing},
  pages =    {40-47},
  year =     {1993},
  annote =   {\commentjeff{This paper discussed analogy and its
                  role in the reuse of software. Basically, the goal
                  is to find problems which are, in some sense,
                  isomorphic (and a graph theoretic sense) to one
                  another and then use the methods/code/etc. of one
                  problem for the other problem.}}
}

@Article{Jackson95:decomp-reuse,
  author =   {Daniel Jackson and Michael Jackson},
  title =    {Problem Decomposition for Reuse},
  journal =  {Software Engineering Journal},
  year =     {1995},
  volume =   {11},
  number =   {4},
  OPTpages =     {},
  month =    {October},
  annote =   {\commentjeff{This paper discusses the idea of
                  problem frames being applied to requirements to
                  facilitate reuse. A problem frame would be, for
                  example, the control aspects of the system. Another
                  problem from might be the static data aspect of the
                  system. For example, in the FAST aircraft system,
                  the static data for each airport might be topology
                  of the airways within the TRACON. Jackson's view of
                  the requirements is really a step higher than our
                  work currently, with our work being more suitable
                  for just the control frame of the system}}
}

@InProceedings{Kelly96:dom-anal,
  author =   {T.P. Kelly and W. Lam and B.R. Whittle},
  title =    {Diary of a Domain Analyst: A Domain Analysis
                  Case-Study from Avionics},
  booktitle =    {Proceedings of the IFIP Working Groups 8.1/13.2
                  Conf. Domain Knowledge for Interactive System
                  Design},
  OPTpages =     {},
  year =     {1996},
  editor =   {A.G. Sutcliffe and D. Benyon and F.V. Assche},
  month =    {May},
  annote =   {\commentget}
}

@InProceedings{Kuusela00:req-family,
  author =   {Juha Kuusela and Juha Savolainen},
  title =    {Requirements Engineering for Product Families},
  booktitle =   {Proceedings of the Twenty-Second Int'l
                  Conf. on Software Engineering (ICSE'00)},
  pages =    {60-68},
  year =  {2000},
  month =    {June},
  OPTaddress =   {Limerik, Ireland},
  OPTorganization = {},
  OPTpublisher = {Associatin for Computing Machinery},
  annote =   {\commentjeff{This paper introduces a hierarchical
                  organization for the requirements in a product
                  family. This is not quite the same as hierarchical
                  product families, nor is it quite the same as a
                  variability hierarchy.  Rather, it seems more akin
                  to an organizational guide to the requirements,
                  i.e., how you might organize the requirements anyway
                  and seems somewhat related to Nancy's intent
                  specifications.}}
}

@InProceedings{Lam98:tech-trans,
  author =   {W. Lam and S. Jones and C. Britton},
  title =    {Technology Transfer for Reuse: A Management Model
                  and Process Improvement Framework},
  booktitle =    {Third IEEE Int'l Conf. on Requirements
                  Engineering (ICRE'98)},
  OPTpages =     {},
  year =     {1998},
  month =    {April},
  annote =   {\commentjeff{This paper discusses the issues related
                  to technology transfere or requirement reuse
                  methods. Of particular value in the paper is the
                  extensive discussion of requirements and
                  specification reuse methods and thier relation to
                  one another. Lam discusses an Operational Reuse
                  Model for helping the technology transfer problem.}}
}

@Article{Lam98:req-reuse-case,
  author =   {W. Lam},
  title =    {A Case-study of Requirements Reuse through Product
                  Families},
  journal =  {Annals of Software Engineering},
  year =     {1998},
  volume =   {8},
  OPTnumber =    {},
  pages =    {253-277},
  OPTmonth =     {},
  annote =   {\commentget}
}

@InProceedings{Lam97:req-reuse-tools,
  author =   {W. Lam},
  title =    {Developing Component-Based Tools for Requirements
                  Reuse: A Process Guide},
  booktitle =    {Eighth Int'l Workshop on Software Technology
                  and Engineering Practice (STEP'97)},
  pages =    {473-483},
  year =     {1997},
  annote =   {\commentjeff{This paper discusses a FAST-like
                  approach to reusing requirements. Lam expresses many
                  of the same ideas as David Weiss in his FAST
                  approach here, but does not cite Weiss in the text
                  (although the original Parnas paper is cited). The
                  paper is interesting from a comparison standpoint,
                  but the FAST literature is much more developed and
                  complete.}}
}

@Article{Lam97:ten-steps,
  author =   {W. Lam and J.A. McDermid and A.J. Vickers},
  title =    {Ten Steps Towards Systematics Requiremens Reuse},
  journal =  {Requirements Engineering},
  year =     {1997},
  volume =   {2},
  number =   {2},
  pages =    {120-113},
  OPTmonth =     {},
  annote =   {\commentjeff{This paper discusses ten steps that can
                  be taken by organizations to improve requirements
                  reuse within thier software development
                  processes. Specicially, the ten are 1) do not
                  over-generalize, 2) identify system families, 3)
                  evaluate reuse technology in terms of process change
                  in addition to reuse potential, 4) utilize domain
                  issues to organize and structure products and
                  processes, 5) and 9) develop templatized
                  requirements to span commonalities and variablities,
                  6) examine requirements patterns, 7) make reuse
                  explicit to prevent misuse, 8) reuse parts of the
                  requirements engineering process, 10) asses impact
                  of reuse on the development process.}}
}

@InProceedings{Lam97:req-reuse-steps,
  author =   {W. Lam and J.A. McDermid and A.J. Vickers},
  title =    {Ten Steps Towards Systematic Requirements Reuse},
  booktitle =    {Third IEEE Int'l Symposium on Requirements
                  Engineering (RE'97)},
  pages =    {6-15},
  year =     {1997},
  annote =   {\commentjeff{Conf. version
                  of~\cite{Lam97:ten-steps}}}
}

@Article{Lam97:avionics-req-reuse,
  author =   {W. Lam},
  title =    {Achieving Requirements Reuse: A Domain-Specific
                  Approach from Avionics},
  journal =  {Journal of Systems and Software},
  year =     {1997},
  volume =   {38},
  number =   {3},
  pages =    {197-209},
  OPTmonth =     {},
  annote =   {\commentget}
}

@Article{Lam97:reusable-arch,
  author =   {W. Lam},
  title =    {Creating Reusable Architectures: Initial Experience
                  Report},
  journal =  {ACM SIGSOFT Software Engineering Notes},
  year =     {1997},
  volume =   {22},
  number =   {4},
  pages =    {39-43},
  OPTmonth =     {},
  annote =   {\commentjeff{This article suggests a process for
                  creating reusable artifacts call RACE. It is similar
                  to the FAST process. The interesting differences are
                  in the suggestions that a variation hierarchy be
                  created. This is different from the sort of
                  hierarchy propsed by
                  Lutz~\cite{Lutz99:safe-reuse}. Also, the RACE
                  process seems to focus more on identifying
                  variablilities than commonalities and is not as
                  developed as FAST. Nevertheless, the work being done
                  seems to be usefull and interesting.}}
}

@InProceedings{Lam96:dom-anal,
  author =   {W. Lam and B.R. Whittle and J. McDermid and
                  S. Wilson},
  title =    {An Integrated Approach to Domain Analysis and Reuse
                  for Engineering Complex Systems},
  booktitle =    {Proceedings of the IEEE Int'l Symposium and
                  Workshop on Engineering of Computer-Based Systems
                  (ECBS'96)},
  OPTpages =     {},
  year =     {1996},
  month =    {March},
  annote =   {\commentget}
}

@Article{Lam96:dom-spec-reuse,
  author =   {W. Lam and B.R. Whittle},
  title =    {A Taxonomy of Domain-Specific Reuse Problems and
                  Thier Resolutions - Version 1.0},
  journal =  {ACM SIGSOFT Software Engineering Notes},
  year =     {1996},
  volume =   {21},
  number =   {5},
  pages =    {72-77},
  month =    {September},
  annote =   {\commentjeff{This article discusses a number of
                  domain-specific reuse issues and proposes strategies
                  for thier resolution. The problems addressed are: 1)
                  domain definition, 2) modeling languages used, 3)
                  viewpoints of different stakeholders, 4) modeling
                  influence, 5) properties of the domain model, 6)
                  system distinction, and 7) reusable assets. The
                  article lists the possible resolution strategies in
                  useful matrix (Table 1). The article has many
                  examples from the authors work with Rolls-Smith
                  Engine Controls Ltd. which make the article a
                  usefull resource. The article couldn't included more
                  on the resolution of its proposed problems,
                  however.}}
}

@PhdThesis{Lam94:phd-thesis,
  author =   {W. Lam},
  title =    {Reasoning about Requirements from Past Cases},
  school =   {Kings College, University of London},
  year =     1994
}

@InProceedings{Maiden95:req-reuse,
  author =   {N.A.M. Maiden and P. Mistry and A.G. Sutcliffe},
  title =    {How People Categorise Requirements for Reuse: A
                  Natural Approach},
  booktitle =    {Second IEEE Int'l Symposium on Requirements
                  Engineering},
  pages =    {148-155},
  year =     1995,
  annote =   {\commentget}
}

@Article{Maiden92:analogy-reuse,
  author =   {N. Maiden and A. Sutcliffe},
  title =    {Exploiting Reusable Specification through Analogy},
  journal =  {Communications of the ACM},
  year =     {1992},
  volume =   {35},
  number =   {4},
  pages =    {55-64},
  OPTmonth =     {},
  annote =   {\jefftoread}
}

@InProceedings{Mannion99:family-reuse,
  author =   {Mike Mannion and Barry Keepence and Hermann Kaindl
                  and Joe Wheadon},
  title =    {Reusing Single System Requirements from Application
                  Family Requirements},
  booktitle =    {Proceedings of the Twenty-first Int'l
                  Conf. on Software Engineering (ICSE'99)},
  pages =    {453-462},
  year =     {1999},
  annote =   {\jefftoread}
}

@Article{Mannion98:dom-req,
  author =   {Mike Mannion and Barry Keepence and David Harper},
  title =    {Using Viewpoints to Define Domain Requirements},
  journal =  {IEEE Software},
  year =     {1998},
  volume =   {15},
  number =   {1},
  pages =    {95-102},
  month =    {January-February},
  annote =   {\commentjeff{This article discusses the use of
                  viewpoints in defining domain requirements. The
                  article's focus on domain engineering with little
                  ties to the actual implementation of the system
                  makes it difficult to understand where the authors
                  are going.  It would be nice to have a longer, more
                  complete version of the paper, rather than the IEEE
                  Software article that does not go into much detail.}}
}

@InProceedings{Massonet97:analogy-reuse,
  author =   {P. Massonet and A. Lamsweerde},
  title =    {Analogical Reuse of Requirements Frameworks},
  booktitle =    {Proceedings of the Third IEEE Int'l
                  Conf. on Requirements Engineering},
  pages =    {26-37},
  year =     {1997},
  annote =   {\jefftoread}
}

@Article{Miriyala91,
  author =   {K. Miriyala and T.H. Harandi},
  title =    {Automatic Derivation of Formal Software
                  Specifications from Informal Descriptions},
  journal =  {IEEE Transactions on Software Engineering},
  year =     {1991},
  volume =   {17},
  number =   {10},
  pages =    {1126-1142},
  OPTmonth =     {},
  annote =   {\commentget}
}

@Article{Neighbors84:draco,
  author =   {J. Neighbors},
  title =    {The Draco Approach to Constructing Sofware from
                  Reusable Components},
  journal =  {IEEE Transactions on Software Engineering},
  year =     {1984},
  volume =   {10},
  number =   {5},
  pages =    {564-574},
  OPTmonth =     {},
  annote =   {\commentjeff{This paper dicusses the Draco system for
                  constructing software from reusable components.  In
                  many ways, the Draco system is a precursor to the
                  family oriented approach that were investigated by
                  Weiss, Ardis, Lutz, etc.  The Draco system makes a
                  distinction between a domain and a family of systems
                  implemented by the domain.  Also mentioned in the
                  article is the idea of a domain programming
                  language, very similar to the results of the FAST
                  process.  In addition, the concept of hierarchically
                  structured domains is dicussed.}}
}

@InProceedings{Paredes95:req-reuse-framework,
  author =   {Carlos Paredes and Jose Luiz Fiadeiro},
  title =    {Reuse of Requirements and Specifications: a Formal
                  Framework},
  booktitle =    {Symposium on Software Reusability (SSR'95)},
  pages =    {263-266},
  year =     {1995}
}

@Article{Prieto-Diaz90:dom-anal,
  author =   {R. Prieto-Diaz},
  title =    {Domain Analysis: An Introduction},
  journal =  {ACM SIGSOFT Software Engineering Notes},
  year =     {1990},
  volume =   {15},
  number =   {2},
  pages =    {47-54},
  OPTmonth =     {},
  annote =   {\commentget}
}

@InProceedings{Prieto-Diaz87:dom-anal,
  author =   {R. Prieto-Diaz},
  title =    {Domain Analysis for Reusability},
  booktitle =    {Proceedings of COMPSAC'87},
  pages =    {23-29},
  year =     {1987},
  annote =   {\commentget}
}

@InProceedings{Ryan93:graphs-req-reuse,
  author =   {K. Ryan and B. Mathews},
  title =    {Matching Conceptual Graphs as an Aid to Requirements
                  Reuse},
  booktitle =    {Proceedings of the IEEE Int'l Symposium on
                  Requirements Engineering},
  pages =    {112-120},
  year =     {1993},
  annote =   {\commentget}
}

@Manual{SPC92:reuse-guide,
  title =    {Software Productivity Consortium Reuse Adoption
                  Guidebook},
  key =      {SPC},
  edition =  {Version 01.00.03},
  month =    {November},
  year =     {1992},
  note =     {SPC-92051-CMC},
  annote =   {\commentget}
}

@Article{Tracz95:dom-spec-arch,
  author =   {W. Tracz},
  title =    {DSSA (Domain Specific Software Architecture)
                  Pedagogical Example},
  journal =  {ACM SIGSOFT Software Engineering Notes},
  year =     {1995},
  volume =   {20},
  number =   {3},
  pages =    {49-62},
  OPTmonth =     {},
  annote =   {\commentjeff{This article discusses a small example
                  of a domain-specific software architecture. A DSSA,
                  is a collection of software components specialed for
                  a particular domain and arranged in a particular
                  structure. Thus, a DSSA for a particular domain can
                  be viewed as a pattern for a solution in the
                  domain. A DSSA is represented in OO terms, for
                  example, senarios, object diagrams and state
                  diagrams. See~\cite{Tracz93:dom-spec-arch} for
                  information about creating a DSSA}}
}

@Article{Tracz93:dom-spec-arch,
  author =   {W. Tracz and L. Coglianese and P. Young},
  title =    {A Domain Specific Software Architecture Engineering
                  Process Outline},
  journal =  {ACM SIGSOFT Software Engineering Notes},
  year =     {1993},
  volume =   {18},
  number =   {2},
  pages =    {40-49},
  OPTmonth =     {},
  annote =   {\commentjeff{This article describes the creation of
                  a domain-specific software architecture. The paper
                  outlines five steps in the creation process: 1)
                  define the scope of the domain, 2) define
                  domain-specific concepts/requirements, 3) define
                  domain-specific design and implementation
                  constraints, 4) develope domain
                  architectures/models, and 5) produce reusable
                  workproducts. The article describes the process
                  through a simple process notation diagram. Tracz
                  talks about constraints which are stable verses
                  those which are variable, which is similar to the
                  product family work which was done by others after
                  this article was
                  written. See~\cite{Tracz95:dom-spec-arch} for an
                  example of a DSSA}}
}

@Article{Whittle95:struct-for-reuse,
  author =   {B.R. Whittle and A.J. Vickers and W. Lam and
                  J. McDermid and J.A. Hill and R. Rimmer and
                  P. Essam},
  title =    {Structuring Requirements Specifications for Reuse},
  journal =  {Int'l Journal on Applied Software
                  Technology},
  year =     {},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTpages =     {},
  OPTmonth =     {},
  OPTnote =  {},
  OPTannote =    {}
}

@InProceedings{Willis94:spec-reuse,
  author =   {C.P. Willis and D.J. Paddon},
  title =    {Specification Reuse for Safety-Critical Software},
  booktitle =    {Sixth Int'l Conf. on Software
                  Engineering and Knowledge Engineering (SEKE'94)},
  pages =    {516-23},
  year =     {1994},
  annote =   {\commentget}
}

%
% Software Architecture and Architecture Description Languages
%


@PhdThesis{Allen97:phd-thesis-wright,
  author =   {R. Allen},
  title =    {A Formal Approach to Software Architecture},
  school =   {Carnegie Mellon University},
  year =     {1997},
  month =    {May},
  OPTnote =      {CMU Technical Report CMU-CS-97-144},
  OPTannote =    {}
}

@Article{Allen97:wright,
  author =   {R. Allen and D. Garlan},
  title =    {A Formal Basis for Architectural Connection},
  journal =      {ACM Transactions on Software Engineering and Methodology},
  year =     {1997},
  volume =   {6},
  number =   {3},
  pages =    {213-249},
  month =    {July},
  OPTannote =    {}
}

@Article{Binns96:metaH,
  author =   {P. Binns and M. Engelhart and M. Jackson and
                  S. Vestal},
  title =    {Domain-Specific Software Architectures for Guidance,
                  Navigation, and Control},
  journal =  {Int'l Journal of Software Engineering and
                  Knowledge Engineering},
  year =  {1996},
  volume =   {6},
  number =   {2},
  OPTpages =    {201-227},
  OPTmonth =    {June},
  OPTannote =   {}
}

@InProceedings{Clements96:adl-survey,
  author =   {Paul C. Clements},
  title =    {A Survey of Architecture Description Languages},
  booktitle =   {Proceedings of the Eighth Int'l Workshop on
                  Software Specification and Design},
  OPTpages =    {},
  year =  {1996},
  OPTaddress =     {Germany},
  month =    {March},
  OPTannote =   {}
}

@Misc{Garlan95:aesop,
  author =   {David Garlan},
  title =    {A Introduction to the {Aesop} System},
  OPThowpublished = {},
  month =    {July},
  year =     {1995},
  note =     {http://www.cs.cmu.edu/afs/cs/project/able/www/aesop/html/aesop-overview.ps},
  OPTannote =    {}
}

@InProceedings{Garlan94:aesop,
  author =   {D. Garlan and R. Allen and J. Ockerbloom},
  title =    {Exploting Style in Architectural Design Environments},
  booktitle =    {Proceedings SIGSOFT'94: Foundations on Software Engineering},
  pages =    {175-188},
  year =     {1994},
  month =    {December},
  OPTaddress = {New Orleans, LA},
  OPTannote =    {}
}

@InProceedings{Magee99:darwin,
  author =   {Jeff Magee and Jeff Kramer and Dimitra
                  Giannakopoulou},
  title =    {Behaviour Analysis of Software Architectures},
  booktitle =    {First Working IFIP Conf. on Software
                  Architecture (WISCSA1)},
  year =     {1999},
  month =    {Feburary},
  OPTannote =    {}
}

@InProceedings{Gorlick94:weaves,
  author =   {M. Gorlick and A. Quilici},
  title =    {Visual Programming in the Large verses Visual
                  Programming in the Small},
  booktitle =   {Proceedings of the IEEE Symposium on Visual
                  Languages},
  pages =    {137-144},
  year =  {1994},
  month =    {October},
  OPTaddress =  {St. Louis, MO},
  OPTannote =   {}
}

@InProceedings{Gorlick91:weaves,
  author =   {M. Gorlick and R. Razouk},
  title =    {Using {Weaves} for Software Construction and
                  Analysis},
  booktitle =   {Proceedings of the Thirteenth Int'l
                  Conf. on Software Engineering (ICSE'91)},
  pages =    {23-34},
  year =  {1991},
  month =    {May},
  OPTaddress =  {Los Alamitos, CA},
  OPTannote =   {}
}

@InProceedings{Magee95:darwin,
  author =   {J. Magee and N. Dulay and J. Kramer},
  title =    {Specifying Distributed Software Architectures},
  booktitle =   {Proceedings of the Fifth European Software
                  Engineering Conf. (ESEC'95)},
  pages =    {137-153},
  year =  {1995},
  month =        {September},
  OPTaddress =   {Sitges, Spain},
  OPTannote =   {}
}

@InProceedings{Magee96:darwin,
  author =   {J. Magee and J. Kramer},
  title =    {Dynamic Structure in Software Architectures},
  booktitle =    {Proceedings of the ACM SIGSOFT'96: Fourth Symposium
                  on the Foundations of Software Engineering},
  pages =    {3-14},
  year =         {1996},
  month =    {October},
  OPTaddress = {San Francisco, CA},
  OPTannote =    {}
}

@InProceedings{Medvidovic96:c2,
  author =   {N. Medvidovic and P. Oreizy and J.E. Robbins and
                  R.N. Taylor},
  title =    {Using Object-Oriented Typing to Support
                  Architectural Design in the {C2} Style},
  booktitle =   {Proceedings of the ACM SIGSOFT'96: Fourth Symposium
                  on the Foundations of Software Engineering},
  pages =    {24-32},
  year =  {1996},
  month =    {October},
  OPTaddress =   {San Francisco, CA},
  OPTannote =   {}
}

@InProceedings{Medvidovic99:c2,
  author =   {N. Medvidovic and D.S. Rosenblum and R.N. Taylor},
  title =    {A Language and Environment for Architecture-Based
                  Software Development and Evolution},
  booktitle =   {Proceedings of the Twenty-first Int'l
                  Conf. on Software Engineering (ICSE'99)},
  pages =    {44-53},
  year =  {1999},
  month =    {May},
  address =  {Los Angeles, CA},
  OPTannote =   {}
}

@Article{Medvidovic00:ADL-classification,
  author =   {Nenad Medvidovic and Richard N. Taylor},
  title =    {A Classification and Comparison Framework for
                  Software Architecture Description Languages},
  journal =      {IEEE Transactions on Software Engineering},
  year =     {2000},
  volume =   {26},
  number =   {1},
  pages =    {70-93},
  month =    {January},
  annote =   {\commentjeff{This paper describes and compares a
                  number of architecture description languages and
                  gives a taxonomy of charateristics that an ADL
                  should have.}}
}

@InProceedings{Medvidovic97:ADL-framework,
  author =   {Nenad Medvidovic and David S. Rosenblum},
  title =    {Domains of Concern in Software Architectures and
                  Architecture Description Languages},
  booktitle =    {Proceedings of the 1997 USENIX Conf. on
                  Domain-Specific Languages},
  year =     {1997},
  month =    {October},
  OPTannote =    {}
}

@TechReport{Moriconi97:sadl,
  author =   {M. Moriconi and R.A. Riemenschneider},
  title =    {Introduction to {SADL} 1.0: A Language for
                  Specifying Software Architecture Hierarchies},
  institution =  {Carnegie Mellon University},
  year =     {1997},
  number =   {SRI-CSL-97-01},
  month =    {March},
  OPTannote =    {}
}

@Article{Moriconi95:sadl,
  author =   {M. Moriconi and X. Qian and R.A. Riemenschneider},
  title =    {Correct Architecture Refinement},
  journal =      {IEEE Transactions on Software Engineering},
  year =     {1995},
  volume =   {21},
  number =   {4},
  pages =    {356-372},
  month =    {April},
  OPTannote =    {}
}

@InProceedings{Naumovich97:wright-checking,
  author =   {Gleb Naumovich and George S. Avrunin and Lori
                  A. Clarke and Leon J. Osterweil},
  title =    {Applying Static Analysis to Software Architectures},
  booktitle =    {Proceedings of the Sixth European Software
                  Engineering Conf. (ESEC'97)},
  pages =    {77-93},
  year =     {1997},
  number =   {1301},
  series =   {Lecture Notes in Computer Science},
  publisher =    {Springer-Verlag},
  OPTannote =    {}
}

@Article{Shaw95:unicon,
  author =   {Mary Shaw and Robert De{L}ine and Daniel V. Klein
                  and Theodore L. Ross and David M. Young and Gregory
                  Zelesnik},
  title =    {Abstractions for Software Architecture and Tools to
                  Support Them},
  journal =      {IEEE Transactions on Software Engineering},
  year =     {1995},
  volume =   {21},
  number =   {4},
  pages =    {314-335},
  month =    {April},
  OPTannote =    {}
}

@TechReport{Terry95:ArTek,
  author =   {A. Terry and R. London and G. Papanagopoulos and
                  M. Devito},
  title =    {The {ARDEC/Teknowledge} Architecture Description
                  Language ({ArTek})},
  institution =    {Teknowledge Federal Syst. and U.S. Army Armament
                  Research, Development, and Eng. Center},
  year =  {1995},
  month =    {July},
  note =  {Version 4.0},
  OPTannote =   {}
}

@InProceedings{Tracz93:lileanna,
  author =   {W. Tracz},
  title =    {{LILEANNA}: A Parameterized Programming Language},
  booktitle =   {Proceedings of the Second Int'l Workshop on
                  Software Reuse},
  pages =    {66-78},
  year =  {1993},
  month =    {March},
  address =  {Lucca, Italy},
  OPTannote =   {}
}

@TechReport{Vestal96:metaH,
  author =   {S. Vestal},
  title =    {{MetaH} Programmer's Manual},
  institution =  {Honeywell Technology Center},
  year =     {1996},
  month =    {April},
  address = {Minneapolis, MN},
  note =         {Version 1.09},
  OPTannote =    {}
}


%
% Michael Jackson & World Machine Model
%

@Book{Jackson95:requirements,
  author =   {Michael Jackson},
  title =    {Software Requirements and Specifications},
  publisher =   {ACM Press and Addison-Wesley},
  year =     {1995},
  OPTannote =   {}
}

@Book{Jackson01:problem-frames,
  author =   {Michael Jackson},
  title =    {Problem Frames: Analyzing and Structuring Software
                  Development Problems},
  publisher =   {ACM Press and Addison-Wesley},
  year =     {2001},
  OPTannote =   {}
}

@InProceedings{Jackson92:domain-desc,
  author =   {Michael Jackson and Pamela Zave},
  title =    {Domain Descriptions},
  booktitle =   {Proceedings of the IEEE Int'l Symposium on
                  Requirements Engineering},
  pages =    {56-64},
  year =  {1992},
  OPTmonth =    {},
  OPTpublisher = {IEEE Computer Society Press},
  OPTannote =   {}
}

@InProceedings{Jackson95:spec-from-req,
  author =   {Michael Jackson and Pamela Zave},
  title =    {Deriving Specifications from Requirements: An
                  Example},
  booktitle =   {Proceedings of the Seventeenth Int'l
                  Conf. on Software Engineering (ICSE'95)},
  pages =    {15-24},
  year =  {1995},
  OPTaddress =     {},
  month =    {May},
  OPTpublisher = {IEEE Computer Society Press},
  OPTannote =   {}
}

@inproceedings{jackson1995world,
  title={The world and the machine},
  author={Jackson, Michael},
  booktitle={17th Int'l Conf. on Software Engineering},
  pages={283--283},
  year={1995},
  organization={IEEE}
}

@Article{Gunter00:wrspm-model,
  author =   {Carl A. Gunter and Elsa L. Gunter and Michael
                  Jackson and Pamela Zave},
  title =    {A Reference Model for Requirements and
                  Specifications},
  journal =     {IEEE Software},
  year =     {2000},
  volume =   {17},
  number =   {3},
  pages =    {37-43},
  month =    {May/June},
  OPTannote =   {}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  SPIN
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{Holzmann04:SPIN,
  author =   {Gerald J Holzmann},
  title =    {The SPIN Model Checker: Primer and Reference Manual},
  publisher =   {Addison-Wesley},
  year =     {2004},
  OPTannote =   {}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Aspect Oriented Programming
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Kiczales97:aspect-or-prog,
  author =   {G. Kiczales and J. Lamping and A. Mendhekar and
                  C. Maeda and C. Lopes and J-M. Loingtier and
                  J. Irwin},
  title =    {{Aspect-Oriented Programming}},
  booktitle =   {European Conf. on Object-Oriented Programming (ECOOP'97)},
  pages =    {220-242},
  year =  {1997},
  number =   {1241},
  series =   {LNCS},
  publisher =   {Springer-Verlag}
}

@Article{Kiczales96:aspect-or-prog,
  author =   {G. Kiczales et al.},
  title =    {{Aspect-Oriented Programming}},
  journal =     {ACM Computing Surveys},
  year =     {1996},
  volume =   {28},
  month =    {December}
}


@Article{Elrad01:cacm,
  author =   {Tzilla Elrad and Robert E. Filman and Atef Bader},
  title =    {{Aspect-Oriented Programming}},
  journal =  {Communications of ACM},
  year =     {2001},
  volume =   {44},
  number =   {10},
  pages =    {28-32},
  month =    {October}
}


@InProceedings{Kiczales01:aspectJ,
  author =   {G. Kiczales and E. Hilsdale and J. Hugunin and M. Kersten and J. Palm and W.G. Griswold},
  title =    {{An Overview of AspectJ}},
  booktitle =   {European Conf. on Object-Oriented Programming (ECOOP)},
  pages =    {327-353},
  year =  {2001},
  number =   {2072},
  series =   {LNCS},
  publisher =   {Springer-Verlag}
}

@InProceedings{Kiczales01:aspectJCACM,
  author =   {G. Kiczales and E. Hilsdale and J. Hugunin and M. Kersten and J. Palm and W.G. Griswold},
  title =    {{Getting stated with AspectJ}},
  booktitle =   {Communications of ACM},
  volume =   {44},
  number =   {10},
  pages =    {59-65},
  year =  {2001},
  month =    {Oct}
}

@INPROCEEDINGS{Hilsdale04:aspectJWeaving,
  AUTHOR =       {Erik Hilsdale and Jim Hugunin},
  TITLE =        {{Advice Weaving in AspectJ}},
  BOOKTITLE =    {Int'l Conf. on Aspect-Oriented Software Development(AOSD)},
  YEAR =         "2004",
  pages =        "26-35",
  publisher =    {ACM Press}
}

@Article{bergmans01:CFcacm,
  Author=       {Lodewijk Bergmans and Mehmet Aksit},
  Title=        {{Composing Crosscutting Concerns Using Composition Filters}},
  Journal=      {Communications of ACM},
  Volume=       "44",
  Number=       "10",
  Pages=        "51-57",
  Year=         "2001"
}

@UNPUBLISHED{bergmans01:notpub,
  AUTHOR =       {Lodewijk Bergmans and Mehmet Aksit},
  TITLE =        {{Composing Multiple Concerns Using Composition Filters}},
  year =         "2001",
  file = "trese.cs.utwente.nl/oldhtml/publications/papers/CF_superimposition_bergmans_aksit.pdf"
}

@Article{bergmans01:CFAspectComp,
  Author=       {L. Bergmans and M. Aksit and B. Tekinerdogan},
  Title=        {{Aspect Composition Using Composition Filters}},
  Journal=      {In Software  Architectures  and  Component  Technology: The State of the Art in Research and
  Practice},
  Pages=        "357-382",
  Year=         "2001",
  publisher =    {Kluwer}
}

@InProceedings{NagyBerAks05:SJP,
  Author=       {Istvan Nagy and Lodewijk Bergmans and Mehmet Aksit},
  Title=        {{Composing Aspects at Shared Join Points}},
  Booktitle=    {Int'l Conf. NetObjectDays, NODe2005},
  Series=       {LNCS},
  Publisher=    {Springer-Verlag},
  Year=         "2005",
  Note=         "to be published"
}

@INPROCEEDINGS{Douence04:aosd,
  AUTHOR =       {Remi Douence and Pascal Fradet and Mario Sudholt},
  TITLE =        {{Composition, Reuse and Interaction Analysis of Stateful Aspects}},
  BOOKTITLE =    {Int'l Conf. on Aspect-Oriented Software Development(AOSD)},
  YEAR =         "2004",
  pages =        "26-35",
  publisher =    {ACM Press}
}

@INPROCEEDINGS{Douence02:gpce,
  AUTHOR =       {Remi Douence and Pascal Fradet and Mario Sudholt},
  TITLE =        {{A framework for the Detection and Resolution of Aspect Interactions}},
  BOOKTITLE =    {GPCE},
  YEAR =         "2002",
  pages =        "173-188",
  Series=        {LNCS},
  number =       "2487",
  publisher =    {Springer-Verlag}
}

@inproceedings{Rajan05:Classpects,
 author = {Hridesh Rajan and Kevin J. Sullivan},
 title = {{Classpects: unifying aspect- and object-oriented language design}},
 booktitle = {ICSE '05: Proceedings of the 27th Int'l Conf. on Software engineering},
 year = {2005},
 pages = {59--68},
 publisher = {ACM Press}
 }


@inproceedings{Maes87:CompRefConcepts,
 author = {Pattie Maes},
 title = {Concepts and experiments in computational reflection},
 booktitle = {OOPSLA '87: Conf. proceedings on Object-oriented programming systems, languages and
 applications},
 year = {1987},
 isbn = {0-89791-247-0},
 pages = {147--155},
 location = {Orlando, Florida, United States},
 publisher = {ACM Press},
 address = {New York, NY, USA}
 }

@INPROCEEDINGS{Valentino01:MultiLevelRef,
  AUTHOR =       {F. Valentino and A. Ramos and C. Marcos and J. Pryor},
  TITLE =        {A Framework for the Development of Multi-Level Reflective Architectures},
  BOOKTITLE =    {Argentine Symposium on Software Engineering (ASSE)},
  YEAR =         "2001",
  MONTH =        {September}
}

@INPROCEEDINGS{Pryor00:RefAO,
  AUTHOR =       {J. Pryor and N. Bastan and M. Campo},
  TITLE =        {A Reflective Approach to Support Aspect-Oriented Programming in Java},
  BOOKTITLE =    {Argentine Symposium on Software Engineering (ASSE)},
  YEAR =         "2000",
  MONTH =        {September}
}

@INPROCEEDINGS{Pryor03:RefAO,
  AUTHOR =       {Jane Pryor and Claudia Marcos},
  TITLE =        {{Solving Conflicts in Aspect-Oriented Applications}},
  BOOKTITLE =    {Argentine Symposium on Software Engineering (ASSE)},
  YEAR =         "2003",
  MONTH =        {September}
}

@INPROCEEDINGS{Rashid03:AspectRE,
  AUTHOR =       {Awais Rashid and Ana Moreira and Joao Araujo},
  TITLE =        {{Modularisation and Composition of Aspectual Requirements}},
  BOOKTITLE =    {Int'l Conf. on Aspect-Oriented Software Development(AOSD)},
  YEAR =         "2003"
}


@INPROCEEDINGS{AltisenFAOL04:reactive,
AUTHOR = {K. Altisen and F. Maraninchi and D. Stauch},
TITLE = {{Exploring Aspects in the Context of Reactive Systems}},
BOOKTITLE = {Workshop on the Foundations of Aspect-Oriented Languages (FOAL)},
YEAR = 2004
}


@Article{Miller01:aspect-or-prog,
  author =   {Sandra K. Miller},
  title =    {Aspect-Oriented Programming Takes Aim at Software
                  Complexity},
  journal =     {IEEE Computer},
  year =     {2001},
  volume =   {34},
  number =   {4},
  pages =    {18-21},
  month =    {April}
}


@INPROCEEDINGS{Ossher00:hyperspace,
  AUTHOR =       {Harold Ossher and Peri Tarr},
  TITLE =        {{Multi-Dimensional Separation of Concerns and the Hyperspace Approach}},
  BOOKTITLE =    {Proceedings of the Symposium on Software Architectures and Component Technology: The State of the
  Art in Software Development},
  YEAR =         "2000",
  publisher =    "Kluwer"
}

@INPROCEEDINGS{Ossher00:hyperJ,
  AUTHOR =       {Harold Ossher, Peri Tarr},
  TITLE =        {{Hyper/J: Multi-Dimensional Separation of Concerns for Java}},
  BOOKTITLE =    {22nd ICSE},
  YEAR =         "2000"
}

@INPROCEEDINGS{Gray00:UMLConstraints,
  AUTHOR =       {Jeff Gray and Ted Bapty and Sandeep Neema and James Tuck},
  TITLE =        {{Handling Crosscutting Constraints in Domain-Specific Modeling}},
  BOOKTITLE =    {Communications of ACM},
  YEAR =         "2000",
  volume =       {44},
  number =       {10},
  MONTH =        {October}
}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Terminology and Taxonomy for Safety
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@article{Avizienis04:DepTaxonomy,
 author = {A. Avizienis and J.-C. Laprie and B. Randell and C. Landwehr},
 title = {{Basic Concepts and Taxonomy of Dependable and Secure Computing}},
 journal = {IEEE Trans. Dependable and Secure Computing},
 volume = {1},
 number = {1},
 year = {2004},
 pages = {11--33},
 publisher = {IEEE Computer Society Press}
 }

@article{Laprie85:DepTerminology,
 author = {J.-C. Laprie},
 title = {{Dependable Computing and Fault Tolerance : Concepts and Terminology}},
 journal = {Int'l Symposium of Fault-Tolerant Computing},
 volume = {1},
 number = {1},
 month = {June},
 year = {1995},
 pages = {2-11},
 publisher = {IEEE Computer Society Press}
 }

@INPROCEEDINGS{Randell03:fme,
  AUTHOR =       {Brian Randell},
  TITLE =        {{On Failures and Faults}},
  BOOKTITLE =    {Formal Methods (FME)},
  YEAR =         "2003",
  volume =       "2805",
  series =       {LNCS},
  pages =        "18--39",
  publisher =    {Springer-Verlag}
}

@INPROCEEDINGS{SoftwarePRA,
  AUTHOR =       {Bin Li and Ming Li and S. Ghose and C. Smidts},
  TITLE =        {{Integrating software into PRA}},
  BOOKTITLE =    {14th Int'l Symposium on Software Reliability Engineering (ISSRE)},
  YEAR =         "2003",
  pages =        "457 -- 467",
  month =        {Nov}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Model-Based Safety Analysis
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@INPROCEEDINGS{Joshi05:SafeComp,
  AUTHOR =       {A.~Joshi and M.P.E.~Heimdahl},
  TITLE =        {{Model-Based Safety Analysis of Simulink Models Using SCADE Design Verifier}},
  BOOKTITLE =    {SAFECOMP},
  YEAR =         "2005",
  series =       {LNCS},
  publisher =    {Springer-Verlag}
}

@INPROCEEDINGS{Joshi05:Dasc,
  AUTHOR =       {Anjali Joshi and Steven Miller and Michael Whalen and Mats P.E. Heimdahl},
  TITLE =        {{A Proposal for Model-Based Safety Analysis}},
  BOOKTITLE =    {{Proceedings of 24th DASC}},
  YEAR =         "2005",
  month =        "Nov"
}

@MISC{NasaRep:MBSA-Aug05,
  author =       {Anjali Joshi and Michael Whalen and Mats P.E. Heimdahl},
  title =        {Automated Safety Analysis Draft Final Report},
  howpublished = {Report for NASA Contract NCC-01001},
  year =         "2005",
  month =        "August"
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  Mobile Robotics
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



@Misc{pioneer-website,
  key =          {ActivMedia Robotics},
  title =    {ActivMedia Robotics Website},
  note =     {Makers of the Pioneer robot. http://www.activrobots.com/}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  Automatic Programming
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Model Checking
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@INPROCEEDINGS{Rushby06:SEFM,
author={Rushby, J.},
booktitle={Software Engineering and Formal Methods, 2006. SEFM 2006. Fourth IEEE Int'l Conf. on},
title={Harnessing Disruptive Innovation in Formal Verification},
year={2006},
pages={21-30},
keywords={formal verification;theorem proving;evidential tool bus;formal verification;interactive theorem proving;model checking;technological innovations;Collaborative tools;Computer architecture;Computer science;Concrete;Data structures;Formal verification;Laboratories;Refining;Surface-mount technology;Technological innovation},
doi={10.1109/SEFM.2006.24},}

@article{Prasad05:SATVerSurvey,
year={2005},
issn={1433-2779},
journal={Int'l Journal on Software Tools for Technology Transfer},
volume={7},
number={2},
doi={10.1007/s10009-004-0183-4},
title={A survey of recent advances in SAT-based formal verification},
url={http://dx.doi.org/10.1007/s10009-004-0183-4},
publisher={Springer-Verlag},
keywords={Verification; SAT; Model checking; QBF; ATPG},
author={Prasad, Mukul R. and Biere, Armin and Gupta, Aarti},
pages={156-173},
language={English}
}

@PhdThesis{Hagen08:kind,
  author =   {Hagen, G.},
  title =    {Verifying safety properties of Lustre programs: an SMT-based approach},
  school =   {University of Iowa},
  year =     {2008},
  month =    {December},
}

@inproceedings{Kahsai11:kind,
  Author =       {Temesghen Kahsai and Yeting Ge and Cesare Tinelli},
  Title =        {Instantiation-Based Invariant Discovery},
  Booktitle =    {Proceedings of the 3rd NASA Formal Methods Symposium
                  (Pasadena, CA, USA)},
  Editor =       {M. Bobaru and K. Havelundand G. Holzmann and
                  R. Joshi},
  Publisher =    {Springer},
  Pages =        {192--207},
  Series =       {Lecture Notes in Computer Science},
  Volume =       6617,
  Year =         2011,
}

@inproceedings{Kahsai12:kind,
 author = {Temesghen Kahsai and Pierre-Lo\"{\i}c Garoche and Cesare
Tinelli and Mike Whalen},
 title = {Incremental Verification with Mode Variable Invariants in
State Machines},
 booktitle = {Proceedings of the 4th  NASA Formal Methods Symposium (NFM 2012)},
 volume = {7226},
 editor = {Alwyn E. Goodloe and Suzette Person},
 location = {Norfolk, VA, USA},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 pages = {388--402},
 month = {April},
 year = {2012}
}

@InProceedings{Anderson96:model-checking,
  author =   {R.J. Anderson and P. Beame and S. Burns and W. Chan
                  and F. Modugno and D. Notkin and J.D. Reese},
  title =    {Model Checking Large Software Specifications},
  booktitle =    {Proceedings of the Fourth ACM SIGSOFT Symposium on
                  the foundations of Software Engineering
                  (SIGSOFT'96)},
  editor =   {D. Garlan},
  year =     {1996},
  month =    {October},
  pages =    {156--166},
  annote =   {\commentyunja{ Introduces "flattening hierarchical
                  states" }}
}
@article{Chan98:tcas-model-checking,
  author =   {W. Chan and R.J. Anderson and P. Beame and S. Burns
                  and F. Modugno and D. Notkin and J.D. Reese},
  title =    {Model Checking Large Software Specifications},
  journal =  {IEEE Transactions on Software Engineering},
  volume =   {24},
  number =   {7},
  month =    {July},
  year =     {1998},
  pages =    {498-520},
  annote =   {}
}

@Book{McMillan93:model-checking,
  author =   {Kenneth L. McMillan},
  title =    {Symbolic Model Checking},
  publisher =    {Kluwer Academic Publishers},
  year =     {1993}
}

@Article{Clarke86,
  author =   {E. M. Clarke, E.A. Emerson, A.P. Sistla },
  title =    { Automatic Verification of Finite-State Concurrent
                  Systems Using Temporal Logic Specifications},
  journal =  { ACM Transactions on Programming Languages and
                  Systems},
  year =     {1986},
  OPTkey =   {},
  OPTvolume =    {8},
  OPTnumber =    {2},
  month =    {April},
  pages =    {244-263},
  OPTnote =  {},
  annote =   {\commentyunja{It suggests an efficient algorithm for
                  verifying that a finite-state concurrent system
                  meets a specification expressed in temporal
                  logic. Well-defined and clear. It includes less
                  theoretical works, therefore easier to understand
                  essentials.}}
}

@inproceedings{Whalen07:FMICS,
  author    = {Michael W. Whalen and
               Darren D. Cofer and
               Steven P. Miller and
               Bruce H. Krogh and
               Walter Storm},
  title     = {Integration of Formal Analysis into a Model-Based Software
               Development Process},
  booktitle = {FMICS},
  year      = {2007},
  pages     = {68-84},
  ee        = {http://dx.doi.org/10.1007/978-3-540-79707-4_7},
  crossref  = {DBLP:conf/fmics/2007},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/fmics/2007,
  editor    = {Stefan Leue and
               Pedro Merino},
  title     = {Formal Methods for Industrial Critical Systems, 12th Int'l
               Workshop, FMICS 2007, Berlin, Germany, July 1-2, 2007, Revised
               Selected Papers},
  booktitle = {FMICS},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {4916},
  year      = {2008},
  isbn      = {978-3-540-79706-7},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{Whalen05:SoftCement,
    author = {Michael W. Whalen},
    title = {Certificate Management: A Practitioner's Perspective},
    booktitle = {Proceedings of the 1st Workshop on Software
        Certificate Management (SoftCeMent05)},
    month = {November},
    year = {2005},
    publisher = {ACM}
}

@article{Miller10:CACM,
 author = {Miller, Steven P. and Whalen, Michael W. and Cofer, Darren D.},
 title = {Software model checking takes off},
 journal = {Commun. ACM},
 volume = {53},
 number = {2},
 year = {2010},
 issn = {0001-0782},
 pages = {58--64},
 doi = {http://doi.acm.org/10.1145/1646353.1646372},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@InProceedings{Hardin09:Security,
  author = {David Hardin and D. Randolph Johnson and Lucas Wagner and Michael W. Whalen},
  title = {Development of Security Software: A High-Assurance Methodology},
  booktitle = {Proceedings of the 11th Int'l Conf. of Formal Engineering
    Methods (ICFEM 2009)},
  year = {2009},
  month = {December},
  publisher = {Springer Verlag}
}

@inproceedings{Staats10:NFM,
  author = {Matt Staats and Michael W. Whalen and Ajitha Rajan and Mats P.E. Heimdahl},
  title = {Coverage Metrics for Requirements-Based Testing: Evaluation of Effectiveness},
  booktitle = {Proceedings of the Second NASA Formal Methods Symposium},
  publisher = {NASA},
  month = {April},
  year = {2010}
}

@Article{Clarke94:abstraction,
  author =   {E. M. Clarke and O. Grumberg and D. E. Long},
  title =    {Model Checking and Abstraction},
  journal =  {ACM Transaction on Programming Languages and
                  Systems},
  year =     {1994},
  OPTkey =   {},
  volume =   {16},
  number =   {5},
  pages =    {1512--1542},
  month =    {September},
  OPTnote =  {},
  OPTannote =    {}
}
@inproceedings{Barrett96:SVC,
  author =   "C. Barrett and D. Dill and J. Levitt",
  title =    "Validity Checking for Combinations of Theories with
                  Equality",
  booktitle =    "Formal Methods In Computer-Aided Design",
  Editor =   "M. Srivas and A. Camilleri",
  Series =   "Lecture Notes in Computer Science",
  Volume =   "1166",
  Publisher =    "Springer-Verlag",
  month =    "November",
  Year =     1996,
  pages =    "187--201",
  note =     "Palo Alto, California, November 6--8"
}
@InProceedings{Park98:tcas-svc,
  author =   {D.Y.W. Park and J.U. Skakkeb{\ae}k and
                  M.P.E. Heimdahl and B.J. Czerny and D.L. Dill},
  title =    {Checking Properties of Safety Critical
                  Specifications Using Efficient Decision Procedures},
  booktitle =    {Proceeding of FMSP'98: Second Workshop on Formal
                  Methods in Software Practice},
  OPTcrossref =  {},
  OPTkey =   {},
  OPTpages =     {},
  year =     {1998},
  OPTeditor =    {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  OPTaddress =   {},
  month =    {March},
  OPTorganization ={},
  OPTpublisher = {},
  OPTnote =  {},
  OPTannote =    {}
}
@InProceedings{Bensalem96:invariants,
  author =   {S. Bensalem and Y. Lakhnech and H. Saidi},
  title =    {Powerful Techniques for the Automatic Generation of
                  Invariants},
  booktitle =    {Proceedings of the 8th Int'l Conf. on
                  Computer Aided Verification, CAV'96},
  pages =    {323--335},
  year =     {1996},
  editor =   {R. Alur and T.A. Henzinger},
  number =   {1102},
  series =   {LNCS},
  month =    {August},
  publisher =    {Springer Verlag},
  OPTannote =    {}
}
@InProceedings{Park98:invariants,
  author =   {D.Y.W. Park and J.U. Skakkeb{\ae}k and D.L. Dill},
  title =    {Static Analysis to Identify Invariants in {RSML} Specifications},
  booktitle =    {Formal Techniques in Real-Time and Fault Tolerant Systems},
  year =     1998,
  address =  {Lyngby, Denmark},
  month =    {Setember}
}

@article{Clarke96,
  author =   {E. M. Clarke and R. Kurshan},
  title =    {Computer-Aided Verification},
  journal =      {IEEE Spectrum},
  year =     {1996},
  volume =    {33},
  number =    {6},
  pages =     {61-67},
  month =    {June}
}
@InProceedings{Kurshan97,
  author =   {R. Kurshan},
  title =    {Formal Verification in a Commercial Setting},
  booktitle =    {Proceedings of the Design Automation Conf.},
  OPTcrossref =  {},
  OPTkey =   {},
  OPTpages =     {},
  year =     {1997},
  OPTeditor =    {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  OPTaddress =   {},
  month =    {June},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote =      {},
  OPTannote =    {}
}

@book{Holzmann91,
  Author =   "G. J. Holzmann",
  Title =    "Design and validation of computer protocols",
  Publisher =    "Prentice Hall",
  year =     "1991",
  Mark =     "Talking at the LAs Cruses workshop. Working with
                  large state machines."
}

@article{Holzmann85,
  Author =   "G.J. Holzmann",
  Title =    "Tracing Protocols",
  Journal =  "{AT\& T} Technical Journal",
  Year =     "1985",
  Volume =   "64",
  Number =   "10",
  Month =    "December",
  Mark =     "Described a tracer developed. THe tracer seraches
                  the statespece for errors such as deadlock but does
                  not do an exhaustiver search. The approach is not
                  aiming for verification of absence of
                  errors. Instead it tries to find errors as fast as
                  possible. The search (called scatter searching)
                  searches the state space based on certain heuristics
                  aimed at finding some errors fast instead of all
                  errors slowly. The heuristics involve the
                  interleaving, the que sizes, the size of the state
                  space (minimizing) and state cashing. A lot of
                  interesting implementation information. Not that
                  much that can be used for the survey. State-Based
                  model, reachability analysis, tool, state space."
}

@article{Holzmann84,
  Author =   "G.J. Holzmann",
  Title =    "The {P}andora System: {A}n Interactive System for
                  the Design of Data Communication Protocols",
  Journal =  "Computer Networks",
  Year =     "1984",
  Volume =   "8",
  Number =   "2",
  Month =    "",
  Mark =     "A protocol analysis, synthesis, and assessment tool
                  is described. Consistts of a protocol synthesiser, a
                  protocol compiler, a plotter, a real time assesment
                  tool, and a protocol analysis tool. The analyzer can
                  do state space serches for , e.g., deadlock. Not all
                  that interesting. Tool, protocol verifivation,
                  analysis, automated."
}

@article{Holzmann87,
  Author =   "G.J. Holzmann",
  Title =    "Automated Protocol Validation in {A}rgos: Assertion
                  Proving and Scatter Searching",
  Journal =  tse,
  Year =     "1987",
  Volume =   "13",
  Number =   "6",
  pages =    "683--696",
  Month =    "June",
  Mark =     "Describes the language Argos and how that language
                  can be used to analyze protocols. Argos seems to be
                  very CSP like. It is used as a base to generate
                  finite state machines that can be analyzed using his
                  state space caching and scatter searching. The paper
                  describes many algorithms and contains a lot of
                  experimental data about different cach sizes and
                  replacement schemes. Automated analysis, finite
                  state machine, tool, reachability analysis. Good
                  paper for details about their approach."
}


@TechReport{McMillan99:circ,
    Author = {Ken L. McMillan},
    Title = {Circular Compositional Reasoning about Liveness},
    Institution = {Cadence Berkeley Labs},
    Address = {Berkeley, CA 94704},
    Number = {1999-02},
    Year = {1999}
}

@TechReport{McMillan99:compositional,
    Author = {Ken L. McMillan},
    Title = {A Methodology for Hardware Verification using
             Compositional Model Checking},
    Institution = {Cadence Berkeley Labs},
    Address = {Berkeley, CA 94704},
    Number = {1999-01}
}

@article{McMillan00:HWCompVer,
title = "A methodology for hardware verification using compositional model checking ",
journal = "Science of Computer Programming ",
volume = "37",
number = "1�3",
pages = "279 - 309",
year = "2000",
note = "",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/S0167-6423(99)00030-1",
url = "http://www.sciencedirect.com/science/article/pii/S0167642399000301",
author = "K.L. McMillan",
}



@techreport {Heninger78:A7-spec,
  Author =   {K.L. Heninger and J.W. Kallander and J.E. Shore and
                  D.L. Parnas},
  Title =    {{S}oftware {R}equirements for the {A}-7E {A}ircraft},
  Institution =  {Naval Research Laboratory},
  Address =  {Washington, D.C.},
  Number =   {3876},
  Year =     {1978},
  Month =    {November}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% To be sorted
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{viola95,
  author =   {M. Viola},
  title =    {Ontario Hydro's Experience with New Methods for
                  Engineering Safety-Critical Software},
  booktitle =    {Proceedings of SafeComp'95},
  OPTcrossref =  {},
  OPTkey =   {},
  OPTpages =     {},
  year =     {1995},
  OPTeditor =    {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  OPTaddress =   {},
  OPTmonth =     {},
  OPTorganization ={},
  OPTpublisher = {},
  OPTnote =  {},
  OPTannote =    {}
}
@InProceedings{Heitmeyer98:practical,
  author =   {C. Heitmeyer},
  title =    {On the need for ``practical'' formal methods},
  booktitle =    {Proceedings of the Symposium on Formal Techniques
                  for Real-Time Fault-Tolerant Systems (FTRTFT '98)},
  OPTcrossref =  {},
  OPTkey =   {},
  OPTpages =     {},
  year =     {1998},
  OPTeditor =    {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  OPTaddress =   {},
  month =    {September},
  OPTorganization ={},
  OPTpublisher = {},
  OPTnote =  {},
  OPTannote =    {}
}
@Book{Boehm81,
  author =   {B. Boehm},
  ALTeditor =    {},
  title =    {Software Engineering Economics},
  publisher =    {Prentice-Hall},
  year =     {1981},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  address =      {Englewood Cliffs, NJ},
  OPTedition =   {},
  OPTmonth =     {},
  OPTnote =      {},
  OPTannote =    {}
}

@Book{Hetzel88,
  author =   {B. Hetzel},
  ALTeditor =    {},
  title =    {The Complete Guide to Software Testing},
  publisher =    {John Wiley and Sons},
  year =     {1988},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  address =      {},
  OPTedition =   {},
  OPTmonth =     {},
  OPTnote =      {},
  OPTannote =    {}
}

@Article{Tarski36:structures,
  author =   {A. Tarski},
  title =    {Der Wahrheitsbegriff in den Formalisierten Sprachen},
  journal =      {Studia Philosophica 1},
  year =     {1936},
  pages =    {261-405},
  annote =   {}
}


@TECHREPORT{gao92,
  author =       "U.S. General Accounting Office",
  title =        "Mission Critical Systems: Defense Attempting to Address Major Software Challenges",
  institution =  "U.S. General Accounting Office",
  year =         "1992",
  number =       "GAO/IMTEC-93-13",
}



@Article{Kaufmann97,
  author =   {M. Kaufmann and J. Moore},
  title =    {An Industrial Strength Theorem Prover for a Logic Based on Common Lisp},
  journal =      {IEEE Transactions on Software Engineering},
  year =     {1997},
  OPTkey =   {},
  volume =   {23},
  number =   {4},
  pages =    {203-213},
  month =    {April},
  OPTnote =      {},
  OPTannote =    {}
}
@article{Gerhart94,
  author = {S. Gerhart and D. Craigen and T. Ralston},
  title = {Experience with Formal Methods in Critical Systems},
  journal = software,
  pages = {21--39},
  month = jan,
  year = 1994,
  volume="vol-11",
  number="1"
}
@article{Gerhart95,
  author = {S. Gerhart and D. Craigen and T. Ralston},
  title = {Formal Methods Reality Check: Industrial Usage},
  journal = tse,
  pages = {90--98},
  month = "February",
  year = 1995,
  volume="21",
  number="2"
}
@article{Taylor83,
  Author =   "Richard N. Taylor",
  Title =    "A General Purpose Algorithm for Analyzing Concurrent
                  Programs",
  Journal =  "Communications of the ACM",
  Year =     "1983",
  Volume =   "26",
  Number =   "5",
  Month =    "May",
  Pages =    "362-376",
  annote =   {\commentmats{Describes how concurrent programs can
                  be translated to finite state machines representing
                  the synchronization aspects of the program. This
                  representation can then be analyzed in order to
                  detect deadlock and concurrent access to shared
                  variables. Makes some good statements. AN analysis
                  procedure has to be 1) Accurate, 2) It must be easy
                  to find where the analysis is inaccurae, 3) and it
                  has to be efficient. The algorithm suggested is
                  accurate up to the point of symbolic execution (with
                  respect to synchronization errors). The algorith
                  uses the call graph, the scoping information, and
                  the annotated program flow graph to build a
                  concurrecy graph. Discusses some ways of simplifying
                  the analysis. Parcelling can be done if the tasks
                  are independent. He also mentions some more but they
                  are not as well developed as parcelling. Good
                  paper. concurrency, static analysis, finite state
                  machine, reachability, graph.}}
}
@inproceedings{Young88b,
  Author =   "Michal Young",
  Title =    "How to Leave Out Details: Error-Preserving
                  Abstractions of State-Space Models",
  Booktitle =   "Proceedings of the Second Workshop on Software
                  Testing, Verification, and Analysis (TAV 2)",
  Year =  "1988",
  OPTaddress  =  {Banff, Alta, Canada},
  annote =   {\commentmats{defines a set of criteia that has to be
                  satisfied in order to garrantee that a
                  transformation (simplification) is error preserving
                  with respect to a certain property. A transformation
                  must be a total function from state to state, total
                  function from path to path, connection preserving,
                  loop preserving, and order preserving. Loop
                  preserving only applies if infinite loops are an
                  issue. Shows how you can prove that your
                  transformation satisfies these properties. Good
                  paper. References. State space model, State machine,
                  transformation, formal method, simplification,
                  reduction, reachability, error preserving.}}
}
@InProceedings{Wika95:safety-pol,
  author =   {K.G. Wika and J.C. Knight},
  title =    {On the Enforcement of Software Safety Policies},
  booktitle =   {Proceedings of the Tenth Annual Conf. on
                  Computer Assurance (COMPASS'95)},
  year =  {1995},
  OPTaddress = {Gaithersburg, MD},
  pages =    {83--93},
}
@PhdThesis{Wika95:phd-thesis,
  author =   {K.G. Wika},
  title =    {Saefty Kernel Enforcement of Software Safety Policies},
  school =   {University of Virginia},
  year =     {1995},
  month =    {May},
}
@PhdThesis{Jaffe88,
    author = {M.S. Jaffe},
    title = {Completeness, Robustness, and Safety in Real-Time
        Software Requirements and Specifications},
    school = {University of California, Irvine},
    year = {1988}
}
@techreport{Melhart91,
  Author =   "B. E. Melhart",
  Title =    "An External Interaction Model for Specifying
                  requirements of Embedded Software",
  Institution =  "Texas Christian University",
  Year =     "1991",
  Number =   "Draft",
  Month =    "Jan",
  Mark =     ""
}

@inproceedings{Lutz92,
  Author =   "R. R. Lutz",
  Title =    "Analyzing Software Requirements Errors in
                  Safety-Critical, Embedded Systems",
  Booktitle =    {Proceedings of the {IEEE} Int'l Symposium on
                  Requirements Engineering},
  Year =     "1993",
  Month =    "January",
  Pages =    "126--133",
  Mark =     "She performed an empirical study of the error
                  reports for the Voyager and Galileo space probes
                  (the study focuses on system testing). The study
                  focused on the safety-critical errors only and
                  identified their type and their sources. It was
                  concluded that the majority of the errors were
                  Functional and Interface Faults (almost no internal
                  faults) The primary caus of problems was missing
                  requiremenst and misunderstood requirements (seldom
                  problems in implementing a known requirement). these
                  problems are not as apperent when looking at
                  non-safety-critical errors. Errors inserted during
                  requirements and design take longer to find and
                  correct. Errors discovered in the testing phase take
                  longer to correct. Her recommendaqtions: 1. Focus in
                  the interaction between the software and the system
                  2. Identify safety-critical stuff early in the
                  development 3. Use formal specifications. 4. Promote
                  communication between teams 5. Communiacate
                  requirements changes 6. Include requirements for
                  defensive design Very good paper. Backs up Nancy's
                  claims that mopst problems are in the interface and
                  caused by bad requirements. Safety-critical,
                  requirements, errors , interface, communication"
}
@incollection{Goodenough79,
  Author =   "J. B. Goodenough and S. L. Gerhart",
  Title =    "Toward a theory of testing: {D}ata selection
                  criteria",
  Booktitle =    "Current trends in programming methodology",
  Year =     "1979",
  Editor =   "R. T. Yeh",
  Publisher =    "Prentice Hall",
  Mark =     "Tries to give a formal fraqmework for the selection
                  of test data. Introduces the concept of different
                  tests. Ideal-succeds only when a program contains no
                  errors. reliable-concistent in its ability to reveal
                  errors. Valid-refers to the ability to produce
                  meaningful results. Fundamental paper."
}
@article{Butler93,
  Author =   "R. W. Butler and G. B. Finelli",
  Title =    "The Infeasibility of Quantifying the Reliability of
                  Life-Critical Real-Time Software",
  Journal =  tse,
  Year =     "93",
  Volume =   "19",
  Number =   "1",
  Month =    "January",
  Mark =     "The quantification of he reliabiliy of ltra reliable
                  software is infeasible using statistical
                  methods. Does not matter if it is applied to
                  standard software or fault tolerant doftware. ultra
                  reliable < 10^-7, moderate > 10^-7 < 10^-3, low >
                  10^-3. Failures / Hour. Analyzing as black box is
                  infeasible, reliability groth models are
                  infeasible. Testing enough for extrapolation does
                  just nor buy you enough. Acelerated testing does not
                  buy you enough. Fault tolerant software: Independent
                  of version cennot be proven. Good reference
                  list. reliability quantification growth models fault
                  tolerant"
}
@InProceedings{Leveson97:mode-confusion,
  author =   {N.G. Leveson and J.D. Reese and S. Koga and
                  L.D. Pinnel and S.D. Sandys},
  title =    {Analyzing Requirements Specifications for Mode
                  Confusion Errors},
  booktitle =    {Proceedings of the Workshop on Human Error and
                  System Development},
  OPTcrossref =  {},
  OPTkey =   {},
  OPTeditor =    {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  year =     {1997},
  OPTorganization ={},
  OPTpublisher = {},
  OPTaddress =   {},
  OPTmonth =     {},
  OPTpages =     {},
  OPTnote =  {},
  OPTannote =    {}
}
@article{Davis92,
  Author =   "A. M. Davis",
  Title =    "Operational Prototyping: A New Development Approach",
  Journal =  "{IEEE} {S}oftware",
  Year =     "1992",
  Volume =   "6",
  Number =   "5",
  Month =    "September",
  Mark =     "Focuses on tinformation systems. Good discussions of
                  the problems with prototyping. Human, customer
                  issues. Rather soft."
}
@book{Safeware,
  Author =   "Nancy G. Leveson",
  Title =    "{S}afeware: {S}ystem {S}afety and {C}omputers",
  Publisher =    "Addison Wesley",
  year =     "1995",
  Mark =     ""
}
@book{Leveson:STAMP,
  Author =   "Nancy G. Leveson",
  Title =    "System Safety Engineering: Back To The Future",
  Publisher =    "On line publication: \\http://sunnyday.mit.edu/book2.pdf",
  year =     "2002",
  Mark =     ""
}


@TechReport{Buffington01,
    Author = {James M. Buffington, Michael A Niestry, Chi M. Ha },
    Title = {Robust Nonlinear Aircraft Flight Control},
    Institution = {Lockheed Martin Aeronautics Company},
    Address = {Fort Worth, TX 76101},
    Number = {FZM-8690}
}


@Article{Schreck89,
  author =   {G. Schreck and C. Willnow and C. Krause},
  title =    {Task Execuion Simulation of Robot Application
                  Programs},
  journal =  {Information Control Problems in Manufacturing
                  Technology 1989. Selected Papers from the 6th
                  IFAC/IFIP/IFORS/IMACS Symposium},
  year =     {1989},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  OPTnote =  {},
  annote =   {}
}



@InProceedings{Lutz93,
  author =   {R. Lutz},
  title =    {An overview of {REFINE} 2.0},
  booktitle =    {Proceedings of the First {ACM SIGSOFT} Symposium on the Foundations of Software Engineering},
  year =     {1993}
}

@PhdThesis{Melhart90,
  author =   {B.E. Melhart},
  title =    {Specification and Analysis of the Requirements for
                  Embedded Software with an External Interaction
                  Model},
  school =   {University of California, Irvine},
  year =     {1990},
  month =    jul
}
@InProceedings{Leveson83c,
  author =   {N.G. Leveson and T.J. Shimeall and J.L. Stolzy and
                  J.C. Thomas},
  title =    {Designing for Safe Software},
  booktitle =    {Proceedings of the AIAA 21st Aerospace Sciences
                  Meeting},
  year =     {1983},
  pages =    {1--5}
}
@InBook{Rushby89,
  author =   {J. Rushby},
  title =    {Safe and Secure Computing Systems},
  chapter =  {Kernels for Safety?},
  publisher =   {Blackwell Scientific Publications},
  year =  {1989},
  editor =   {T. Anderson},
  pages =    {210-220},
}
@article{Shaw92,
  Author =   "A. C. Shaw",
  Title =    "Communicating Real-Time State Machines",
  Journal =  tse,
  Year =     "1992",
  Volume =   "18",
  Number =   "9",
  Month =    "September",
  pages =    {805--816},
  Mark =     ""
}
@article{Heimdahl96b,
  Author =   "M. P.E. Heimdahl and N.G. Leveson",
  Title =    "{C}ompleteness and {C}onsistency {A}nalysis of
                  {S}tate-{B}ased {R}equirements",
  journal =  {IEEE Transactions on Software Engineering},
  year =     {1996},
  volume =   {22},
  number =   {6},
  pages =    {363-377},
  month =    "June"
}
@InProceedings{Heimdahl96c,
  author =   {M. P.E. Heimdahl and B. C. Czerny},
  title =    {Using {PVS} to Analyze Hierarchical State-Based
                  Requirements for Completeness and Consistency},
  booktitle =   {Proceedings of the IEEE High Assurance Systems
                  Engineering Workshop},
  year =  {1996},
  pages =    {252-262},
  OPTaddress = {Niagra on the Lake, Ontario, Canada},
  OPTannote =   {}
}
@Article{Shostak79:decision,
  author =   {R.E. Shostak},
  title =    {A Practical Decision Procedure for Arithmetic with
                  Function Symbols},
  journal =  {Journal of the ACM},
  year =     {1979},
  OPTkey =   {},
  volume =   {26},
  number =   {2},
  pages =    {351--360},
  OPTmonth =     {},
  OPTnote =  {},
  OPTannote =    {}
}
@Article{Pugh92:dependence,
  author =   {W. Pugh},
  title =    {A Practical Algorithm for Exact Array Dependence
                  Analysis},
  journal =  {Communications of the ACM},
  year =     {1992},
  OPTkey =   {},
  volume =   {35},
  number =   {8},
  pages =    {102--114},
  month =    {August},
  OPTnote =  {},
  OPTannote =    {}
}
@InProceedings{Wolper95:presburger,
  author =   {P. Wolper and B. Boigelot},
  title =    {An Automata Theoretic Approach to Presburger
                  Arithmetic Constraints},
  booktitle =    {Proceedings of Static Analysis Symposium},
  pages =    {21--32},
  year =     {1995},
  OPTnumber =    {983},
  series =   {Lecture Notes in Computer Science},
  month =    {September},
  publisher =    {Springer Verlag},
  OPTannote =    {}
}




@inproceedings{Godefroid92,
  Author =   "P. Godefroid and G.J. Holzmann and D. Pirottin",
  Title =    "State Space Caching Revisited",
  Booktitle =    "Proceedings of the Fourth Workshop on Computer-Aided
                  Verification",
  Year =     "1992",
  pages =    {175--186},
  Mark =     "Described State spece caching. Memory is the
                  limiting factor of most conventional rachability
                  analysis algorithms. Even if you have all the time
                  in the world you are still going to run out of
                  memory. State caching overcomes this problem in a
                  lot of instances. A depth first search is performed
                  and the states are put in the cach. The search looks
                  for duplicates in the cach. If no duplicate is found
                  the new state is put in the cach. If the cach is
                  full an old state is taken out and the new one is
                  put in. In this way we have constant memory use. The
                  rplacement strategy has been varied in
                  experiments. Look this up better. Look up sleep sets
                  better. Limits the number of transitions in the
                  system but not the number of states. This limits the
                  number of duplicates that woill be encountered in
                  the search and makes caching more efficient. State
                  space, state machine, automated analysis, tool,
                  reachability analysis "
}

@inproceedings{Owen03:Lurch,
  Author =   "D. Owen and T. Menzies",
  Title =    "Lurch: a Lightweight Alternative to Model Checking",
  Booktitle = "Proceedings of the 2003 Software Engineering and Knowledge Engineering Conf.",
  Year =     "2003"
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %
        %  Information Survivability
        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@Article{Leveson94:Steam,
  author =   {Nancy G. Leveson },
  title =    {High-Pressure Steam Engines and Computer Software},
  journal =  {IEEE Computer},
  year =     {1994},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {October},
  pages =    {},
  OPTnote =  {},
  annote =   {\commentyunja{This article emphasizes the importance
                  of safe design by comparing the safety issues of
                  Steam Engines in the 19th century with the safety
                  issues caused by computer systems nowadays. It also
                  focuses on the human-computer relationships as a
                  critical factor for the system safety This contains
                  good examples and analogies that make us realize the
                  critical role of software engineers though it
                  doesn't contain any clear solutions.}}
}
@Article{Leveson90,
  author =   {Nancy G. Leveson },
  title =    {The Challenge of Building Process-Control Software},
  journal =  {IEEE},
  year =     {1990},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {November},
  pages =    {},
  OPTnote =  {},
  annote =   {\commentyunja{This article explains the need of
                  different approaches in designing process-control
                  software from those for the traditional
                  data-processing software. For a process-control
                  system, the interrelationships among subsystems and
                  the goal of the overall system should be focused in
                  design. }}
}
@Article{Leveson93,
  author =      {Nancy G. Leveson, Clark S. Turner },
  title  =      {An Investigation of the Therac-25 Accidents },
  journal =      {IEEE Computer},
  year =     {1993},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  pages =    {},
  OPTnote =      {},
  annote  =      {\commentyunja{This article investigated the horrible
                   accidents caused by a medical equipment Therac-25.
                   It describes detail accidents and following actions
                   taken by manufacturers and government. It includes
                   the possible causes and suggestions.
                   The accidents and the improper actions taken by related
                   organizations show how poorely we are prepared for safety
                   critical problems. Though the accidents were happened
                   over 10 years ago, I'm afraid those problems are still
                   remained prevalently.
                   I was really shocked that it happened in US which I
                   assumed one of the most well organized countries. }}
}
@Article{FAST94,
  author =       {T. J. Davis and K. J. Krzeczowski and C. Bergh },
  title  =       {The Final Approach Spacing Tool },
  journal  =     {IFAC Automatic Control in Aerospace },
  year    =      {1994},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  pages =    {},
  OPTnote =      {},
  annote  =      {\commentyunja{This is very good article explaining the
                  process of FAST. It gives detail algorithm of sequencing
                  and many other diagrams explaining the situation in TRACON.
                  I think it is the easiest to understand among other
                  FAST related article.
                  This artical focuses on explaining each components of FAST
                  such as Route analysis and Trajectory Synthesis program,
                  sequencer and Scheduler, conflict resolver, and runway
                  allocator. }}
}
@Article{FAST96,
  author =       {Katharine K.Lee, Thomas J.Davis},
  title  =       {The Development of the Final Approach Spacing Tool :
                  A cooperative controller-engineer design approach },
  journal  =     {Journal of Control Engineering Practice},
  year    =      {1996},
  OPTkey =   {},
  OPTvolume =    {4},
  OPTnumber =    {8},
  month =    {August},
  pages =    {1161-1168},
  OPTnote =      {},
  annote  =      {\commentyunja{This is mostly for testing result of FAST.
                  This paper emphasizes the role of the air traffic controller
                  in FAST development. It also describes the use of the
                  controllers' perspective of the overall system through
                  the development of FAST. It contains the test procedure and
                  organization. However, it's not so helpful to understand
                  the system or environment since the test result focuses
                  only the human aspect. But, it can be a part of Intent
                  specification for test and analysis part.  }}
}
@misc{Simulation:FAST,
  title =    {Simulator Evaluation of the Final Approach Spacing
                  Tool},
  author =   {Thomas J.Davis, Heinz Erzberger, Steven M.Green},
  month =    {May},
  year =     {1990},
  howpublished = {NASA Technical Memorandum 102807,1990},
  annote =   {\commentyunja{ This technical report describes
                  simulation result of FAST with TMA and DA. It says
                  that they are planning to simulate FAST alone in the
                  near future. This also explain the general
                  components and tasks of FAST. The simulation result
                  says increased capacity and decreased controller
                  workload. }}
}
@misc{Simulation:FAST95,
  title =    {The Center-TRACON Automation System : Simulation and
                  Field Testing},
  author =   { Dallas G.Denery and Heinz Erzberger},
  month =    {August},
  year =     {1995},
  howpublished = {NASA Technical Memorandum 110366},
  annote =   {\commentyunja{recent simulation report for FAST }}
}
@InProceedings{Leveson98:cad,
  author =   {N.G. Leveson and J.D. Reese and M.P.E. Heimdahl},
  title =    "{SpecTRM}: A {CAD} System for Digital Automation",
  booktitle =    {Proceedings of the 17th Digital Avionics Systems
                  Conf.},
  OPTcrossref =  {},
  OPTkey =   {},
  OPTpages =     {},
  year =     {1998},
  OPTeditor =    {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  OPTaddress =   {},
  month =    {November},
  OPTorganization ={},
  OPTpublisher = {},
  OPTnote =  {},
  OPTannote =    {}
}
@misc{Leveson98:Intent,
  title =    {Intent Specifications:An Approach to Building
                  Human-Centered Specifications},
  author =   {Nancy G.Leveson},
  annote =   {\commentyunja{The only available report for Intent
                  Specification. It contains the background
                  explanation why Intent Specification is needed and
                  specific examples from TCAS system illustrating the
                  structure and organization of the specification.}}
}

@misc{Leveson98:Deviation,
  title =    {Software Deviation Analysis: A "Safeware" Technique}
                  ,
  author =   {Jon Damon Reese,Nancy G.Leveson},
  annote =   {\commentyunja{ Newly devised safety analysis
                  technique.}}
}

@PHDTHESIS{reese96:thesis,
  author =       "J.~D. Reese",
  title =        "Software Deviation Analysis",
  school =       "University of California, Irvine",
  year =         "1996",
}

@InProceedings{reese97:deviation,
  author =   {J.D. Reese and N.G. Leveson},
  title =    {Software Deviation Analysis: A ``Safeware'' Technique},
  booktitle =    {AIChe 31st Annual Loss Prevention Symposium},
  year =     {1997},
  month =    {March},
}

@InProceedings{reese97:icse-deviation,
  author =   {J.D. Reese and N.G. Leveson},
  title =    {Software Deviation Analysis},
  booktitle =    {Int'l Conf. on Software Engineering},
  year =     {1997},
  month =    {May},
}

@InProceedings{HCW02:ase-deviation,
  author =   {Mats P.E. Heimdahl and Yunja Choi and Mike Whalen},
  title =    {Deviation Analysis via Model Checking},
  booktitle =    {Int'l Conf. on Automatied Software Engineering},
  year =     {2002},
  pages = {37-46},
  month =    {September}
}

@article{Heimdahl05:deviation,
 author = {Heimdahl, Mats P. and Choi, Yunja and Whalen, Michael W.},
 title = {Deviation Analysis: A New Use of Model Checking},
 journal = {Automated Software Engineering.},
 volume = {12},
 number = {3},
 year = {2005},
 issn = {0928-8910},
 pages = {321--347},
 doi = {http://dx.doi.org/10.1007/s10515-005-2642-x},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 }


@misc{Leveson98:CTAS,
  title =    {DFW CTAS Safety Analysis Final Report},
  annote =   {\commentyunja{This final report contains both
                  standard safety analyses and various specific
                  analyses for DFW CTAS such as controller task
                  analysis,mode confusion analysis, deviation
                  analysis, and human factors safety analysis. It also
                  has introductory explanation about intent
                  specification and sample modeling and analysis
                  result for FAST. It is a good source for CTAS system
                  goals and overall constraints.}}
}
@misc{CTAS:Spec,
  title =    {Center-TRACON Automation System Build2 : System
                  Specification},
  month =    {February},
  year =     {1997},
  annote =   {\commentyunja{Specification for CTAS focusing two
                  major operational capabilities :TMA and FAST. This
                  Build2 specification incorporates Passive FAST. It
                  contains very detailed requirements and algorithms
                  for TMA and FAST including interface
                  requirements. It also has a very well explained
                  glossary list. However, the explanation for fuzzy
                  rules for FAST sequencing algorithm is not
                  sufficient to understand.}}
}
@misc{Leveson97:TCAS,
  title =    {Sample TCAS Intent Specification},
  author =   {Nancy G. Leveson},
  annote =   {\commentyunja{ This specification is a 800 page
                  example illustrating the structure and usage of
                  intent specification. Though this is neither a
                  complete specification nor well organized enough to
                  support other complex system, it is the only
                  available example shows what intent specification
                  really is. }}
}
@misc{TCAS,
  Author =   "N. G. Leveson and M. Heimdahl and H. Hildreth and
                  J. Reese",
  Title =    "{TCAS II} {R}equirements {S}pecification"
}
@misc{CTAS:WebFunc,
                   title = {CTAS Functional Description Home},
                   note  = {http://www.ctas-techxfer.com },
                   annote = {\commentyunja{This website contains system
                   top level functional description including CM and DA.
                   The system level description focuses on TMA and FAST.
                   It also contains several slides about CTAS overall
                   system architecture. These slides have good illustrations
                   about system components and architecture.}}
}
@misc{CTAS:WebFunc-system,
  title =    {CTAS Functional Descriptions/system level design},
  note =     {http://www.ctas-techxfer.com/b2/funct\_descr/sys},
  annote =   {\commentyunja{Subsite of CTAS Functional
                  Description. It includes overall description of CTAS
                  functionality, CTAS processes and tools. This
                  documentation is limited to the functionality of TMA
                  and FAST tools that were developed in the earlier
                  stage of the CTAS development.}}
}
@misc{CTAS:WebFunc-pfs,
  title =    {CTAS Functional Descriptions/Profile Selector},
  note =     {http://www.ctas-techxfer.com/b2/funct\_descr/pfs},
  annote =   {\commentyunja{Subsite of CTAS Functional
                  Description. Good resource to understand pfs logic
                  including conflict resolution, runway assignment,
                  and pfs to ts logic along with nice diagrams. }}
}
@misc{CTAS:WebFunc-ra,
  title =    {CTAS Functional Descriptions/Route Analyzer},
  note =     {http://www.ctas-techxfer.com/b2/funct\_descr/ra},
  annote =   {\commentyunja{}}
}
@misc{CTAS:WebFunc-raDraft,
  title =    {Draft Route Analyzer Software Requirements/Design
                  Document for CTAS },
  note =     {http://www.ctas-techxfer.com/b2/srdd/ra\_srdd },
  annote =   {\commentyunja{}}
}
@misc{CTAS:WebFunc-ts,
  title =    {CTAS Functional Descriptions/Trajectory Synthesizer},
  note =     {http://www.ctas-techxfer.com/b2/funct\_descr/ts},
  annote =   {\commentyunja{}}
}
@misc{CTAS:WebFunc-da,
  title =    {CTAS Automation System Build3/Descent Advisor},
  note =     {http://www.ctas-techxfer.com/b3/da/intex.htm},
  annote =   {\commentyunja{}}
}
@misc{CTAS:WebFunc-adaptation,
  title =    {CTAS Functional description/Adaptation },
  note =     {http://www.ctas-techxfer.com/b2/funct\_descr/adap},
  annote =   {\commentyunja{}}
}
@misc{CTAS:WebFunc-cm,
  title =    {CTAS Functional description/communication manager },
  note =     {http://www.ctas-techxfer.com/b2/funct\_descr/cm},
  annote =   {\commentyunja{}}
}
@misc{CTAS:Etc,
  title =    {Design of Center-TRACON Automation System},
  author =   {Heinz Erzberger, Thomas J.Davis, Steven Green},
  note =     {NASA Ames Research Center},
  month =    {May},
  year =     {1993},
  howpublished = {presented at an AGARD meeting on "Machine
                  Intelligence in Air Traffic Management},
  annote =   {\commentyunja{Good paper for overall understanding
                  of CTAS. However, It seems that every articles and
                  papers contains similar descriptions. If you read
                  other papers related with CTAS system, you don't
                  have to read this again. Nothing new. }}
}
@inproceedings{FAST:Test1,
  Author =   {T. J. Davis and D. R. Isaacson and J. E. Robinson III and
              W. den Braven and K. K. Lee and B.Sanford},
  Title =    {Operational Test results of the passive final
                  approach spacing tool},
  Booktitle =    {IFAC 8th Symposium on Transportation Systems 97},
  Year =     {1997},
  annote =   {\commentyunja{This paper describes the objectives,
                  conduct, and results from the operational tests of
                  P-FAST at Dallas/Fort Worth Int'l
                  Airport. It contains test results and
                  analyses. Compared with other test reports, it
                  provides better statistical results and
                  analysis. Compact and clear.}}
}
@inproceedings{FAST:Sequencing,
  Author =   {John E. Robinson III and Thomas J. Davis and Douglas
                  R. Isaacson},
  Title =    {Fuzzy Reasoning-Based Sequencing of arrival aircraft
                  in the terminal area},
  Booktitle =    {AIAA Guidance, Navigation and Control Conf.,
                  New Orleans, LA},
  Year =     {1997},
  annote =   {\commentyunja{Detailed description for sequencing
                  procedure and algorithm of FAST. Design methodology
                  and effectiveness of the sequencing algorithm used
                  by Passive FAST. Need to read again for details of
                  Fuzzy Reasoning -Based sequencing algorithm.}}
}
@inproceedings{FAST:KBRA,
  Author =   {Douglas R. Isaacson and Thomas J. Davis and John E. Robinson
                  III},
  Title =    {Knowledge-Based Runway Assignment for arrival
                  aircraft in the terminal area},
  Booktitle =    {AIAA Guidance,Navigation and control Conf., New
                  Orleans, LA},
  Year =     {1997},
  annote =   {\commentyunja{While FAST:Sequencing focuses on
                  detailed formulation of Fuzzy Sequencing, this paper
                  focuses the process and cycle of sequencing. It
                  contains Runway allocation flowchart, FAST scheduler
                  Cycle, sample evaluation decision tree, and final
                  cycle for runway allocation. Operational test
                  results are included briefly ,too.}}
}
@misc{CTAS:User97,
  title =    {Enabling User Preferences Through Data Exchange },
  author =   {Steven M.Green, Tsuyoshi Goka, David H.Williams},
  note =     {American Institute of Aeronautics and
                  Astronautics,Inc},
  month =    {},
  year =     {1997},
  howpublished = {},
  annote =   {\commentyunja{This paper describes a process, via
                  user-ATM data exchange, for enabling user
                  preferences in an ATM-based system. This is good
                  source for information related with Data Link, --
                  where data link would be used, and difficulties
                  using data link, etc. More information related with
                  data link could be found in the references. }}
}
@misc{TMA:Test97,
  title =    {The challenges of Field Testing the Traffic
                  Management Advisor in an operational Air Traffic
                  Control Facility},
  author =   {Ty Hoang, Harry N.Swenson},
  note =     {NASA Ames Research Center},
  month =    {},
  year =     {1997},
  howpublished = {},
  annote =   {\commentyunja{This paper describes a field evalution
                  of TMA at an operational ARTCC facility. It has nice
                  figure helps us to understand key terminologies. The
                  TMA hardware and software systems are explained
                  nicely and briefly. It also includes detailed data
                  set necessary for TMA. }}
}
@misc{DA:Design88,
  title =    {Design of Automation Tools for Management of Descent
                  Traffic},
  author =   {Heinz Erzberger and William Nedell },
  note =     {NASA Technical Memorandum 101078},
  month =    {December},
  year =     {1988},
  howpublished = {},
  annote =   {\commentyunja{It describes DA procedures and
                  functions respect to human-centered automation
                  concept. It's a good source for detailed
                  human-interface of DA. More detailed algorithm or
                  System centered procedure should be found somewhere
                  else. }}
}
@misc{FMS:Overview,
  title =    {Flight Management System Overview},
  author =   {Mike Dejong, Ranga Desiraju, Gordon Sandell },
  note =     { Smiths Industries, Honeywell Inc., McDonnell
                  Douglas Corp.},
  month =    {April},
  year =     {1994},
  howpublished = {},
  annote =   {\commentyunja{}}
}
@misc{DataLink:Interface,
  title =    {Data Link Ground System standard and interface
                  specification},
  author =   {Cedar Rapids Information Center},
  note =     { Rockwell Int'l-Collins Divisions},
  month =    {December},
  year =     {1994},
  howpublished = {},
  annote =   {\commentyunja{}}
}


%For web site
@misc{PCCIP96:Risk,
  title =    {The President's Commission on Critical
                  Infrastructure Protection},
  note =     {http://www.pccip.gov},
  annote =   {\commentyunja{The PCCIP was formed to advise and
                  assist The president of United States by
                  recommending a national strategy for protectiong and
                  assuring critical infrastructures from physical and
                  cyber threats .}}
}
@misc{Neumann:Risk,
  title =    {Peter Neumann's Home Page},
  note =     {http://www.csl.sri.com/neumann/},
  annote =   {\commentyunja{Peter Neumann has been interested in
                  Security Risks in Computer-Communication
                  Infrastructure for a long time. He is a key member
                  of Survivability Project. }}
}
@misc{SRI:Detect,
  title =    {Intrusion Detection Home Page of CSL},
  note =     {http://www.csl.sri.com/intrusion.html},
  annote =   {\commentyunja{Intrusion Detection is one of the main
                  technologies for secure computing. Intrusion
                  Detection Systems attepmt to identify unauthorized
                  use, misuse, and abuse of computer systems.}}
}
@misc{GCCS:Project,
  title =    {Global Command and Control System},
  note =     {http://spider.osfl.disa.mil/},
  annote =   {\commentyunja{The Global Command and Control System
                  is an automated information system designed to
                  support deliberate and crisis planning with the use
                  of an integrated set of analytic tools and the
                  flexible data transfer capabilities.}}
}
@misc{Virginia:Survivability,
  title =    {Survivability Architecture},
  note =     {http://cs.virginia.edu/~dak7e/survive/home.htm},
  annote =   {\commentyunja{There is a large research group for
                  the information survivability project in University
                  of Virginia. This site is a good resource for the
                  concept of survivability.}}
}
@misc{Telecom:Infrastructure,
  title =    {Telecom Information Resources on the Internet},
  note =     {http://china.si.umich.edu/telecom/labs.html},
  annote =   {\commentyunja{List of telecommunication Research
                  Labs, Testbeds and Projects}}
}
@misc{Banking:Infrastructure,
  title =    { Federal Reserve Board},
  note =     {http://www.bog.frb.fed.us/},
  annote =   {\commentyunja{The Federal Reserve System is the
                  Central bank of the United States.}}
}
@misc{DARPA:Government,
  title =    {Defense Advanced Research Projects Agency},
  note =     {https://www.iso.darpa.mill/},
  annote =   {\commentyunja{The homepage of DARPA}}
}
@misc{CMU:Survivability,
  title =    {Survivable Network Systems :An emerging Dicipline},
  note =     {http://www.cert.org/research/tr13/97tr013title.html},
  annote =   {\commentyunja{Technical Report about the concept and
                  architecture of the Survivability. Software
                  Engineering Institute of Carnegie Mellon University
                  }}
}
@misc{Gov:Infrastructure,
  title =    {IITF:I/information Infrastructure Task Force},
  note =     {http:/www.iitf.nist.gov},
  annote =   {\commentyunja{The president's Information
                  Infrastructure Task Force Home page. This site
                  contains Press Releases and Activity Reports.}}
}
@misc{Galois:SMACCMPilot,
  title =    {SMACCMPilot: An Embedded Systems Software Research Project},
  note =     {http://www.smaccmpilot.org/},
  annote =   {\commentyunja{The SMACCMPilot homepage by Galois.}}
}
@misc{NICTA:SMACCM,
  title =    {The SMACCM project @ NICTA},
  note =     {http://ssrg.nicta.com.au/projects/TS/SMACCM/},
  annote =   {\commentyunja{NICTA'S SMACCM project page.}}
}
@misc{NICTA:eChronos,
  title =    {The eChronos project @ NICTA and Breakaway},
  note =     {http://ssrg.nicta.com.au/projects/TS/echronos/},
  annote =   {\commentyunja{NICTA'S eChronos project page.}}
}
@misc{UCDavis:Security,
  title =    {Compuer Security Laboratory},
  note =     {http://seclab.cs.ucdavis.edu},
  annote =   {\commentyunja{The home page of computer security
                  Laboratory of CS in UCDavis. It contains paper lists
                  related with computer security and some of them are
                  closely related with Survivability issue.} }
}
@misc{SRI:Network,
  title =    {ANCORS:Adaptable Network COntrol and Reporting Syste
                  m},
  note =     {http://www.csl.sri.com/ancors/},
  annote =   {\commentyunja{The homepage of Adaptable Network Con
                  trol and Reporting System. It's a project sponsored
                  by D ARPA. It includes Publications and
                  Presentations.}}
}
@misc{Honeywell:Domain,
  title =    {Domain Specific Software Architectures for GN\&C},
  note =     {http://www.htc.honeywell.com/projects/dssa/},
  annote =   {\commentyunja{DSSA Homepage.It is funded by DARPA a
                  nd related with Evolutionary Design of Complex
                  Software and Distrib uted Intelligent Control and
                  Management. This page is li nked to other useful
                  related homepages such as ARPA-Spon sored DSSA ADAGE
                  Home page ,Software Engineering Institut e for DARSA
                  and many more.}}
}
@misc{MITRE:Infrastructure,
  title =    {Recent Technical Papers},
  note =     {http://www.mitre.org/support/papers},
  annote =   {\commentyunja{List of papers which contains "Air Tr
                  affic Control Modeling }}
}
@misc{SEI:Survivability,
  title =    {Software and System Develpment},
  note =     {http://www.sei.cmu.edu/community/edcs/DOCUMENTS/
                  ITO\_Software\_Programs/index.html},
  annote =   {\commentyunja{This website is a part of SEI homepag
                  e which is supported by DARPAR. It contains slides
                  which ex plain System Development. It mentions
                  suvivability issue. }}
}
@misc{SRI:Intrusion,
  title =    {Intrusion Detection Home Page},
  note =     {http://www.csl.sri.com/intrusion.html},
  annote =   {\commentyunja{Good resources for the detailed recent
                  technologies related with intrusion detection}}
}
@misc{Brief:FAST,
  title =    {Center-TRACON Automation System : Final Approach
                  Spacing Tool},
  note =
                  {http://www.ctas.arc.nasa.gov/project\_description/fast.htm},
  annote =   {\commentyunja{Brief overview for FAST. Good for
                  understanding main functions of FAST in short
                  time.}}
}

@misc{PAS:CTAS,
   title = {Pseudo Aircraft Systems: An ATC Simulation Tool},
   note  = {http://www.ctas.arc.nasa.gov/project\_description/pas.html}
}



@misc{Modes:CTAS,
   title = {Center/ARTCC Mode of Operation},
   note  = {http://www.ctas-techxfer.com/b2/funct\_descr/sys/html/section6.html}
}

@misc{NFDC:CTAS,
   title ={National Flight Data Center},
   note  ={http://www.faa.gov/nfdcata100/110/110splsh.html}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%   Temporal logic
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{Emerson-Halpern,
  author =   {E.A.Emerson and J.Y.Halpern},
  title =    {``Sometimes'' and ``Never'' revisited: On branching time versus linear time},
  journal =  {Journal of the ACM},
  year =     {1986},
  OPTkey =   {},
  OPTvolume =    {33},
  OPTnumber =    {1},
  month =    {},
  pages =    {151-178},
  OPTnote =  {},
  annote =   {\commentyunja{}}
}

@InProceedings{Vardi02,
   title = {Branching vs. Linear Time : Final Showdown},
   author = {Moshe Y. Vardi},
   booktitle = {European Joint Conf.s on Theory and Practice of Software},
   note = {Invited Lecture},
   year = {2001},
   month = {April},
   key = {},
   annote = {\commentyunja{Finally, I found a good paper after the long search and wait!
                           I like the content and the author and mostly the title...
   }}
}

@Article{Tarski,
  author =   {A. Tarski},
  title =    {A lattice-theoretical fixpoint theorem and its applications},
  journal =  {Pacific Journal of Mathematics},
  year =     {1955},
  OPTkey =   {},
  OPTvolume =    {5},
  OPTnumber =    {},
  month =    {},
  pages =    {285-309},
  OPTnote =  {},
  annote =   {\commentyunja{}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%   Constraint Solver                               %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@misc{CLPqr,
   title = { Constraint Logic Programming over Rational or Real},
   author = {},
   note = {Available at http://www.ai.univie.ac.at/clpqr/},
   key = {CLP}
}

@misc{IPTools,
   title = {Commercial Integer Programming Software Systems},
   author = {Alper Atamturk and Martin W.P.Savelsbergh},
   note = {Submitted to Annals of Operations Research, January 2003}
}

@Article{HK2000,
  author =   {Jacob Howe and Andy King },
  title =    {Abstracting numeric constraints with Boolean functions},
  journal =  {Information Processing Letters},
  year =     {2000},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  pages =    {17--23},
  OPTnote =  {},
  annote =   {\commentyunja{Improvement of Constraint programming for
               non-linear constraints using abstraction}}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%             explicit model checking               %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@mastersthesis{king2009,
	author= {Andrew King},
	title = {Distributed Parallel Symbolic Execution},
	school = {Kansas State University},
	year = {2009}
}

@article{ciortea-cloud9,
  title={{Cloud9: A Software Testing Service}},
  author={Ciortea, L. and Zamfir, C. and Bucur, S. and Chipounov, V. and Candea, G.}
}


@InProceedings{Corbett98,
   author = {James C.Corbett},
   title = {Constructing Compact Models of Concurrent Java Programs},
   booktitle = {Int'l Symposium on Software Testing and Analysis},
   pages = {},
   year  = 1998,
   number = {},
   series = {},
   month  = {March},
   annote = {\commentyunja{It addresses few issues related to model checking
          Java programs. It points out three major difficulties as (1) most
          of the variables are fields of heap allocated objects, (2) java threads
          which are dynamic and have indefinite number, and (2) locking mechanism.
          This paper suggests two major approaches to construct compact models
          despite of these problems. Local variable reduction based on stuttering
          invariant is similar to symmetry reduction. Lock reduction is based
          on the constructing Control Flow Graph and the storage structure graph
          and use point analysis to determine which locks protect which variables.
          Still it depends on heuristics. This is part of Bandera project.
          I wonder how JPF deals with these issues.
   }}
}

@Article{HLR94,
  author =   {Nicolas Halbwachs and Fabienne Lagnier and Chirstophe Ratel },
  title =    {Programming and verifying real-time systems by means of the
              synchronous data-flow language LUSTRE},
  journal =  {IEEE Transactions on Software Engineering},
  year =     {1992},
  OPTkey =   {},
  OPTvolume =    {18},
  OPTnumber =    {9},
  month =    {},
  pages =    {785-793},
  OPTnote =  {},
  annote =   {\commentyunja{Brief introduction to LESSER verification tool
             for Lustre. It said it can do both explicit and symbolic
              verification but I don't see exactly how it would perform
              symbolic model checking. I haven't found any literature related
              to it yet. Lesser constructs FSM based on control flows ignoring
              data transitions. So any data predicate such as x > 5 will be
              replaced with a boolean variable and lesser has no idea that
              x > 5 and x < 3 is not impossible. The tool incorperate with
              linear relational analysis package to solve simple problems related
              with that. I think using relational analysis package is more
              efficient than using predicate abstraction using PVS for linear
              predicates. Their approach is quite appealing since we don't need
              to model the system separately for model checking purpose.
  }}
}


@INPROCEEDINGS{anand2007jss,
  title={{JPF-SE}: A Symbolic Execution Extension to {Java} {PathFinder}},
  author={Anand, S. and Pasareanu, C.S. and Visser, W.},
  booktitle={Proc. of 13th TACAS Conf.},
  volume={4424},
  pages={134},
  year={2007},
  publisher={Springer}
}


@Article{HP2000,
  author =   {Klaus Havelund and Thomas Pressburger },
  title =    {Model Checking Java Programs Using Java PathFinder},
  journal =  {Int'l Journal on Software Tools for Technology Transfer},
  year =     {2000},
  OPTkey =   {},
  OPTvolume =    {2},
  OPTnumber =    {4},
  month =    {},
  pages =    {366-381},
  OPTnote =  {},
  annote =   {\commentyunja{This paper includes detailed explanation of how
           Java program is translated into promela without using abstraction.
           The bounded buffer problem is used as an example (this one seems to
           be a popular example showing multi-thread problem). Most operations
           are defined using macros. For the short bounded buffer problem (less
           than 90 lines of code), 27 macros (43 macros including exception
           handling and returning values) are defined. The property in question
           is specified in Java using assertion in "Verify" class.
           Verify.assert(count==6) is an example. The body of Verify class has
           no real importance for the verification since only the call of
           this method will be translated into a corresponding promela assert
           statement. Since these methods can be called wherever statement can
           occur, they call it as "embedded termporal logic". However, only
           assert method is currently supported and I am not sure how they are
           going to express general temporal logic in Java.
           I have four major questions related with JPF.
           (1) Is it really generic translation? The translation example seems
               very problem specific. I would like to see the translation
               definition.
           (2) What is the effect of using so many macros on spin performance?
              There was a report saying that using "inline" in spin is quite
              inefficient.
           (3) What is the benefit of bandera translation into JPF? It seems
              that JPF is less mature than bandera: no abstraction and only
              assert statement for verification. If JPF needs abstraction,
              it would be better to apply the abstraction while translation
              than going through so many intermediate steps.
              Java -> BIR -> Abstraction -> Java ->  promela
              Or, why don't they just use Bandera?
  }}
}

@Book{JavaLanguageSpec,
   author = {James Gosling and Bill Joy and Guy Steele and Gilad Brucha},
   title = {The Java Language Specification},
   publisher = {Addison Wesley},
   year = {2005}
}

@String{pub-ISO                 = "Int'l Organization for
                                  Standardization"}

@String{pub-ISO:adr             = "Geneva, Switzerland"}


@Book{ISO:1998:CPP,
  author =       "{ISO}",
  title =        "{ISO\slash IEC 14882:1998}: {Programming} languages
                 --- {C++}",
  publisher =    pub-ISO,
  address =      pub-ISO:adr,
  pages =        "732",
  day =          "1",
  month =        sep,
  year =         "1998"
}


@InProceedings{HS99,
   author = {Klaus Havelund and Jens Ulrik Skakkebak},
   title = {Applying Model Checking in Java Verification},
   booktitle = {6th SPIN Workshop in connection with FM99},
   pages = {},
   year  = 1999,
   number = {},
   series = {},
   month  = {},
   annote = {\commentyunja{This is the second paper on Java PathFinder to show
         that the JPF works for real programs. They analyzed a game server
         application (Chinese Chess) written in Java. They manually performed
         abstraction on the program, translated the java code to promela and
         verified using SPIN. No major new idea is introduced except some
         explanation about abstraction.
   }}
}

@InProceedings{GP02,
   author = {Dimitra Giannakopoulou and Corina S. Pasareanu and Howard Barringer},
   title = {Assumption Generation for Software Component Verification},
   booktitle = {17th IEEE Int'l Conf. on Automated Software Engineering},
   pages = {3-12},
   year  = 2002,
   number = {},
   series = {},
   month  = {September},
   annote = {\commentyunja{
   }}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%              Integer Programming                  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Misc{LPSOLVE,
  author =   {},
  title =    {Mixed integer/linear programming tool lp\_solve version 3.1},
  howpublished = {ftp://ftp.ics.ele.tue.nl/pub/lp\_solve/
},
  year =     {},
  month =    {}}

@Misc{Mathematica,
  author = {},
  title = {Mathematica},
  howpublished = {http://www.wolfram.com/products/mathematica/index.html},
  year = {},
  month = {}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%              Model Checking                       %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@article{Goering97,
  author={R. Goering},
  title={Model checking expands verification's scope},
  journal={Electronic Engineering Today},
  year={1997},
  month={February},
  volume={},
  number={},
  pages={},
  publisher={},
  annote = {
  }}
}

@InProceedings{BCCZ99,
   author = {A. Biere and A. Cimatti and E. M. Clarke and Y. Zhu},
   title = {Symbolic Model Checking without {BDDs}},
   booktitle = {Tools and Algorithms for the Analysis and Construction of Systems },
   pages = {193-207},
   year  = 1999,
   number = {},
   series = {},
   month  = {May},
   annote = {\commentyunja{
   }}
}


@InProceedings{DAC99,
   author = {Matthew Dwyer and George Avrunin and James Corbett},
   title = {Patterns in Property Specifications for Finite-state Verification},
   booktitle = {Proceedings of the 21st Int'l Conf. on Software
                Engineering},
   pages = {},
   year  = 1999,
   number = {},
   series = {},
   month  = {May},
   annote = {\commentyunja{
   }}
}

@article{polka:fmsd:97,
  author={N. Halbwachs and Y.E. Proy and P. Roumanoff},
  title={Verification of real-time systems using linear relation analysis},
  journal={Formal Methods in System Design},
  year={1997},
  month={August},
  volume={11},
  number={2},
  pages={157--185},
  publisher={Kluwer},
  annote = {\commentyunja{Very good paper to understand how linear relation
       analysis works for verification of systems with linear numeric constraints.
       To be compared with Henzinger et al.'s technique in detail.
  }}
}

@InProceedings{NK2000,
   author = {Kedar S. Namjoshi and Robert P. Kurshan},
   title = {Syntatic Program Transformations for Automatic Abstraction},
   booktitle = {12th Int'l Conf., CAV2000},
   pages = {435-449},
   year  = 2000,
   number = {},
   series = {},
   month  = {July},
   annote = {\commentyunja{Suggests an algorithm to syntactically convert
             predicates to boolean variables, It is along the line with the
             abstract interpretation. It deals with different type of
             constrained data transition systems of ours in the sense that
             it deals with finite non-determinism of control transitions while
             we deal with finite non-determinism of data transitions. It produces a
             tighter abstraction compared to predicate abstraction, but still
             suffers from non-termination problem so that the bound should be set
             to guarantee the termination.}}
}

@InProceedings{PRSM99,
   author = {Amir Pnueli and Yoav Rodeh and Ofer Shtrichman and Michael Siegel},
   title = {Deciding Equality Formulas by Small Domains Instantiations},
   booktitle = {11th Int'l Conf., CAV1999},
   pages = {455-469},
   year  = 1999,
   number = {},
   series = {},
   month  = {July},
   annote = {\commentyunja{Finite domain method for formula of equality logic}}
}

@InProceedings{HB95,
   author = {R. Hojati and R.K. Brayton},
   title = {Automaic datapath abstraction of hardware systems},
   booktitle = {7th Int'l Conf., CAV1995},
   pages = {},
   year  = 1995,
   number = {},
   series = {},
   month  = {July},
   annote = {\commentyunja{Finite domain method for hardware systems}}
}


@InProceedings{CRH01,
   author = {Yunja Choi and Sanjai Rayadurgam and Mats Heimdahl},
   title = {Automatic Abstraction for Model Checking Software Systems with
            Interrelated Numeric Constraints},
   booktitle = {Proceedings of the 9th ACM SIGSOFT Symposium on the
                 Foundations of Software Engineering (ESEC/FSE-9)},
   pages = {164-174},
   year  = 2001,
   number = {},
   series = {},
   month  = {September},
   address = {},
   annote = {\commentyunja{}}
}

@article{CRH:REJounal02,
  author={Yunja Choi and Sanjai Rayadurgam and Mats P.E. Heimdahl},
  title={Toward Automation for Model Checking Requirement Specifications with Numeric Constraints},
  journal={Requirements Engineering Journal},
  year={2002},
  month={December},
  volume={7},
  number={4},
  pages={225--242},
  publisher={Springer},
  annote = {\commentyunja{
  }}
}

@Misc{CHR02,
  author =   {Yunja Choi and Mats P.E. Heimdahl and Sanjai Rayadurgam},
  title =    {Domain Reduction Abstraction},
  howpublished = {Technical Report 02-013. University of Minnesota},
  year =     {2002},
  month =    {April}}

@InProceedings{CH02,
   author = {Y. Choi and M. Heimdahl},
   title = {Model Checking \rsml\ Requirements},
   booktitle = {Proceedings of the 7th IEEE/IEICE Int'l
              Symposium on High Assurance Systems Engineering},
   pages = {109--118},
   address = {Tokyo, Japan},
   year  = 2002,
   number = {},
   series = {},
   month  = {October}
}

@PhdThesis{Choi03:dissertation,
  author =   {Yunja Choi},
  title =    {Toward Automated Verifiaction of Software Specifications with
              Numeric Constraints},
  school =   {University of Minnesota},
  year =     {2003},
  note =     {Draft},
  month =    {}
}

@inproceedings{Bharadwaj:Abstraction,
  Author =   {Ramesh Bharadwaj and Constance Heitmeyer },
  Title =    {Model Checking Complete Requirements Specifications
                  Using Abstraction },
  Booktitle =    {First ACM SIGPLAN Workshop on Automatic Analysis of
                  Software },
  Year =     {1997},
  annote =   {\commentyunja{ This is previous version of
                  [Heitmeyer98]. It includes detailed process how to
                  apply SPIN and SMV to their model. For theoretical
                  explanation, we'd better see [Heitmeyer98]. This
                  paper also includes pros and cons of using SPIN and
                  SMV. Though I don't quite agree with their
                  arguments, it is worth note. About their
                  experimental results, I want to redo it myself to
                  check it again. There are several things I doubt.}}
}

@inproceedings{Bharadwaj97:SateExp,
  Author =   {Ramesh Bharadwaj, Constance Heitmeyer},
  Title =    { Verifying SCR Requirements Specifications Using
                  State Exploration },
  Booktitle =    { First ACM SIGPLAN Workshop on Automatic Analysis of
                  Software },
  Year =     {1997},
  annote =   {\commentyunja { It seems that it is a revised
                  version of [Bharadwaj:Abstraction]. I'm not sure
                  which one was really in inproceedings of the
                  workshop. This paper excludes the arguments about
                  SMV that was in [Bharadwaj:Abstraction] and focuses
                  on SPIN. If you read [Bharadwaj:Abstraction], you
                  don't really need to read this. }}
}
@Article{Holzmann97:SPIN,
  author =   {Gerard J. Holzmann },
  title =    {The Model Checker {\sc SPIN} },
  journal =  {IEEE Transactions on software Engineering },
  year =     {1997},
  OPTkey =   {},
  OPTvolume =    {23},
  OPTnumber =    {5},
  month =    {May},
  pages =    {279--295},
  OPTnote =  {},
  annote =   {\commentyunja{This paper gives an overview of the
                  design and structure of the verifier, reviews its
                  theoretical foundation, and gives an overview of
                  practical applications. It gives ideas how the SPIN
                  works and some clues how we can use it efficiently,
                  but not enough. Examples are mostly about protocols
                  with the least number of inputs and outputs.}}
}

@Inproceedings{Holzmann98:abstraction,
  author =   {Gerard J. Holzmann },
  title =    {Designing Executable Abstractions},
  booktitle = {Formal Methods in Software Practice},
  year =     {1998},
  month =    {March},
  pages =    {},
  note = {Invited paper},
  annote =   {\commentyunja{Some useful examples how to make
                  useful abstractions and its significant effect on
                  performance. Short but useful}}
}
@Article{Heitmeyer98,
  author =   {Constance Heitmeyer and James Kirby Jr. and Bruce
                  Labaw and Myla Archer and Ramesh Bharadwaj },
  title =    { Using Abstraction and Model Checking to Detect
                  Safety Violations in Requirements Specifications },
  journal =  { IEEE Transactions on Software Engineering },
  year =     {1998},
  volume =   {24},
  number =   {11},
  month =    {November},
  pages =    {927-948},
  annote =   {\commentyunja{This paper suggests a way to use model
                  checker for SCR specifications. It suggests 3
                  methods to abstract given specifications. It uses
                  SPIN as its model checker and it is integrated with
                  SCR tool set. For more detail information about how
                  they translate specifications to PROMELA or SMV, see
                  below [Bharadwaj:Abstraction] }}
}
@Article{Clarke94,
  author =   {E. M. Clarke },
  title =    { Model Checking and Abstraction},
  journal =  { ACM Transactions on Programming Languages and
                  Systems},
  year =     {1994},
  OPTkey =   {},
  OPTvolume =    {16},
  OPTnumber =    {5},
  month =    {September},
  pages =    {1512-1542},
  OPTnote =  {},
  annote =   {\commentyunja{It is treated like a bible of model
                  checking in most other model checking papers. It
                  describes a method for using abstraction to reduce
                  the complexity of temporal logic model checking. It
                  gives general concept such as BDDs, CTL and provides
                  substantial theoretical background at the same
                  time.}}
}
@Article{Clark,
  author =   {E. M. Clarke, E.A. Emerson, A.P. Sistla },
  title =    { Automatic Verification of Finite-State Concurrent
                  Systems Using Temporal Logic Specifications},
  journal =  { ACM Transactions on Programming Languages and
                  Systems},
  year =     {1986},
  OPTkey =   {},
  OPTvolume =    {8},
  OPTnumber =    {2},
  month =    {April},
  pages =    {244-263},
  OPTnote =  {},
  annote =   {\commentyunja{It suggests an efficient algorithm for
                  verifying that a finite-state concurrent system
                  meets a specification expressed in temporal
                  logic. Well-defined and clear. It includes less
                  theoretical works, therefore easier to understand
                  essentials.}}
}
@misc{Ohlrich:Temporal,
    title =     { Temporal Logic Model Checking },
    note  =     { Wayne Ohlrich, May 19, 1995},
    annote =    {\commentyunja{It's a good introduction for a beginner in Model
               Checking. It covers most general concepts, problems and some
               approaches in very easy way to understand. It can be used for
               teaching beginners --- not available any more}}
}
@Article{Yang,
   author =      {Jin Yang, Aloysius K. Mok },
   title  =     { Symbolic Model Checking for Event-Driven Real-Time Systems},
   journal =     { ACM Transactions on Programming Languages and Systems},
   year    =      {1997},
  OPTkey =   {},
  OPTvolume =    {19},
  OPTnumber =    {2},
  month =    {March},
  pages =    {386-412},
  OPTnote =      {},
  annote  =      {\commentyunja{Complex and includes lots of theoretical
                 works. Almost like a math paper. Need to read very carefully.
                 It proposes a Synchronous Real-Time Event Logic (SREL) for
                 capturing the formal semantics of synchronous, event-driven
                 real time systems and presents a symbolic model-checking
                 algorithm for SREL. Based on ModeChart and SMV }}
}
@Article{Burch,
  author =   {Jerry R. Burch and Edmund M. Clarke and David E. Long and
                  Kenneth L. McMillan and David L. Dill },
  title =    { Symbolic Model Checking for Sequential Circuit
                  Verification},
  journal =  { IEEE Transactions on Computer-Aided Design of
                  Integrated Circuits and Systems},
  year =     {1994},
  key =   {},
  volume =    {13},
  number =    {4},
  month =    {April},
  pages =    {401-424},
  note =  {},
  annote =   {\commentyunja{It shows how temporal logic medel
                  checking and reachability analysis algorithms can be
                  modified to represent state graphs using BDDs. Many
                  ideas are suggested for finding reachable states and
                  efficient computing. It's clearly defined and has
                  unarguable theoretical support. I guess Clarke has
                  very strong theory background.}}
}
@misc{Rushby:FM,
  title =    { Model Checking and Other Ways of Automating Formal
                  Methods },
  note =     { Position paper for panel on Model checking for
                  Concurrent Programs Software Quality Week, John
                  Rushby },
  annote =   {\commentyunja{I got general ideas about model
                  checking from this short position paper. It has many
                  useful references that I found most of model
                  checking papers from.}}
}
@misc{Rushby:MC,
    title =    { Using Model Checking to Help Discover Mode Confusions and other
                Automation Surprises },
    note  =    { 3rd Workshop on Human Error, Safety, and System Development},
    author = {John Rushby},
    year = {1999 },
    annote =   {\commentyunja{}}
}

@Article{Holzmann,
  author =   {Gerard J. Holzmann },
  title =    { The Model Checker SPIN },
  journal =  { IEEE Transactions on Software Engineering},
  year =     {1997},
  key =   {},
  volume =    {23},
  number =    {5},
  month =    {May},
  pages =    {},
  note =  {},
  annote =   {\commentyunja{One of few well-written SPIN papers
                  that I could find. It covers almost every necessary
                  concepts for using SPIN and includes some examples,
                  but not sufficient}}
}
@inproceedings{Holzmann:Abstraction,
  Author =   {Gerard J. Holzmann },
  Title =    {Designing Executable Abstractions },
  Booktitle =    {Proc. of the 2nd Workshop on Formal Methods
                  in Software Practice},
  Organization = {{ACM}},
  Year =     {1998},
  annote =   {\commentyunja{}}
}
@inproceedings{Archer:Time,
  Author =   {Myla Archer and Constance Heitmeyer },
  Title =    {Verifying Hybrid Systems Modeled as Timed Automata:
                  A case Study },
  Booktitle =    {HART '97 },
  Year =     {1997},
  annote =   {\commentyunja{}}
}
@inproceedings{Halpern:Time,
  Author =   {joseph Y. Halpern, Yoav Shoham },
  Title =    {A Propositional Modal Logic of Time intervals },
  Booktitle =    {The 1st IEEE symposium on Logic in Computer Science
                  },
  Year =     {1986},
  annote =   {\commentyunja{Updated version can be found in
                  Stanford U. web page}}
}
@misc{Archer:Time2,
  title =    { Mechanical Verification of Timed Automata : A case
                  Study },
  note =     { NRL Memorandum Report, Myla Archer, Constance
                  Heitmeyer},
  annote =   {\commentyunja{}}
}
@misc{Alur:Time,
  title =    {Timed Automata},
  note =     { Rajeev Alur, U of Pennsylvania },
  annote =   {\commentyunja{ }}
}

@INPROCEEDINGS{Alur92:hybridautomata,
    author = {Rajeev Alur and Costas Courcoubetis and Thomas A. Henzinger and Pei-Hsin Ho},
    title = {Hybrid Automata: An Algorithmic Approach to the Specification and Verification of Hybrid Systems},
    booktitle = {},
    year = {1992},
    pages = {209--229},
    publisher = {Springer-Verlag}
}

@Article{Timmer,
  author =   {Adwin H. Timmer, Jochen A.G. Jess },
  title =    { Execution Interval Analysis under Resource
                  Constraints },
  journal =  { IEEE },
  year =     {1993},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  pages =    {},
  OPTnote =  {},
  annote =   {\commentyunja{}}
}

@Article{Ghezzi,
  author =   {Carlo Ghezzi, Richard A. Kemmerer },
  title =    { Executing Formal Specifications : the ASTRAL to
                  TRIO Translation Approach },
  journal =  { ACM },
  year =     {1991},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  month =    {},
  pages =    {},
  OPTnote =  {},
  annote =   {\commentyunja{}}
}
@Book{Holzman:Design,
  author =   {Gerard J. Holzmann},
  title =    {Design and Validation of Computer Protocols},
  publisher =    {Prentice Hall Software Series.},
  year =     {1991},
  annote =   {\commentyunja{}}
}

@article{GL94,
  author = {O. Grumberg and D.E.Long},
  title = {Model Checking and Modular Verification},
  journal = {ACM Transactions on Programming Languages and Systems},
  year = {1994},
  volume  = {16},
  number  = {3},
  pages  = {843-871},
  month  = {May}}

@Conf.{ABJN99,
  author = {P.A. Abdulla and A Bouajjani and B. Jonsson and M. Nilsson},
  title = {Handling Global Conditions in Parameterized System Verification},
  booktitle = {Computer Aided Verification},
  year = {1999},
  pages  = {134-145},
  publisher  = {Springer}}

@Conf.{CU98,
  author = {M. Colon and T. Uribe},
  title = {Generating Finite-State Abstractions of Reactive Systems Using Decision Procedures},
  booktitle = {Computer Aided Verification},
  year = {1998},
  pages  = {293-304},
  publisher  = {Springer}}


@Conf.{WB98,
  author = {P. Wolper and B. Boigelot},
  title = {Verifying Systems with Infinite but Regular State Spaces},
  booktitle = {Computer Aided Verification},
  year = {1998},
  pages  = {88-97},
  publisher  = {Springer}}

@Conf.{BLO98,
  author = {S. Bensalem and Y. Lakhnech and S. Owre},
  title = {Computing Abstractions of Infinite State Systems Compositionally and Automatically},
  booktitle = {Computer Aided Verification},
  year = {1998},
  pages  = {319-331},
  publisher  = {Springer }}


@Conf.{DGG93,
  author = {D. Dams and O.Grumberg and R. Gerth},
  title = {Generation of reduced models for checking fragments of CTL},
  booktitle = {Computer Aided Verification},
  year = {1993},
  pages  = {479-490},
  publisher  = {Springer Verlag}}

@article{CW96,
  author = {Edmund M. Clarke and Jeannette Wing and et al.},
  title = {Formal Methods: State of the Art and Future Directions},
  journal = {ACM Computing Surveys},
  year = {1996},
  volume  = {28},
  number  = {4},
  pages = {626-643},
  month  = {December}}

@Conf.{MCFSU98,
  author = {Z. Manna and M. Colon and B. Finkbeiner and H. Sipma and T. Uribe},
  title = {Abstraction and Modular Verification of Infinite-State Reactive Systems},
  booktitle = {Requirements Targeting Software and Systems Engineering (RTSE), LNCS},
  year = {1998},
  publisher  = {Springer Verlag}}

@Conf.{CABN97,
  author = {W. Chan and R. Anderson and P. Beame and D. Notkin},
  title = {Combining Constraint Solving and Symbolic Model Checking for a Class of Systems with Non-linear
  Constraints},
  booktitle = {Computer Aided Verification},
  year = {1997},
  pages  = {316-327},
  publisher  = {Springer Verlag}}

@Conf.{EN98,
  author = {E. Emerson and K. Namjoshi},
  title = {On Model Checking for Non-Deterministic Infinite-State Systems},
  booktitle = {Thirteenth Annual IEEE Symposium on Logics in Computer Science},
  year = {1998},
  organisation  = {IEEE Computer Society},
  pages  = {70-80}}

@Conf.{BGP97,
  author = {Tevfik Bultan and Richard A. Gerber and William Pugh},
  title = {Symbolic Model Checking of Infinite State Systems Using Presburger Arithmetic},
  booktitle = {Computer Aided Verification},
  year = {1997},
  pages = {400-411},
  publisher  = {Springer Varlag}}

@article{BGP99,
  author = {Tevfik Bultan and Richard A. Gerber and William Pugh},
  title = {Model-Checking Concurrent Systems with Unbounded Integer Variables: Symbolic Representations,
  Approximations, and Experimental Results},
  journal = {ACM Transactions on Programming Languages and Systems},
  year = {1999},
  volume  = {21},
  number  = {4},
  pages  = {747-789},
  month  = {July}}

@Conf.{BGL98,
  author = {Tevfik Bultan and Richard Gerber and Christopher League},
  title = {Verifying Systems with Integer Constraints and Boolean Predicates: A Composite Approach},
  booktitle = {ISSTA},
  year = {1998},
  organisation  = {ACM}}

@article{SUM99,
  author = {H. Sipma and T. Uribe and Z. Manna},
  title = {Deductive Model Checking},
  journal = {Formal Methods in Systems Design},
  year = {1999},
  volume  = {15},
  number  = {1},
  pages  = {49-74},
  month  = {July}}

@article{LGSBB95,
  author = {C. Loiseaus and S. Graf and J. Sifakis and A. Bouajjani and S. Bensalem},
  title = {Property Preserving Abstractions for the Verification of Concurrent Systems},
  journal = {Formal Methods in Systems Design},
  year = {1995},
  volume  = {6},
  number  = {1},
  pages  = {11-44},
  month  = {Jan.},
  note  = {Netherlands}}

@Conf.{Y89,
  author = {Michal Young},
  title = {Rethinking the Taxonomy of Fault Detection Technique},
  booktitle = {11th Int'l Conf. on Software Engineering},
  year = {1989},
  pages  = {53-62},
  publisher  = {IEEE Computer Society}}



@Conf.{PH97,
  author = {A.Pardo and G. Hachtel},
  title = {Automatic Abstraction Technique for Propositional u-calculus Model Checking},
  booktitle = {Computer Aided Verification},
  year = {1997},
  pages  = {12-23},
  publisher  = {Springer-Verlag}}

@Conf.{DF95,
  author = {J. Dingel and T. Filkorn},
  title = {Model checking for infinite state systems using data abstraction, assumption-commitment style reasoning
  and theorem proving},
  booktitle = {Computer Aided Verification},
  year = {1995},
  pages  = {54-69}}

@Conf.{DGDHKP94,
  author = {D. Dams and R. Gerth and G. Dohmen and R. Herrmann and P. Kelb and H. Pargmann},
  title = {Model Checking using adaptive state and  data abstraction},
  booktitle = {Computer Aided Verification},
  year = {1994},
  pages  = {455-467},
  publisher  = {Springer-Verlag}}

@Conf.{KV98,
  author = {O. Kupferman and M.Y. Vardi},
  title = {Modular Model Checking},
  booktitle = {Int'l Symposium, COMPOS'97},
  year = {1998},
  pages  = {381-401},
  publisher  = {Springer-Verlag},
  note  = {Revised Lectures}}

@article{BG99,
  author = {B. Boigelot and P. Godefroid},
  title = {Symbolic Verification of Communication Protocols with Infinite State Spaces using {QDDs}},
  journal = {Formal Methods and System Design},
  year = {1999},
  volume  = {14},
  number  = {3},
  pages  = {237-255},
  month  = {May}}

@article{K76,
  author = {R.M.Keller},
  title = {Formal Verification of Parallel Programs},
  journal = {Communications of the ACM},
  year = {1976},
  month  = {July}}



@InProceedings{VPP2000,
  author =   {Willem Visser and SeungJoon Park and John Penix},
  title =    {Using Predicate Abstraction to Reduce Object-Oriented Programs
                  for Model Checking},
  booktitle =   {Proceedings of the Third ACM Workshop on Formal Methods in Software Practice},
  pages =    {3--12},
  year =     {2000},
  OPTeditor =   {Mats P.E. Heimdahl},
  month =    {August},
  OPTpublisher = {ACM Press}
}


@InProceedings{WG93,
  author =   {P. Wolper and P. Godefroid},
  title =    {Partial-order methods for temporal verification},
  booktitle =   {CONCUR'93},
  pages =    {233--246},
  year =     {1993},
  volume =   {715},
  series =   {LNCS},
  publisher =    {Springer-Verlag}
}


@Article{DHZ2000,
  author =   {John Hatcliff and Matthew B. Dwyer and Hongjun Zheng},
  title =    {Slicing Software for Model Construction},
  journal =     {Higher-Order and Symbolic Computation},
  year =     {2000},
  volume =   {13},
  number =   {4},
  pages =    {315--353},
  month =    {December}
}

@InProceedings{GanHNOT-CAV-04,
  author =	 {Harald Ganzinger and George Hagen and Robert
                  Nieuwenhuis and Albert Oliveras and Cesare Tinelli},
  title =	 {{DPLL(T)}: Fast Decision Procedures},
  booktitle =	 {Proceedings of the 16th Int'l Conf. on
                  Computer Aided Verification, CAV'04 (Boston,
                  Massachusetts)},
  pages =	 {175-188},
  year =	 2004,
  editor =	 {R.~Alur and D.~Peled},
  volume =	 3114,
  series =	 {Lecture Notes in Computer Science},
  publisher =	 {Springer},
  url =          {ftp://ftp.cs.uiowa.edu/pub/tinelli/papers/GanHNOT-CAV-04.pdf},
}


@inproceedings{KahGT-NFM-11,
  Author =	 {Temesghen Kahsai and Yeting Ge and Cesare Tinelli},
  Title =	 {Instantiation-Based Invariant Discovery},
  Booktitle =	 {Proceedings of the 3rd NASA Formal Methods Symposium
                  (Pasadena, CA, USA)},
  Editor =	 {M. Bobaru and K. Havelundand G. Holzmann and
                  R. Joshi},
  Publisher =	 {Springer},
  Pages =	 {192--207},
  Series =	 {Lecture Notes in Computer Science},
  Volume =	 6617,
  Year =	 2011,
}

@misc{cadenceSMV,
   title = {{Symbolic Model Verifer (SMV) - Cadence Berkeley Laboratories
                   Version}},
    author = {Kenneth L. McMillan},
   note  = {Available at http://www-cad.eecs.berkeley.edu/\~{}kenmcmil/smv},
   key =  {SMV}
}

@InProceedings{EL85,
   title = {{ Modalities for Model Checking: Branching Time Strikes Back}},
   author = {Allen Emerson, Chin-Laung Lei},
   booktitle = {Twelfth Annual ACM Symposium on Principles of Programming
               Languages},
   pages = {84-96},
   year  = 1985,
   number = {},
   series = {},
   month  = {January},
   annote = {\commentyunja{to read}}
}

@InProceedings{LP85,
   title = {{Checking That Finite State Concurrent Programs Satisfy
             Their Linear Specification}},
   author = {Orna Lichtenstein, Amir Pnueli},
   booktitle = {Twelfth Annual ACM Symposium on Principles of Programming
               Languages},
   pages = {97-107},
   year  = 1985,
   number = {},
   series = {},
   month  = {January},
   annote = {\commentyunja{to read}}
}

@Article{BCG88,
  author =   {M. C. Browne, E. M. Clarke, O. Grumberg},
  title =    {Characterizing Finite Kripke Structures in
                   Porpositional Temporal Logic},
  journal =     {Theoretical Computer Science},
  year =     {1988},
  volume =   {59},
  number =   {},
  pages =    {115--131},
  month =    {},
  annote =       {\commentyunja{to read}}
}

@InProceedings{HP93,
   title = {{Synchronous Observers and the Verification of Reactive Systems}},
   author = { Nicolas Halbwachs, Fabienne Lagnier, Pascal Raymond},
   booktitle ={Third Int'l Conf. on Algebraic Methodology and
                Software Technology, AMAST'93, Workshops in Computing},
   pages  ={},
   year   = 1993,
   number = {},
   series = {},
   month  = {June},
   annote = {\commentyunja{introduce "observer" concept to represent assumptions
              about the environment. One of few papers that concern environment
              assumptions in verification. Most of proplems addressed in the paper
              are caused by the event-based specification style}}
}

@INPROCEEDINGS{islip93,
      AUTHOR={N. Halbwachs and J.-C. Fernandez and A. Bouajjanni},
      TITLE={An executable temporal logic to express safety properties
            and its connection with the language Lustre},
      BOOKTITLE={Sixth Int'l Symp. on Lucid and Intensional
               Programming, ISLIP'93, Quebec},
      MONTH={April },
      YEAR= 1993
   }

@Article{HNSY94,
  author =   {Thomas Henzinger and Xavier Nicollin and Joseph Sifakis and Sergio Yovine},
  title =    {Symbolic Model Checking for Real-time Systems},
  journal =     {Information and Computation},
  year =     {1994},
  volume =   {111},
  number =   {},
  pages =    {193--244},
  month =    {},
  annote =   {\commentyunja{To be read again. Complete explanation about
                 how to deal with real time systems in symbolic way.
                 This provides us more intuitive explanation on timing issues than
                 that of AH97. Read this before going to AH97.
             }}
}

@InProceedings{GS97,
    title = {{Construction of abstract state graphs with PVS}},
    author = {Susanne Graf and Hassen Saidi},
    booktitle = {Proceedings of the Computer Aided Verification(CAV 1997)},
    pages  = {72-83},
    year   = {1997},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{This is the original paper about predicate
           abstraction. It constructs state transition graph with the aid of
           PVS. The construction is based on strongest postcondition and weakest
           precondition of predication transformation to compute the successor
           states. Since computing the strongest postconditions is difficult and
           costly, it uses upper approximation of the postcondition to represent
           a successor state in an abstract machine. PVS is used to determine
           boolean values of each monomial B_i representing all concrete states
           satisfying the predicate Pi_i. PVS checks the validity of implications
           for determining each boolean values.
           It is supposed to be automatic, but PVS may fail to prove the
           validity for various reasons. Different abstraction is suggested to
           increase the precision as well as refinements for the state graph.
           See "BM01" for automatic refinement strategy when PVS fails to
           prove the validity.
           *** Read again for complete understanding of details.
    }}
}

@Article{BM01,
  author =   {Thomas Ball and Rupak Majumdar and Todd Millstein and Sriam K. Rajamani},
  title =    {Automatic Predicate Abstraction of C Programs},
  journal =  {SIGPLAN Notices (ACM Special Interest Group on Programming Languages)},
  year =     {2001},
  volume =   {36},
  number =   {5},
  pages =    {203--213},
  month =    {May},
  annote =   {\commentyunja{First attempt to automate the predicate abstraction
               for C programs. The paper is rather programming language side but
               has interesting points in using theorem prover for the automation. Their
               optimization approaches are worth to look at for our approach.
               More interesting aspect of this work is in its automatic refinement
               of the predicate abstraction, though there is no guarantee that the
               refinement process will converge.
               The major problem of this approach is the exponetial number of calls to
               the theorem prover. The case study reveals that only 73 lines of C code with 7
               predicates requires 26769 times of calls to theorem prover and the
               overall runtime costs 747 seconds. Also, the set of predicate is
               an input file that need to be manually defined.
             }}
}



@misc{NuSMV,
    title = {{The NuSMV Toolset: Users Manual}},
    author = {},
    note = {Available at http://nusmv.fbk.eu/},
    year = 2005,
    key = {NuSMV}
}


@misc{CMUSMV,
    title = {{Formal Methods - Model Checking}},
    author = {},
    note = {Available at http://www-2.cs.cmu.edu/~modelcheck/},
    key = {NuSMV}
}

@Inproceedings{Rushby2000,
  Author =   {John Rushby},
  Title =    {Theorem Proving for Verification},
  Booktitle =    {Modeling and Verification of Parallel Processes},
  Year =     {2000},
  annote =   {\commentyunja{There is some good thinking about how we
         automatically assure a given abstraction is a sound abstraction.
         Basically, its automated abstraction is a predicate abstraction
         using PVS. Though, the manual and automated  abstraction examples for
         the bakery algorithm is very helpful to understand how it actually
         applies.
  }}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%       Model Checking Abstraction                  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@misc{ModelCheckingSchool-Abstraction,
    title = {{Abstraction in Model Checking}},
    author = {Michael Huth},
    note = {Lecture at the 2nd Int'l School on
            Formal Methods for the Design of
            Computer, Communication and Software Systems:
            Model Checking. Available at http://www.sti.uniurb.it/events/sfm02mc/programma.html},
    key = {Abstraction}
}

@InProceedings{HJM02,
   author = {Thomas A. Henzinger and Ranjit Jhala and Rupak Majumdar and
             Rupak Majumdar},
   title = {Lazy Abstraction},
   booktitle = {Proceedings of the 29th Symposium on Principles of Programming
                Languages},
   pages = {58-70},
   year  = 2002,
   number = {},
   series = {},
   month  = {January},
   annote = {\commentyunja{This paper suggests more efficient on-the-fly
            predicate abstraction with refinement.  The general idea
            is similar to that of 'BM01' but the contribution is that we
            don't need to rebuild the entire abstract structure when we
            refine the abstraction. Also, this one requires less human
            intervention than that of 'BM01'. The authors are participant
            of the BLAST group in U of Berkeley and they are co-working with
            the SLAM group at MS research where the 'BM01' paper came from.
            It seems that research on predicate abstraction has been quite
            active and made big progress in terms of automation and
            refinement. However, it still has the termination problem like
            any other dynamic symbolic abstraction techniques. Authors
            show some performance data of applying the technique to some
            c programs.
            Is everybody going for dynamic refinement?  It seems so.
   }}
}

@Conf.{mockus2009test,
  title={Test coverage and post-verification defects: A multiple case study},
  author={Mockus, A. and Nagappan, N. and Dinh-Trong, T.T.},
  booktitle={Proceedings of the 2009 3rd Int'l Symposium on Empirical Software Engineering and Measurement},
  pages={291--301},
  year={2009},
  organization={IEEE Computer Society}
}

@article{kim2009concolic,
  title={Concolic testing of the multi-sector read operation for flash memory file system},
  author={Kim, M. and Kim, Y.},
  journal={Formal Methods: Foundations and Applications},
  pages={251--265},
  year={2009},
  publisher={Springer}
}

@Conf.{namin2009influence,
  title={The influence of size and coverage on test suite effectiveness},
  author={Namin, A.S. and Andrews, J.H.},
  booktitle={Proc. of the 18th Int'l Symp. on Software Testing and Analysis},
  year={2009},
  organization={ACM}
}


@InProceedings{HJMNSW02,
   author = {Thomas A. Henzinger and Ranjit Jhala and Rupak Majumdar and
             George C. Necula and Gregoire Sutre and Westley Weimer},
   title = {Temporal-Safety Proofs for Systems Code},
   booktitle = {Proceedings of the 14th Int'l Conf. on Computer Aided Verification},
   pages = {526-538},
   year  = 2002,
   number = {},
   series = {},
   month  = {July},
   annote = {\commentyunja{
   }}
}


@InProceedings{CGJLV00,
   author = {Edmund Clarke and Orna Grumberg and Somesh Jha and Yuan Lu and Helmut Veith},
   title = {Counterexample-Guided Abstraction Refinement},
   booktitle = {Proceedings of the 12th Int'l Conf. on Computer Aided Verification
                },
   pages = {154-169},
   year  = 2000,
   number = {},
   series = {},
   month  = {July},
   annote = {\commentyunja{This paper suggests the new idea of using
            counterexample to refine abstraction. Other techniques related
            to dynamic predicate abstraction with refinement are based
            on this idea (it seems). Authors say that they implemented the
             algorithm in NuSMV. Need to check if it is available to public.
            Want to read it again carefully.
   }}
}

@InProceedings{GQ01,
   author = {Roberto Giacobazzi and Elisa Quintarelli},
   title = {Incompleteness, Counterexamples and Refinements in Abstract Model-Checking},
   booktitle = {Proceedings of the 8th Int'l Static Analysis Symposium
                },
   pages = {},
   year  = 2001,
   number = {},
   series = {},
   month  = {July},
   annote = {\commentyunja{To read
   }}
}

@InProceedings{McMillan:Unfolding95,
   author = {K. L. McMillan},
   title = {A Technique of State Space Search Based on Unfoldings},
   booktitle = {Formal Methods in System Design
                },
   pages = {45-65},
   year  = 1995,
   number = {},
   series = {},
   month  = {},
   annote = {\commentyunja{To read
   }}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%            Symbolic Approximation                  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{CC77,
    title = {{Abstract Interpretation : A Unified Lattice Model for Static Analysis of
              Programs by Construction or Approximation of Fixpoints}},
    author = {P.Cousot and R.Cousot},
    booktitle = {Proceedings of 4th ACM Symposium on Principles of Programming Languages},
    pages  = {238--252},
    year   = {1977},
    number = {},
    series = {},
    month  = {January},
    annote = {\commentyunja{Fundamental theory of abstract interpretation.}}
}

@InProceedings{CH78,
    title = {{Automatic discovery of linear restraints among variables of a program}},
    author = {P.Cousot and N.Halbwachs},
    booktitle = {Proceedings of 5th Annual Symp. on Principles of Programming Languages},
    pages  = {84--97},
    year   = {1978},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{suggestion on a widening operator over convex polyhedra}}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%           Bisimulation and Simulation Relation     %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Milner71,
    title = {{An algebraic definition of simulation between programs}},
    author = {R.Milner},
    booktitle = {Proceedings of 2nd Int'l Joint Conf. on Artificial
                 Intelligence},
    pages  = {481--489},
    year   = {1971},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{the first paper talking about simulation relation}}
}

@InProceedings{Park81,
    title = {{Concurrency and automata on infinite sequences}},
    author = {D.Park},
    booktitle = {In 5th GI-Conf. on Theoretical Computer Science},
    pages  = {167--183},
    year   = {1981},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{the first paper talking about bisimulation equivalence}}
}

@InProceedings{SG01,
    title = {{Symmetry and Reduced Symmetry in Model Checking}},
    author = {Prasad Sistla and Patrice Godefroid},
    booktitle = {Proceedings of 13th Conf. on Computer Aided Verification},
    pages  = {},
    year   = {2001},
    number = {},
    series = {},
    month  = {July},
    annote = {\commentyunja{}}
}

@Article{GPS96,
  author =   {Parice Godefroid and Doron Peled and Mark Staskauskas},
  title =    {Using Partial-Order Methods in the Formal Validation of Industrial
              Concurrent Programs},
  journal =  {IEEE Transactions on Software Engineering)},
  year =     {1996},
  volume =   {22},
  number =   {7},
  pages =    {496--507},
  month =    {July},
  annote =   {\commentyunja{
             }}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%      OBDD reorering                                %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@InProceedings{Rudell93,
    title = {{Dynamic Variable Ordering for Ordered Binary Decision Diagrams}},
    author = {Richard Rudell},
    booktitle = {Proceedings of the IEEE/ACM Int'l Conf. on Computer-Aided Design},
    pages  = {42--47},
    year   = {1993},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{}}
}

@InProceedings{JAF98,
    title = {{Sampling Schemes for Computing OBDD Variable Orderings}},
    author = {Jawahar Jain and William Adams and Masahiro Fujita},
    booktitle = {Proceedings of the IEEE/ACM Int'l Conf. on Computer-aided desing},
    pages  = {631--638},
    year   = {1998},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{}}
}

@InProceedings{RMSS98,
    title = {{Approximation and Decomposition of Binary Decision Diagrams}},
    author = {Kavita Ravi and Kenneth L. McMillan and Thomas R. Shiple and Fabio Somenzi},
    booktitle = {Proceedings of the 35th annual Conf. on Design automation Conf.},
    pages  = {445--450},
    year   = {1998},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{}}
}

@InProceedings{BFGHMPS93,
    title = {{Algebraic Decision Diagrams and their Applications}},
    author = {R.I.Bahar and E.A.Frohm and C.M.Gaona and G.D.Hachtel and E.Macili and A.Pardo and F.Somenzi},
    booktitle = {Int'l Conf. on Computer Aided Design},
    pages  = {},
    year   = {1993},
    number = {},
    series = {},
    month  = {November},
    annote = {\commentyunja{}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%           Modular Verification                     %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{AAHM99,
    title = {{Automating Modular Verification}},
    author = {Rajeev Alur and Luca de Alfaro and Thomas A. Henzinger and F.Y.C. Mang},
    booktitle = {Proceedings of 10th Int'l Conf. on Concurrency Theory
                 (CONCUR '99)},
    pages  = {82--97},
    year   = {1999},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{}}
}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%             Hybrid Systems                         %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{AH97,
    title = {{Modularity for Timed and Hybrid Systems}},
    author = {Rajeev Alur and Thomas A. Henzinger},
    booktitle = {Proceedings of the Eighth Int'l Conf. on Concurrency
                 Theory (CONCUR 1997), Lecture Notes in Computer Science},
    pages  = {74--88},
    year   = {1997},
    number = {},
    series = {},
    month  = {},
    annote = {\commentyunja{theoretical definitions on timed hybrid systems.
                  Talk about specifying open systems that interact with external
                  environment. Compositional specification and verification
                  including discrete and continuous time is defined.
                  Various concept, such as nonzenoness, trajectories/traces of a modules,
                  are defined. May want to compare my definition and those for
                  clarification. To be re-read again. }}
}

@Conf.{AHW97,
  author = {Rajeev Alur and Thomas A. Henzinger and Howard. Wong-Toi},
  title = {Symbolic Analysis of Hybrid Systems},
  booktitle = {Proceedings of the36th Annual IEEE Conf. on Decision and Control},
  year = {1997},
  pages  = {702-707},
  annote = {\commentyunja{ Maybe the easiest(and shortest) paper to read among
               hybrid system papers.
               It focuses symbolic algorithms and analysis of linear hybrid automata
               using examples.   }}

}


@Conf.{HW96,
   author = {Thomas Henzinger, Howard Wong-Toi},
   title  = {Using HyTech to Synthesize Control Parameters for a Steam Boiler},
   booktitle = { In Formal Methods for Industrial Applications: Specifying and
                Programming the Steam Boiler Control},
   year   = {1996},
   pages  = {},
   annote = {\commentyunja{Good example that shows
                how hybrid system model checking works. Appendix provides
                HyTech input files for the steam boiler example. }}
}

@InProceedings{HyTech,
  author = {Thomas A. Henzinger and Pei-Hsin Ho},
  title = {{HyTech: The Cornell Hybrid Technology Tool}},
  booktitle = {Hybrid Systems II},
  volume = {999},
  series = { Lecture Notes in Computer Science},
  publisher = {Springer-Verlag},
  year = 1995,
  pages = {265--294}

}

@article{AHH96,
  author = {Rajeev Alur and Thomas A. Henzinger and Pei-Hsin Ho},
  title = {Automatic Symbolic Verification of Embedded Systems},
  journal = {IEEE Transactions on Software Engineering},
  year = {1996},
  volume  = {22},
  number  = {3},
  pages  = {181-201},
  month  = {March}}


@article{ACHHH95,
  author = {R. Alur and C. Courcoubetis and N. Halbwachs and T. Henzinger
            and P. Ho and X. Nicollin and A. Olivero and J. Sifakis
            and S.Yovine},
  title = {The Algorithmic Analysis of Hybrid Systems},
  journal = {Theoretical Computer Science},
  year = {1995},
  volume  = {138},
  number  = {},
  pages  = {3--34},
  month  = {}}

@Inproceedings{Henzinger95,
  Author =   {Thomas A. Henzinger},
  Title =    {The Theory of Hybrid Automata},
  Booktitle = {Theoretical Computer Science 138:3-34, 1995.},
  Year =     {1995},
  annote =   {\commentyunja{gate control example from hybrid systems domain}}
}

@Inproceedings{Halbwachs93,
  Author =   {Nicolas Halbwachs},
  Title =    {Delay analysis in synchronous programs},
  Booktitle = {In proceedings of 5th Int'l Conf. CAV'93},
  Year =     {1993},
  Pages = {333-346},
  annote =   {\commentyunja{good explanation on using linear relation analysis
               based on abstract interpretation
               See polka:fmsd:97 for longer version of this.
  }}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%             Probabilistic Model Checking           %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Inproceedings{Bianco95,
  Author =   {Andrea Bianco and Luca de Alfaro},
  Title =    {Model Checking of Probabilistic and Nondeterministic Systems},
  Booktitle = {Foundations of Software Technology and Theoretical Computer Science},
  Year =     {1995},
  Pages =     {499-513},
  annote =   {\commentyunja{to read
  }}
}

@article{Baier98,
  author = {Christel Baier and Marta Kwiatkowska},
  title = {Model checking for a probabilisitc branching time logic with fairness},
  journal = {Distributed Computing},
  year = {1998},
  volume  = {11},
  number  = {},
  pages  = {125--155},
  month  = {}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%              PVS                                   %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Inproceedings{Archer:TAME,
  Author =   {Myla Archer and Constance Heitmeyer and Steve Sims},
  Title =    {{TAME}: A {PVS} Interface to Simplify Proofs for
                  Automata Models },
  Booktitle =    {User Interfaces for Theorem Provers},
  Year =     {1998},
  annote =   {\commentyunja{}}
}
@inproceedings{Havelund:PVS,
  Author =   {Klaus Havelund and Natarajan Shankar },
  Title =    {Experiments in Theorem Proving and Model Checking
                  for Protocol Verification },
  Booktitle =    {Proceedings of FME },
  Year =     {1996},
  annote =   {\commentyunja{}}
}
@inproceedings{Owre:Tutorial,
  Author =   {S. Owre and J.M. Rushby and N. Shankar and M.K. Srivas },
  Title =    {A tutorial on Using {PVS} for Hardware Verification },
  Booktitle =    {Second Int'l Conf. on Theorem Provers
                  in Circuit Design, Theory, Practice, and Experience},
  Year =     {1994},
  annote =   {\commentyunja{}}
}
@inproceedings{Rajan:PVS,
  Author =   {S. Rajan and N. Shankar and M. K. Srivas },
  Title =    {An Integration of Model Checking with Automated
                  Proof Checking },
  Booktitle =    {proceedings of CAV '95 },
  Year =     {1995},
  annote =   {\commentyunja{}}
}
@inproceedings{Saidi:PVS,
  Author =   {Hassen Saidi and Natarajan Shankar },
  Title =    {Abstract and Model Check while you Prove },
  Booktitle =    {The eleventh Int'l Conf. on
                  Computer-Aided Verification(CAV99) },
  Year =     {1999},
  annote =   {\commentyunja{
  }}
}

@inproceedings{Bensalem:LustrePVS,
  Author =   { S. Bensalem and P. Caspi and C. Parent-Vigouroux and C. Dumas },
  Title =    { A methodology for proving control systems with {L}ustre and {PVS} },
  Booktitle =    {Proceedings of the Seventh Working Conf.
                  on Dependable Computing for Critical Applications (DCCA 7)},
  Address = {San Jose, CA},
  pages =    {89--107},
  publisher = {IEEE Computer Society},
  month =    {January},
  Year =     {1999}
}

@misc{Rushby:Tutorial,
  title =    { A Less Elementary Tutorial for the {PVS}
                  Specification and Verification System },
  note =     { Technical Report CSL-95-10, SRI Int'l,
                  August '96},
  author = {},
  annote =   {\commentyunja{}}
}
@misc{Archer:PVS,
  title =    {Human-Style Theorem Proving Using {PVS} },
  note =     { Presented at TPHOLs '97, Myla Archer and Constance
                  Heitmeyer},
  annote =   {\commentyunja{}}
}


@TechReport{Whalen06:DWM,
  author =   {Michael W. Whalen and Lucas G. Wagner and John D. Innis and Steven P. Miller},
  title =    {ADGS-2100 Adaptive Display \& Guidance System Window Manager Analysis Final Report},
  institution =  {NASA},
  year =     {2006},
  number =   {Contractor Report NASA/CR-2006-213952},
  month =    {February},
}


@TechReport{Parnas91:four-variable,
  author =   {David L. Parnas and Jan Madey},
  title =    {Functional Documentation for Computer Systems
                  Engineering (Volume 2)},
  institution =  {McMaster University},
  year =     {1991},
  number =   {CRL 237},
  address =  {Hamilton, Ontario},
  month =    {September},
  annote =   {See~\cite{Parnas95:four-variable}}
}
@TechReport{Schouwen90:A7,
  author =   {A. J. van Schouwen},
  title =    {The A-7 Requirements Model: Re-examination for
                  Real-Time Systems and an Application to Monitoring
                  Systems},
  institution =  {Queens University},
  year =     {1990},
  number =   {90-276},
  address =  {Hamilton, Ontario},
  annote =   {}
}

@inproceedings{Joshi-DASC03:ModeConfusion,
 Author = {Anjali Joshi and Steve P. Miller and Mats P.E. Heimdahl},
 Title  = {Mode Confusion Analysis of a Flight Guidance System},
 Booktitle = {In Proceedings of 22nd Digital Avionics Systems Conf.(DASC'03)},
 Year = {2003},
 annote = {}
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  Fault Tree Generation & Analysis Papers
%  Automated Safety Artifacts Generation
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Conf.{arcuri10random,
  title={{Formal analysis of the effectiveness and predictability of random testing}},
  author={Arcuri, A. and Iqbal, M.Z. and Briand, L.},
  booktitle={Proceedings of the 19th Int'l symposium on Software testing and analysis},
  pages={219--230},
  year={2010},
  organization={ACM}
}

@inproceedings{Joshi07:AADL-FTG,
 Author = {Anjali Joshi and Steve Vestal and Pam Binns},
 Title  = {Automatic Generation of Static Fault Trees from AADL Models},
 Booktitle = {DSN Workshop on Architecting Dependable Systems (WADS)},
 Year = {2007},
 address =      "Edinburgh",
 annote = {}
 }

@inproceedings{Akerlund06:ISAAC,
 Author = {O.Akerlund and P.Bieber and E.Boede and M.Bozzano and M.Bretschneider and C.Castel and A.Cavallo and
 M.Cifaldi and J.Gauthier and A.Griffault and O.Lisagor and A.Luedtke and S.Metge and C.Papadopoulos and
 T.Peikenkamp and L.Sagaspe and C.Seguin and H.Trivedi and L.Valacca.},
 Title  = {ISAAC, a framework for integrated safety analysis of functional, geometrical and human aspects},
 Booktitle = {In Proceedings of ERTS},
 Year = {2006},
 address =      "Toulouse, France",
 annote = {}
 }

@inproceedings{Bozzano03:FSAP,
 Author = {Marco Bozzano and Adolfo Villafiorita.},
 Title  = {Improving System Reliability via Model Checking: the FSAP / NuSMV-SA Safety Analysis Platform},
 Booktitle = {In Proceedings of SAFECOMP 2003},
 Year = {2003},
 pages =   "49-62",
 address =      "Edinburgh",
 publisher =    "Springer",
 annote = {}
 }

@INPROCEEDINGS{Bozzano03:CaseStudy,
  AUTHOR =       {M. Bozzano and A. Cavallo and M. Cifaldi and L. Valacca and A. Villafiorita},
  TITLE =        {Improving Safety Assessment of Complex Systems: An industrial case study},
  BOOKTITLE =    {In Proceedings of FM},
  YEAR =         "2003",
  pages =        "208-222",
  address =      "Pisa, Italy",
  month =        "September 8-14",
  publisher =    "Springer",
  annote = {}
}

@INPROCEEDINGS{Bozzano03:ESACS,
  AUTHOR =       {M. Bozzano and A. Villafiorita and O. �kerlund and P. Bieber and
                 C. Bougnol and E. B�de and M. Bretschneider and A. Cavallo and C. Castel and
                 M. Cifaldi and A. Cimatti and A. Griffault and C. Kehren and B. Lawrence and
                 A. L�dtke and S. Metge and C. Papadopoulos and R. Passarello and T. Peikenkamp and
                 P. Persson and C. Seguin and L. Trotta and L. Valacca and G. Zacco},
  TITLE =        {ESACS: an integrated methodology for design and safety analysis of complex systems},
  BOOKTITLE =    {Proceedings of ESREL 2003},
  YEAR =         "2003",
  pages =        "237-245",
  month =        "June 15-18",
  publisher =    "Balkema Publishers"
 }

@INPROCEEDINGS{Bozzano03:ESACS-etal,
  AUTHOR =       {M. Bozzano and etal.},
  TITLE =        {ESACS: an integrated methodology for design and safety analysis of complex systems},
  BOOKTITLE =    {Proceedings of ESREL 2003},
  YEAR =         "2003",
  pages =        "237-245",
  month =        "June 15-18",
  publisher =    "Balkema Publishers"
 }

@INPROCEEDINGS{Bozzano03:EO,
  AUTHOR =       {M. Bozzano and A. Villafiorita},
  TITLE =        {Integrating Fault Tree Analysis with Event Ordering Information},
  BOOKTITLE =    {Proceedings of ESREL 2003},
  YEAR =         "2003",
  pages =        "247-254",
  month =        "June 15-18",
  publisher =    "Balkema Publishers",
  annote = {}
}

@INPROCEEDINGS{coudert93:FTA,
  AUTHOR =       {O. Coudert and J. C. Madre},
  TITLE =        {Fault Tree Analysis: 10 20 Prime Implicants and Beyond},
  BOOKTITLE =    {Proceedings of the Annual Reliability and Maintainability Symposium, ARMS'93},
  YEAR =         "1993",
  month =        "January",
  annote = {}
}

@INPROCEEDINGS{coudert93:Primes,
  AUTHOR =       {O. Coudert and J. C. Madre},
  TITLE =        {Implicit and Incremental Computation of Primes and Essential Primes of Boolean Functions},
  BOOKTITLE =    {Design Automation Conf.},
  pages = "36-39",
  year = "1992",
  annote = {}
}

@INPROCEEDINGS{Sullivan99:Galileo,
  AUTHOR =       {Kevin J. Sullivan and Joanne Bechta Dugan and David Coppit},
  TITLE =        {The Galileo fault tree analysis tool},
  BOOKTITLE =    {In Proceedings of the 29th Annual Int'l Symposium on Fault-Tolerant Computing},
  year = "1999",
  month = "June 15-18",
  annote = {}
}

@INPROCEEDINGS{Dugan99:Galileo,
  AUTHOR =       {Joanne Bechta Dugan and Kevin J. Sullivan and David Coppit},
  TITLE =        {Developing a high-quality software tool for fault tree analysis},
  BOOKTITLE =    {In Proceedings of the Int'l Symposium on Software Reliability Engineering},
  year = "1999",
  month = "November 1-4",
  annote = {}
}

@INPROCEEDINGS{Dugan97:DIFTree,
  AUTHOR =       {Joanne Bechta Dugan and Bharath Venkataraman and Rohit Gulati},
  TITLE =        {DIFTree: A software package for the analysis of dynamic fault tree models},
  BOOKTITLE =    {In Proceedings of Annual Reliability and Maintainability Symposium},
  year = "1997",
  month = "January",
  annote = {}
}


@INPROCEEDINGS{Pai02:UMLft,
  AUTHOR =       {G.J. Pai and  J.B. Dugan},
  TITLE =        {Automatic synthesis of dynamic fault trees from UML system models},
  BOOKTITLE =    {13th Int'l Symposium on Software Reliability Engineering (ISSRE)},
  YEAR =         2002,
  pages =        "243- 254",
  address =      "Annapolis, USA"
}


@INPROCEEDINGS{Bieber02:Altarica,
  AUTHOR =       {Pierre Bieber and Charles Castel and Christel Seguin},
  TITLE =        {Combination of Fault Tree Analysis and Model Checking for Safety Assessment of Complex System},
  BOOKTITLE =    {Proceedings of the 4th European Dependable Computing Conf.},
  YEAR =         "2002",
  pages =        "19 - 31",
  publisher =    "Springer-Verlag",
  annote = {}
}

@MISC{Bieber04:AltaricaLessons,
  author =       {P. Bieber and Ch. Bougnol and Ch. Castel and J. P. Heckmann and Ch. Kehren and S. Metge and Ch.
  Seguin},
  title =        {Safety Assessment with Altarica - Lessons learnt based on two aircraft system studies},
  howpublished = {In 18th IFIP World Computer Congress, Topical Day on New Methods for Avionics Certification},
  year =         "2004",
  month =        "August"
}

@INPROCEEDINGS{Liggesmeyer98:AutoFT,
  AUTHOR =       {Peter Liggesmeyer and Martin Rothfelder},
  TITLE =        {Improving System Reliability with Automatic Fault Tree Generation},
  BOOKTITLE =    {In Proceedings of the 28th Annual Int'l Symposium on Fault-Tolerant Computing},
  YEAR =         "1998",
  month =        "June 23-25",
  annote = {}
}

@INPROCEEDINGS{HipHOPS,
  AUTHOR =       {Yiannis Papadopoulos and John A. McDermid},
  TITLE =        {Hierarchically Performed Hazard Origin and Propagation Studies},
  BOOKTITLE =    {In Proceedings of the 18th Int'l Conf., SAFECOMP'99},
  YEAR =         "1999",
  volume =       "LNCS 1698",
  publisher =    "Springer-Verlag "
}

@INPROCEEDINGS{Yiannis01:FT-Simulink,
  AUTHOR =       {Yiannis Papadopoulos and Matthias Maruhn},
  TITLE =        {Model-Based Synthesis of Fault Trees from Matlab-Simulink models},
  BOOKTITLE =    {The Int'l Conf. on Dependable Systems and Networks (DSN'01)},
  YEAR =         "2001",
  month =        "July 01 - 04"
}

@TECHREPORT{Rugina06:AADL-GSPN,
  AUTHOR =       {A.-E. Rugina and K. Kanoun and M. Ka\^{a}niche},
  TITLE =        {A System Dependability Modeling Framework using AADL and GSPNs},
  INSTITUTION =  {LAAS-CNRS},
  YEAR =         "2006",
  number =       "05666",
  month =        "Nov"
}

@INPROCEEDINGS{Giese04:UMLCompDeploy,
  AUTHOR =       {Holger Giese and Matthias Tichy and Daniela Schilling},
  TITLE =        {Compositional Hazard Analysis of UML Component and Deployment Models},
  BOOKTITLE =    {Computer Safety, Reliability, and Security},
  YEAR =         "2004",
  volume =       "3219",
  series =       {LNCS},
  pages =        {166--179},
  publisher =    "Springer",
  annote = {\commentanjali{The paper proposes to support compositional hazard analysis of UML models
  by combining the techniques of failure propagation analysis (based on FPTN introduced
  in~\cite{Fenelon94:SHARD-FPTN}) and
  component-based software engineering. The failure propagations take place at component ports. Special
  deployment ports are used to describe the possible effects of hardware and the deployed components. They consider
  the failure classes (provision, timing and value). To formally model the hazards and failure propagation of
  components, they use Boolean logic with quantifiers. In this approach they can handle cycles due to
  failure propagation between components, by using the results from the paper "A new methodology to handle boolean
  models with loops", and using the fact that their hazard conditions are monotonically increasing. The analysis
  approach consists of - (1) Fault trees for all system hazards are derived: these FTs only refer to the outgoing
  component failures which can contribute to the hazard but do not look into the components and their interactions,
  (2) The propagation of component failure for each component is derived by using the failure propagation
  information of components, (3) Compose the failure propagation information as defined by the component and
  deployment diagrams and employ qualitative and quantitative analysis techniques. This can be followed by a
  refinement phase to perform a more detailed safety analysis. They are starting to add tool suppot in open source
  UML case tool "Fujaba".}}
}

@book{guilford1956fundamental,
  title={Fundamental statistics in psychology and education},
  author={Guilford, J.P. and Fruchter, B.},
  year={1956},
  publisher={McGraw-Hill, New York}
}


@article{Fenelon94:SHARD-FPTN,
 author = {P. Fenelon and J. A. McDermid and M. Nicolson and D. J. Pumfrey},
 title = {Towards Integrated Safety Analysis and Design},
 journal = {ACM SIGAPP Applied Computing Review},
 volume = {2},
 number = {1},
 year = {1994},
 issn = {1559-6915},
 pages = {21--32},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 annote = {\commentanjali{This paper introduces the SHARD technique to safety analysis for software intensive
 systems
    that emphasizes on exploratory safety analysis to help identify unknown failure modes and unknown
    effects. They consider three failure classes (provision, timing and value) and generate "guidewords" which
    suggest the hypothetical failure modes. They also introduce the Failure Propagation and Transformation Notation
    (FPTN) that is used in even some of the recent papers
    (e.g.,~\cite{Giese04:UMLCompDeploy}~\cite{Grunske05:FailurePropagationModels}).
    FPTN modules are connected by the failures
    that propagate between them. Inside each module, there is a list of (1) failure modes that are generated purely
    internally by that module, (2) those failure modes that are unconditionally prevented from propagating further
    by the module, and (3) a set of equations (logical relationships) characterising the relationship between input
    and output failure modes,
    where input failure modes are those to which the component is susceptible and output failure modes are those
    which
    it passes to the environment. The canonical form of these equations is "sum of products" form which is
    isomorphic to the
    minimum cutset form of a fault tree, with the output failure mode being considered as the top level event. Thus
    each FPTN
    module corresponds to an abstraction of a set of fault trees describing a particular component. The failures are
    considered
    to be in a particular domain and in many systems the domain of failure may be changed as it propagates through
    the system.
    To support this "transformation", each failure mode is typed with its domain and in addition to describing
    logical
    relationships between failure modes, the type annotations allow FPTN to describe the changes in failure domain
    which take place.
    The paper also briefly touches upon software Zonal Analysis.}}
}

@article{Grunske05:FailurePropagationModels,
    author = {Lars Grunske and Bernhard Kaiser},
    title = {Automatic Generation of Analyzable Failure Propagation Models from Component-Level Failure
    Annotations},
    journal = {QSIC},
    year = {2005},
    pages = {117--123},
    publisher = {IEEE Computer Society},
    address = {Los Alamitos, CA, USA},
    annote = {\commentanjali{The approch is pretty simple - (1) Construct the FPTN modules
    for all the components in the system, (2) Generate a Component Fault Tree (CFT) for each FPTN module,
    (3) hierarchically construct and connect the input and output failure ports pf the CFTs of all
    components w.r.t. fault propagation between components and the composition hierarchy, (4) analyse the top-level
    CFT (if cycles are detected in the tree, they are manually removed).
    }}
}


@INPROCEEDINGS{Ortmeier04:formosa,
    author =        {Frank Ortmeier and Andreas Thums and Gerhard Schellhorn and Wolfgang Reif},
    title =         {Combining Formal Methods and Safety Analysis - the ForMoSA Approach},
    BOOKTITLE  =    {Integration of Software Specification Techniques for Applications in Engineering},
    YEAR =         "2004",
    volume =       "3147",
    series =       {LNCS},
    pages =        {474--493},
    annote = {\commentanjali{This approch combines the techniques from traditional safety analysis, formal methods
    and statistics and optimization. The key motivation here is that no single techique can produce all the effects
    of a combined approach.  In the ForMoSA methodology, to derive the
    critical components and their failure modes, they do an "informal" FTA based on the informal specification.
    This
    methodology suggests to do FTA independent of the formal model. For the components identified with large number
    of failure modes, they create a "failure-sensitive specification" for those components.
    For building the failure-sensitive specification,
    you first build a chaotic model, which contains all possible combinations of inputs and outputs.
    Specification rules rule out the scenarios that cannot be satisfied. Completeness of the found list of
    failure modes can be shown. Statecharts are used as formal models. Then they build a "functional error model"
    that adds relevant component failures to the functional model. Then one can perform qualitative analysis FTA
    they call
    "Formal FTA". First verify the functional correctness of the functional error model. The starting point
    of formal FTA is the fault tree of traditional FTA. Based on this FT, the formal FTA results in a set of
    temporal formulae which have to be proven correct for the functional error model. If proof obligations are
    proven
    valid then the fault tree is complete -- in effect verifying formally if everything was captured in the
    traditional
    FTA. Then they perform the quantitative analyis, which requires approximation of all primary probabilities.
    They
    identify which of these probability approximations depend on parameters, and identify these as candidates for
    "parameterized probabilities".
    Example is a real world case study - new Elbtunnel in Hamburg.
    }}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  Safety-Critical Software Standards Documents
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{ARP:4761,
  author =   {SAE-ARP4761},
  title =    {Guidelines and Methods for Conducting the Safety
                Assessment Process on Civil Airborne Systems and Equipment},
  publisher =    { SAE Int'l},
  month = {December},
  year =     {1996}
}

@Book{RTCA:DO-178B,
  author =   {RTCA},
  title =    "{DO-178B}: {S}oftware Considerations In Airborne Systems and
                  Equipment Certification",
  publisher =    {RTCA},
  year =     {1992},
  annote =   {\commentmike{Add more here...}}
}
@Book{MOD:00-55,
  title =    {Requirements for Safety Related Software in Defence
                  Equipment, Issue 2},
  publisher =    {UK Ministry of Defence},
  year =     {1997},
  key = "MOD0055"
}

@Book{MOD:00-56,
  title =    {Safety Management Requirements for Defence Systems, Issue 2},
  publisher =    {UK Ministry of Defence},
  year =     {1996},
  key = "MOD0056"
}

@BOOK{SAE:AADL,
  AUTHOR =       {SAE-AS5506},
  TITLE =        {Architecture Analysis and Design Language},
  PUBLISHER =    {SAE},
  YEAR =         "2004",
  month =        "Nov"
}

@BOOK{SAE:AADL-Annexes,
  AUTHOR =       {SAE-AS5506/1},
  TITLE =        {Architecture Analysis and Design Language Annex Volume 1},
  PUBLISHER =    {SAE},
  YEAR =         "2006",
  month =        "June"
}

@Article{Berzins93:specproto,
  author =   {Valdis Berzins and Luqi and Amiram Yehudai},
  title =    {Using Transformations in Specification-Based Prototyping},
  journal =      {IEEE Transactions on Software Engineering},
  year =     {1993},
  volume =   {19},
  number =   {5},
  pages =    {436-452},
  month =    {May},
  annote =   {}
}



@INPROCEEDINGS{EastADL,
  AUTHOR =       {H. L�nn and Tripti Saxena and Mikael Nolin and Martin T�rngren},
  TITLE =        {FAR EAST: Modeling an Automotive Software Architecture Using the EAST ADL},
  BOOKTITLE =    {In ICSE workshop on Software Engineering for Automotive Systems (SEAS)},
  YEAR =         "2004",
  address =      "Edinburgh"
}


@Inproceedings{Vestal:correctness,
  author =   {Steve Vestal},
  title =    { Assuring the Correctness of Automatically Generated
                  Software },
  booktitle =    { AIAA/IEEE Digital Avionics Systems Conf. },
  year =     { 1994 },
  volume =   { 13 },
  pages =    { 111-118 },
  annote =   {\commentmike{This paper discusses mechanisms for
                  increasing confidence in code generated by
                  application generators. He brings to account the
                  need to validate compilers and also analysis
                  tools. His assertion is that it's not practical to
                  assure the correctness of the tools to the levels
                  deemed necessary for safety-critical
                  applications. Thus, his focus is on verifying the
                  correctness of the generated code rather than the
                  tools themselves. His main methods for assuring
                  correctness are: 1. Use formal methods 2. Generate
                  well-structured and human readable outputs
                  3. Preserve structure. Design translators whose
                  outputs preserve the overall structure of the
                  input. Do this in a way that supports fine-grained
                  traceability between objects in the input
                  specification and the generated output 4. Perform
                  multiple validations. Perform as many different
                  kinds of analysis and testing on as many different
                  representations as possible during all phases of
                  development. He makes some interesting points as far
                  as the inputs/outputs of tools; first, that any
                  generated artifacts should be human-readable, and
                  that there should NOT be seperate outputs for a
                  human reviewer and a tool (I guess we're talking
                  about program verifiers here...) Overall, a pretty
                  broad, pretty basic paper.}}
}


@InProceedings{baumann96:parallelZ,
  author =   { Peter Baumann and Karl Lermer },
  title =    {Specifying Parallel and Distributed Real-Time
                  Systems in Z},
  booktitle =    {4th Internal Workshop on Parallel and Distributed
                  Real-Time Systems},
  year =     {1996},
  pages =    {216 to 222},
  annote =   {\miketoread}
}
@Book{SPARK98:semantics,
  author =   {Program Validation Ltd.},
  title =    {Formal Semantics of SPARK},
  publisher =    {Program Validation Ltd.},
  year =     {1998},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =  {},
  annote =   {
  \commentmike{This document presents the formal semantics
  of SPARK Ada, a subset of Ada suitable for use in
  safety-critical systems.  It is a very large specification,
  requiring over 500 pages of Z, and it does not follow Z's
  declaration before use principle, so it cannot be type-checked
  with any of the standard Z tools.

  Without typechecking, the chances of such a large specification
  to be even close to correct are effectively nil.  Therefore,
  this document is only useful as perhaps a guidebook on how
  semantics can be represented in Z for a real language.
  Certainly, it should not be seen as a definitive definition for
  any real Ada compiler.
  }}
}
@Book{Barnes1997:SPARK,
  author =   {John Barnes},
  title =    {High Integrity Ada, The SPARK Approach},
  publisher =    {Addison-Wesley},
  year =     {1997},
  OPTkey =   {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTnote =  {},
  annote =   {\commentmike{ This book describes the SPARK Ada
  programming language, designed for building safety-critical
  applications in Ada.  SPARK removes much of the Ada language
  that can be difficult to compile or use correctly:
  \begin{itemize}
   \item Generic programming (templates)
   \item Threads and synchronization
   \item Recursion
   \item Exception Handling
  \end{itemize}
  \noindent ...and adds an assertion language that can be used to prove
  properties about an Ada program (for example, that it will not
  throw exceptions).
  }}
}



          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
          %
          % General Formal Methods Papers
          %
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@TechReport{Miller99:refinement-techrep,
  author =   {Steven P. Miller},
  title =    {Modeling Software Requirements for Embedded Systems},
  institution =  {Advanced Technology Center, Rockwell Collins, Inc.},
  year =     {1999},
  OPTkey =   {},
  OPTtype =      {},
  OPTnumber =    {},
  OPTaddress =   {},
  OPTmonth =     {},
  note =     {In Progress},
  OPTannote =    {\commentmike{ A very well written paper on a mechanism
                 for creating requirements specifications for embedded
                 systems.  It seems pretty similar to what we do when
                 we write RSML specifications, but it is a more structured
                 approach.  I have a few comments, though.  In terms of
                 reusability, the "class" constructs are inter-dependent
                 enough that I believe it will be difficult to reuse classes
                 in systems that are not in the same immediate family.
                 Also, I thought that the class abstractions were somewhat
                 incomplete; for example, the DOI modes were actually
                 created in the ASW.  It seems that you would place the
                 DOI modes in the DOI class, and then that you should have
                 a mechanism for embedding the DOI class, as is, to be
                 only applicable in the "running" mode of the ASW. }
}
}

@InProceedings{Lawall93:structural-induction,
  author =   { Julia L. Lawall },
  title =    { Proofs by Structural Induction using Partial Evaluation },
  booktitle =    { ACM - PEPM'93 },
  year =     {1993},
  pages =    {155 to 166},
  annote =   {\commentmike{In this paper, the author describes how
              partial evaluation can be used to develop proofs of
              program transformations.  Basically, by encoding
              certain transformations as scheme programs, and
              identifying the different 'shapes' of programs that
              can be passed to these transformations, you can try
              passing a candidate program of each shape to the
              transformation and partially evaluate it.  Then you
              can check the results of the rule against other
              rules for things like: a rule is an inverse of
              another, the rules are associative or transitive,
              etc. If the output of the rules corresponds for each
              program shape, then the rules are shown equivalent.

              They do not discuss the theory behind these proofs
              (i.e., is it sound?), but in the examples, the proofs
              clearly check the properties that the authors were
              interested in.  I'm not exactly sure what the
              'structural induction' part was, other than showing
              equivalence of the structure of the program
              fragments.
  }}
}

@InProceedings{Miller98:wift,
  author =   {Steven P. Miller},
  title =    {The Industrial Use of Formal Methods: Was Darwin Right?},
  booktitle =    {Proceedings of the Second Workshop on Industrial
                  Strength Formal Specification Techniques (WIFT'98)},
  OPTcrossref =  {},
  OPTkey =   {},
  pages =    {153-188},
  year =     {1998},
  OPTeditor =    {},
  OPTvolume =    {},
  OPTnumber =    {},
  OPTseries =    {},
  OPTaddress =   {},
  OPTmonth =     {},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote =      {},
  OPTannote =    {}
}

@InProceedings{Miller98:FGS,
  author =   {Steven P. Miller},
  title =    {Specifying the Mode Logic of a Flight Guidance
                  System in {CoRE} and {SCR}},
  booktitle =   {Proceedings of the Second Workshop on Formal Methods
                  in Software Practice},
  pages =    {44-53},
  year =  {1998},
  OPTaddress =     {Clearwater Beach, Florida, USA},
  month =    {},
  OPTpublisher = {ACM},
  OPTannote =   {}
}

@ARTICLE{Norman85,
  AUTHOR =   {Edwin L. Hutchins and James D. Hollan and Donald
                  A. Norman},
  TITLE =    {Direct Manipulation Interfaces},
  JOURNAL =  {Human--Computer Interaction},
  VOLUME =   {1},
  PAGES =    {311--338},
  YEAR =     {1985}
}
@Book{Lowe71:pc,
  author =   {E.I. Lowe},
  title =    {Computer Control in Process Industries },
  publisher =    {Peregrinus },
  year =     {1971},
  annote =   {}
}
@TechReport{Parnas92:tables,
  author =   {David L. Parnas},
  title =    {Tabular Representations of Relations},
  institution =  {McMaster University},
  year =     {1992},
  OPTkey =   {},
  OPTtype =  {},
  number =   {CLR report No. 260},
  address =  {Hamilton, Ontario},
  month =    {October},
  OPTnote =  { },
  OPTannote =    {}
}




%------More Testing

@article{harman2009testing,
  title={{A theoretical and empirical study of search-based testing: Local, global, and hybrid search}},
  author={Harman, M. and McMinn, P.},
  journal={IEEE Transactions on Software Engineering},
  pages={226--247},
  issn={0098-5589},
  year={2009},
  publisher={Published by the IEEE Computer Society}
}

@inproceedings{Rothermel98:minimization,
   author = {G. Rothermel and M. J. Harrold and J. Ostrin and C. Hong},
   title = {An empirical study of the effects of minimization on the
            fault detection capabilities of test suites},
   booktitle = {Proceedings of the Int'l Conf. on
                Software Maintenance},
   month = {November},
   year = {1998},
   pages = {34--43}
}

@inproceedings{Hamon04:testing,
    AUTHOR = {Gr\'{e}goire Hamon and Leonardo deMoura and John Rushby},
    TITLE = {Generating Efficient Test Sets with a Model Checker},
    BOOKTITLE = {2nd Int'l Conf. on Software Engineering and Formal Methods},
    ADDRESS = {Beijing, China},
    ORGANIZATION = {IEEE Computer Society},
    PAGES = {261--270},
    MONTH = sep,
    YEAR = 2004
}

@INPROCEEDINGS{Ammann98:MutationTestsFromMC,
  AUTHOR    = "Paul E. Ammann and Paul E. Black and William Majurski",
  TITLE     = "Using Model Checking to Generate Tests from Specifications",
  BOOKTITLE = "Proc. of 2nd IEEE Int'l. Conf. on Formal Engineering Methods",
  YEAR      = "1998",
  MONTH     = nov,
  PAGES     = {46--54},
  PUBLISHER = csoc,
  ANNOTE    = {\sanjaitoread}
}

@INPROCEEDINGS{Ammann99:SpecBasedCoverageRTCA:DO-178BMetric,
  AUTHOR    = "Paul E. Ammann and Paul E. Black",
  TITLE     = "A Specification-based Coverage Metric to evaluate test sets",
  BOOKTITLE = "Proceedings of the Fourth IEEE Int'l Symposium on High-Assurance Systems Engineering",
  YEAR      = "1999",
  MONTH     = nov,
  PUBLISHER = csoc,
  ANNOTE    = {\sanjaitoread}
}

@BOOK{Bezier90:TestingBook,
  AUTHOR    = {Boris Beizer},
  TITLE     = {Software Testing Techniques, 2nd Edition},
  PUBLISHER = {Van Nostrand Reinhold, New York},
  YEAR      = {1990},
  ANNOTE    = {\sanjaitoread}
}

@article{basili2007empirical,
 author = {Basili, Victor R. and Zelkowitz, Marvin V.},
 title = {Empirical studies to build a science of computer science},
 journal = {Commun. ACM},
 volume = {50},
 number = {11},
 year = {2007},
 issn = {0001-0782},
 pages = {33--37},
 doi = {http://doi.acm.org/10.1145/1297797.1297819},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@ARTICLE{Weyuker94:BooleanSpecsTest,
  AUTHOR    = {Elaine Weyuker and Tarak Goradia and Ashutosh Singh},
  TITLE     = {Automatically Generating Test Data from a Boolean Specification},
  JOURNAL   = tse,
  VOLUME    = 20,
  NUMBER    = 5,
  PAGES     = {353--363},
  MONTH     = {May},
  YEAR      = {1994},
  ANNOTE    = {\sanjaitoread}
}

@ARTICLE{DeMillo91:MutationTestData,
  AUTHOR    = {Richard A. De Millo and A. Jefferson Offutt},
  TITLE     = {Constraint-based Automatic Test Data Generation},
  JOURNAL   = tse,
  VOLUME    = 17,
  NUMBER    = 9,
  PAGES     = {900--910},
  MONTH     = {September},
  YEAR      = {1991},
  ANNOTE    = {\sanjaitoread}
}

@INPROCEEDINGS{Richardson92:TestOracles,
  AUTHOR    = {D. J. Richardson and S. L. Aha and T. O'Malley},
  TITLE     = {Specification-based Test Oracles for Reactive Systems},
  BOOKTITLE = {Proc. of the 14th Int'l Conf. on Software Engineering},
  PAGES     = {105--118},
  PUBLISHER = {Springer},
  MONTH     = {May},
  YEAR      = {1992},
  ANNOTE    = {\sanjaitoread}
}


@INPROCEEDINGS{Richardson89:SpecBasedTesting,
  AUTHOR    = {D. J. Richardson and Owen O'Malley and Cindy Tittle},
  TITLE     = {Specification-based Test Oracles for Reactive Systems},
  BOOKTITLE = {Proceedings of the 3rd Int'l Symposium on
               Software Testing, Analysis and Verification},
  PAGES     = {86--96},
  PUBLISHER = {ACM},
  MONTH     = dec,
  YEAR      = {1989},
  ANNOTE    = {\sanjaitoread}
}

@ARTICLE{Stocks96:TestTemplates,
  AUTHOR    = {Phil Stocks and David Carrington},
  TITLE     = {A Framework for Specification-Based Testing},
  JOURNAL   = tse,
  VOLUME    = 22,
  NUMBER    = 11,
  PAGES     = {777--793},
  MONTH     = {November},
  YEAR      = {1996},
  ANNOTE    = {\sanjaitoread}
}

@ARTICLE{Gargantini99:MCforTestsfromSCR,
  AUTHOR    = {Gargantini, A. and Heitmeyer, C.},
  TITLE     = {Using Model Checking to Generate Tests from Requirements Specifications},
  JOURNAL   = {Software Engineering Notes},
  ORGANIZATION = {ACM SIGSOFT},
  VOLUME    = 24,
  NUMBER    = 6,
  PAGES     = {146--162},
  MONTH     = {November},
  YEAR      = {1999},
  ANNOTE    = {\sanjaitoread}
}

@INPROCEEDINGS{Callahan96:SpinBasedTesting,
  AUTHOR    = {J. Callahan and F. Schneider and S. Easterbrook},
  TITLE     = {Specification-Based Testing Using Model Checking},
  BOOKTITLE = {Proceedings of the SPIN Workshop},
  MONTH     = {August},
  YEAR      = {1996},
  ANNOTE    = {\sanjatoread}
}

@INPROCEEDINGS{Engels97:IntNetTesting,
  AUTHOR    = {A. Engels and L. M. G. Feijs and S. Mauw},
  TITLE     = {Test Generation for Intelligent Networks Using Model Checking},
  BOOKTITLE = {Proceedings of TACAS'97, LNCS 1217},
  PUBLISHER = {Springer},
  YEAR      = {1997},
  PAGES     = {384--398},
  ANNOTE    = {\sanjatoread}
}

@INPROCEEDINGS{Blackburn97:TVEC,
  AUTHOR    = {M. R. Blackburn and R. D. Busser and J. S. Fontaine },
  TITLE     = {Automatic Generation of Test Vectors for {SCR}-style Specifications},
  BOOKTITLE = {Proceedings of the 12th Annual Conf. on Computer Assurance, COMPASS'97},
  MONTH     = {June},
  YEAR      = {1997},
  ANNOTE    = {\sanjatoread}
}

@inproceedings{Burton:ATV2000,
  author    = {Simon Burton and John Clark and John McDermid},
  title     = {Testing, Proof and Automation. {A}n Integrated Approach},
  booktitle = {Proceedings of First Int'l Workshop on Automated
               Program Analysis, Testing and Verification},
  month     = {June},
  year      = {2000},
  ANNOTE    = {\sanjaitoread}
}

@inproceedings{Offutt99:SpecTestCriteria,
  AUTHOR     = {A. Jefferson Offutt and Yiwie Xiong and Shaoying Liu},
  TITLE      = {Criteria for Generating Specification-based Tests},
  BOOKTITLE  = {Proceedings of the Fifth IEEE Int'l Conf. on Engineering of Complex Computer Systems
  (ICECCS '99)},
  MONTH      = {October},
  YEAR       = {1999},
  ANNOTE     = {\sanjaitoread}
}

@ARTICLE{MCDCPaper,
  AUTHOR     = {J. J. Chilenski and S. P. Miller},
  TITLE      = {Applicability of {M}odified {C}ondition/{D}ecision {C}overage to {S}oftware {T}esting},
  JOURNAL    = {Software Engineering Journal},
  MONTH      = {September},
  YEAR       = {1994},
  PAGES      = {193-200},
  ANNOTE     = {\sanjaitoread}
}

@article{fraser2009testing,
  title={Testing with Model Checkers: A Survey},
  author={Fraser, G. and Wotawa, F. and Ammann, P.E.},
  journal={Software Testing, Verification and Reliability},
  volume={19},
  number={3},
  pages={215--261},
  issn={1099-1689},
  year={2009},
  publisher={Wiley Online Library}
}

@article{fraser2009issues,
  title={Issues in Using Model Checkers for Test Case Generation},
  author={Fraser, G. and Wotawa, F. and Ammann, P.},
  journal={Journal of Systems and Software},
  volume={82},
  number={9},
  pages={1403--1418},
  issn={0164-1212},
  year={2009},
  publisher={Elsevier}
}

@techreport{MCDCTutorial,
   AUTHOR = {K.J. Hayhurst and D.S. Veerhusen and L.K. Rierson},
   TITLE = {A Practical Tutorial on Modified Condition/Decision Coverage},
   YEAR = {2001},
   INSTITUTION = {NASA},
   NUMBER = {TM-2001-210876}
}

@TechReport{Cast:DCinTesting,
  author =   {Cerification Authorities Software Team FAA},
  title =    {What is a ``Decision'' in Application of Modified Condition/Decision Coverage and Decision Coverage
  (DC)?},
  institution =  {},
  year =     {2002},
  number =   {position paper}
}


@InProceedings{CAV97:Chan,
  AUTHOR    = {William Chan and Richard Anderson and Paul Beame and David Notkin},
  TITLE     = {Combining Constraint Solving and Symbolic Model Checking for a Class of Systems with Non-linear
  Constraints},
  BOOKTITLE  = {Proc. of CAV'97, LNCS 1254},
  PUBLISHER  = {Springer},
  MONTH      = {June},
  YEAR       = {1997},
  PAGES      = {316-327},
  ANNOTE     = {\sanjaitoread}
}


@InProceedings{ISSTA94:BoeingTSDT,
  AUTHOR    = {Robert Jasper and  Mike Brennan and Keith Williamson and Bill Currier and David Zimmerman},
  TITLE     =  {Test Data Generation and Feasible Path Analysis},
  BOOKTITLE = {Proc. of Int'l Symp. on Software Testing and Analysis},
  MONTH     = {August},
  YEAR      = {1994},
  PAGES     = {95-107},
  ANNOTE    = {\sanjaitoread}
}


@InProceedings{Pnueli:LTL,
  AUTHOR    = {A. Pnueli},
  TITLE     = {The Temporal Logic of Programs},
  BOOKTITLE = {Proc. 18th IEEE Symp. Foundations of Computer Science},
  PAGES     = {46-57},
  YEAR      = {1977}
}

@article{Weiser84,
Author= "M. Weiser",
Title="Program Slicing",
Journal={IEEE Transactions on Software Engineering},
Year="1984",
Volume= {SE-10},
Number= "4",
Month="July",
pages = "352--357",
}


@article{Gallagher91,
Author= "K.B. Gallagher and J.R. Lyle",
Title="Using Program Slicing in Software Maintenance",
Journal={IEEE Transactions on Software Engineering},
Year="1991",
Volume= {SE-17},
Number= "8",
Month="August",
pages = "751--761",
}



@inproceedings{Sloane96,
Author= "A.M. Sloane and J. Holdsworth",
Title= {Beyond Traditional Program Slicing},
Booktitle="{P}roceedings of the {I}nternational {S}ymposium on {S}oftware {T}esting and {A}nalysis",
Year="1996",
Month="January",
Mark=""
}


@inproceedings{Oda93,
Author= "T. Oda and K. Araki",
Title= {Specification Slicing in Formal Methods of Software Engineering},
Booktitle={Proceedings of the Seventeenth Int'l Computer
          Software and Applications Conf.},
Year="1993",
Month="November",
Mark=""
}



@techreport{Chang94,
Author= "J. Chang and D.J. Richardson",
Title= {Static and Dynamic Specification Slicing},
Institution={University of California at Irvine},
Year="1994",
Number= "ICS-XX",
Mark=""
}




@TechReport{Tip94,
  author =   {F. Tip},
  title =    {A Survey of Program Slicing Techniques},
  institution =  {Centrum voor Wiskunde en Informatica},
  year =     {1994},
  OPTkey =   {},
  OPTtype =      {},
  number =   {CS-R9438 1994},
  OPTaddress =   {},
  OPTmonth =     {},
  OPTnote =      {},
  OPTannote =    {A survey of different slicing techniques. Goes into
                  reasonable detail on the different algorithms that
                  have been proposed in the literature. Covers both
                  the data flow and control flow algorithms in
                  reasonable detail. Short discussion about
                  application areas towards the end. Good reference
                  list. Did not read the paper in detail. Slicing,
                  dynamic slicing, static slicing, DFD, CFD, data
                  flow, control flow. HEIMDAHL, December 1996}
}



@TechReport{HuangXX,
  author =   {H. Huang and W.T. Tsai and S.Subramanian},
  title =    {General Program Slicing for Software Maintenance},
  institution =  {Department of Computer Science, University of Minnesota},
  year =     {199X},
  OPTkey =   {},
  OPTtype =      {},
  OPTnumber =    {},
  OPTaddress =   {},
  OPTmonth =     {},
  OPTnote =      {},
  OPTannote =    {Since slicing often lead to large slices (30-60\% and
                  sometimes almost all the code) they propose some
                  extensions to the basic algorithms. 1. hierarchical
                  slicing - slice on a level different than
                  statements, for example, module, fole, and
                  class. This will lead to smaller slices and can help
                  in maintenance. 2. constrained slicing = allows two
                  contraints on the slicing (depth and a amrking of
                  the control graph) both very simple, and
                  3. recursive slicing - slice the program repeatedly
                  to get a smaller slice. Program slicing, dependence
                  graph, program understanding, software
                  maintenance. HEIMDAHL, Dec 1996}
}


@article{morell1990theory,
  title={A theory of fault-based testing},
  author={Morell, L.J.},
  journal={IEEE Transactions on Software Engineering},
  volume={16},
  number={8},
  pages={844--857},
  year={1990}
}

@Conf.{woodward1988weak,
  title={From weak to strong, dead or alive? An analysis of some mutation testing issues},
  author={Woodward, MR and Halewood, K.},
  booktitle={Software Testing, Verification, and Analysis, 1988., Proc. of the 2nd Workshop on},
  pages={152--158},
  year={1988}
}

@inproceedings{Papadakis:2010:TAG,
 author = {Papadakis, Mike and Malevris, Nicos and Kallia, Maria},
 title = {Towards Automating the Generation of Mutation Tests},
 booktitle = {Proceedings of the 5th Workshop on Automation of Software Test},
 series = {AST '10},
 year = {2010},
 isbn = {978-1-60558-970-1},
 location = {Cape Town, South Africa},
 pages = {111--118},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1808266.1808283},
 doi = {10.1145/1808266.1808283},
 acmid = {1808283},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated test case generation, concolic execution, genetic algorithms, mutation testing, symbolic execution},
}

@inproceedings{Pandita:2010:GTG,
 author = {Pandita, Rahul and Xie, Tao and Tillmann, Nikolai and de Halleux, Jonathan},
 title = {Guided Test Generation for Coverage Criteria},
 booktitle = {Proceedings of the 2010 IEEE International Conference on Software Maintenance},
 series = {ICSM '10},
 year = {2010},
 isbn = {978-1-4244-8630-4},
 pages = {1--10},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICSM.2010.5609565},
 doi = {10.1109/ICSM.2010.5609565},
 acmid = {1913305},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@INPROCEEDINGS{Su14:testgen,
  author={Ting Su and Geguang Pu and Bin Fang and Jifeng He and
         Jun Yan and Siyuan Jiang and Jianjun Zhao},
  booktitle={Software Security and Reliability (SERE), 2014 Eighth International Conference on},
  title={Automated Coverage-Driven Test Data Generation Using Dynamic Symbolic Execution},
  year={2014},
  pages={98-107},
  keywords={program testing;software
reliability;DSE based framework;automated coverage-driven test data
generation;branch coverage;code transformations;dynamic symbolic
execution;fitness functions;heuristic path search strategy;path filtering
algorithm;predictive path search;software reliability;Educational
institutions;Electronic mail;Engines;Heuristic algorithms;Prediction
algorithms;Search problems;Testing;coverage criteria;software
testing;symbolic execution},
   doi={10.1109/SERE.2014.23},
   month={June}}

@article{jiaanalysis,
  title={An analysis and survey of the development of mutation testing},
  author={Jia, Y. and Harman, M.},
  journal={IEEE Transactions on Software Engineering},
  number={99},
  pages={1},
  issn={0098-5589},
  publisher={IEEE},
  year={2010}
}

@article{demillo1978hints,
  title={Hints on test data selection: Help for the practicing programmer},
  author={DeMillo, R.A. and Lipton, R.J. and Sayward, F.G.},
  journal={IEEE computer},
  volume={11},
  number={4},
  pages={34--41},
  year={1978}
}


@article{howden1982weak,
  title={Weak mutation testing and completeness of test sets},
  author={Howden, WE},
  journal={IEEE Trans. on Software Engineering},
  pages={371--379},
  year={1982}
}


@article{howden1985theory,
  title={Theory and practice of functional testing},
  author={Howden, W.E.},
  journal={IEEE Software},
  volume={2},
  number={5},
  pages={6--17},
  year={1985}
}

@article{gourlay1983mathematical,
  title={A mathematical framework for the investigation of testing},
  author={Gourlay, J.S.},
  journal={IEEE Trans. on Software Engineering},
  pages={686--709},
  year={1983}
}

@article{budd1982two,
  title={Two notions of correctness and their relation to testing},
  author={Budd, T.A. and Angluin, D.},
  journal={Acta Informatica},
  volume={18},
  number={1},
  pages={31--45},
  year={1982},
  publisher={Springer}
}


@inproceedings{weyuker-oracle,
  title={The oracle assumption of program testing},
  author={Weyuker, E.J.},
  booktitle={13th Int'l Conf on System Sciences},
  pages={44--49},
  year={1980}
}


@article{weyuker1988evaluation,
  title={The evaluation of program-based software test data adequacy criteria},
  author={Weyuker, E.J.},
  journal={Communications of the ACM},
  volume={31},
  number={6},
  pages={668--675},
  year={1988},
  publisher={Association for Computing Machinery}
}



@article{weyuker1986axiomatizing,
  title={Axiomatizing software test data adequacy},
  author={Weyuker, E.J.},
  journal={IEEE Trans. on Software Engineering},
  volume={12},
  number={12},
  pages={1128--1138},
  year={1986}
}

@Conf.{geller1976test,
  title={Test data as an aid in proving program correctness},
  author={Geller, M.},
  booktitle={Proc. of the 3rd ACM SIGACT-SIGPLAN Symp. on Principles on Programming Languages},
  pages={209--218},
  year={1976},
  organization={ACM New York, NY, USA}
}


@article{howden1976reliability,
  title={Reliability of the Path Analysis Testing Strategy},
  author={Howden, W.E.},
  journal={IEEE Transactions on Software Engineering},
  volume={2},
  number={3},
  year={1976}
}


@article{parrish1993clarifying,
  title={Clarifying some fundamental concepts in software testing},
  author={Parrish, A.S. and Zweben, S.H.},
  journal={IEEE Trans. on Software Engineering},
  volume={19},
  number={7},
  pages={742--746},
  year={1993}
}

@article{weyuker1980theories,
  title={Theories of program testing and the application of revealing subdomains},
  author={Weyuker, E.J. and Ostrand, T.J.},
  journal={IEEE Trans. on Software Engineering},
  pages={236--246},
  year={1980}
}

@article{weyuker1982testing,
  title={On testing non-testable programs},
  author={Weyuker, E.J.},
  journal={The Computer Journal},
  volume={25},
  number={4},
  pages={465},
  year={1982},
  publisher={Br Computer Soc}
}


@article{hierons2002comparing,
  title={Comparing test sets and criteria in the presence of test hypotheses and fault domains},
  author={Hierons, R.M.},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={11},
  number={4},
  pages={448},
  year={2002},
  publisher={ACM}
}

@article{bernot1991software,
  title={Software testing based on formal specifications: a theory and a tool},
  author={Bernot, G. and Gaudel, MC and Marre, B. and Liens, U.R.A.C.},
  journal={Software Engineering Journal},
  volume={6},
  number={6},
  pages={387--405},
  year={1991}
}


@Conf.{bernot1991testing,
  title={Testing against formal specifications: A theoretical view},
  author={Bernot, G.},
  booktitle={TAPSOFT'91: Colloquium on Trees in Algebra and Programming (CAAP'91)},
  pages={99},
  year={1991},
  organization={Springer}
}

@Conf.{woodward2000testability,
  title={Testability, fault size and the domain-to-range ratio: An eternal triangle},
  author={Woodward, M.R. and Al-Khanjari, Z.A.},
  booktitle={Proc. of the 2000 ACM SIGSOFT Int'l Symp. on Software Testing and Analysis},
  pages={168--172},
  year={2000},
  organization={ACM}
}


@article{gaudel1995testing,
  title={Testing can be formal, too},
  author={Gaudel, M.C.},
  journal={Lecture Notes in Computer Science},
  volume={915},
  pages={82--96},
  year={1995},
  publisher={Springer}
}

@article{weiss1989comparing,
  title={Comparing test data adequacy criteria},
  author={Weiss, SN},
  journal={ACM SIGSOFT Software Engineering Notes},
  volume={14},
  number={6},
  pages={42--49},
  year={1989},
  publisher={ACM New York, NY, USA}
}

@Conf.{baker1986criteria,
  title={Criteria for finite sets of paths that characterize control flow},
  author={Baker, A.L. and Howatt, J.W. and Bieman, J.M.},
  booktitle={Proc. of the 19th Annual Hawaii Int'l Conf. on System Sciences},
  pages={158--163},
  year={1986}
}

@article{zhu1996formal,
  title={A formal analysis of the subsume relation between software test adequacy criteria},
  author={Zhu, H.},
  journal={IEEE Trans. on Software Engineering},
  volume={22},
  number={4},
  pages={248--255},
  year={1996}
}


@article{zhu1993test,
  title={Test data adequacy measurement},
  author={Zhu, H. and Hall, P.A.V.},
  journal={Software Engineering Journal},
  volume={8},
  number={1},
  pages={21--29},
  year={1993}
}


@article{zhu1995axiomatic,
  title={Axiomatic assessment of control flow-based software test adequacy criteria},
  author={Zhu, H.},
  journal={Software Engineering Journal},
  volume={10},
  number={5},
  pages={194--204},
  year={1995}
}


@article{parrish1991analysis,
  title={Analysis and refinement of software test data adequacy properties},
  author={Parrish, A. and Zweben, S.H.},
  journal={IEEE Trans. on Software Engineering},
  volume={17},
  number={6},
  pages={565--581},
  year={1991}
}

@Conf.{zhu2000theory,
  title={A Theory of Testing High Level Petri Nets},
  author={Zhu, H. and He, X.},
  booktitle={Proc. of the Int'l. Conf. on Software: Theory and Practice, 16th IFIP World Computer Congress},
  pages={443--450},
  year={2000},
  organization={Citeseer}
}



@Conf.{zhu2000constructions,
  title={Constructions of behaviour observation schemes in software testing},
  author={Zhu, H. and He, X.},
  booktitle={Proc. of Fifth IEEE Symposium on HASE},
  pages={15--17},
  year={2000}
}


@techreport{zhu1999theory,
  title={A theory of behaviour observation in software testing},
  author={Zhu, H. and He, X.},
  year={1999}
}


@ARTICLE{Zhu97:testing,
  author =       "H. Zhu and P.A.V. Hall and J.H. R. May",
  title =        {Software Unit Test Coverage and Adequacy},
  journal =      "ACM Computing Surveys",
  year =         "1997",
  volume =       "29",
  number =       "4",
  pages =        "366-427",
  month =        "December"
}

@ARTICLE{Goodenough75:TSE,
  author =     "J. B. Goodenough and S. L. Gerhart",
  title  =     {{Toward a Theory of Test Data Selection}},
  journal =    tse,
  year    =    1975,
  month   =    "June",
}


@BOOK{Beizer90:TestingTechniques,
  author = "Boris Beizer",
  title  = {{Software testing techniques}},
  publisher = "Van Nostrand Reinhold, New York",
  year      = 1990,
  edition   = "2nd"
}

@ARTICLE{Havelund99:JavaPathFinder,
  author = "K. Havelund and T. Pressburger",
  title  = {Model Checking {J}ava Programs using {J}ava {P}ath{F}inder},
  journal = "Int'l Journal on Software Tools for Technology Transfer",
  year    = 1999
}

@article{kandl2011error,
  title={Error Detection Rate of {MC/DC} for a Case Study From the Automotive Domain},
  author={Kandl, S. and Kirner, R.},
  journal={Software Technologies for Embedded and Ubiquitous Systems},
  pages={131--142},
  year={2011},
  publisher={Springer}
}


@article{yu2006comparison,
  title={A Comparison of {MC/DC}, {MUMCUT} and Several Other Coverage Criteria for Logical Decisions},
  author={Yu, Y.T. and Lau, M.F.},
  journal={Journal of Systems and Software},
  volume={79},
  number={5},
  pages={577--590},
  issn={0164-1212},
  year={2006},
  publisher={Elsevier}
}


@INPROCEEDINGS{Corbett00:Bandera,
  author = "James Corbett and Matthew Dwyer and John Hatcliff and Corina Pasareanu and
             Robby and Shawn Laubach and Hongjun Zheng",
  title  = {{Bandera : Extracting Finite-state Models from Java Source Code}},
  booktitle = "Proc. of the 22nd Int'l Conf. on Software Engineering",
  month  = "June",
  year    = "2000",
  pages = "439-448",
   annote =   {\commentyunja{ Bandera translates java programs into BIR(Bandera
          Intermediate Representation) that contains some higher-level constructs
          such as threads, java-like locks, and a bounded form of heap allocation.
          It translates the BIR to Promela for using SPIN as a model checker.
          The tool set includes options for abstraction for user intervention,
          such as setting bound of integer variables and slicing using dependency
          checking. The tool also has its own specification language BSL that allows
          users specify properties in the programming level.
          In order to specify properties using BSL, user needs to modify the
          java source code to set control points. This approach may be comparable
          to specifying properties using Macros in RSML.
          Currently, BIR to Promela, BIR to JPF translator are implemented.
          This tool set intends to provide a usable tool set for model checking
          java programs, but I am not sure using BSL is easier than temporal
          logic. Also, I don't get the purpose of BIR JPF translation. It seems
          that Bandera is more mature tool than JPF. Why using JPF?
  }}
}

@TechReport{Ranganath04:slicing,
   title = {A New Foundation For Control-Dependence and Slicing for Modern Program Structures},
   author = {Venkatesh Prasad Ranganath and Torben Amtoft and Anindya Banerjee and Matthew B. Dwyer and John
   Hatcliff},
   month = {October},
   year = {2004},
   institution = {Kansas State University},
   number = {SAnToS-TR2004-8}
}

@Article{Friedman90:bdds,
   author = {S. J. Friedman and K. J. Supowit},
   title = {Finding the Optimal Variable Ordering for Binary Decision Diagrams},
   journal = {IEEE Transactions on Computers},
   volume =   {39},
   number =   {5},
   pages =    {710--713},
   month =    {May},
   year =     {1990},
   annote = {\miketoread}
}

@InProceedings{Rudell93:bdd-reordering,
   author = {R. Rudell},
   title = {Dynamic Variable Ordering for Ordered Binary Decision Diagrams},
   booktitle = {Proceedings of the Int'l Conf. on Computer-Aided Design},
   month = {November},
   year = {1993},
   pages = {42--47},
   annote = {\miketoread}
}

@BOOK{wordsworth96:b-book,
  author =       "J.B. Wordsworth",
  title =        "Software engineering with B",
  publisher =    "Addison Wesley",
  year =         "1996",
}

@BOOK{ModelCheckingBook,
  author = "Edmund M. Clarke and Orna Grumberg and Doron Peled",
  title  = {Model Checking},
  publisher = "MIT Press",
  year      = "1999"
}

@INPROCEEDINGS{Black:TestsFromMC,
  author = "Paul E. Black",
  title  = {Modeling and Marshaling: Making Tests from Model Checker Counterexamples},
  booktitle = "Proc. of the 19th Digital Avionics Systems Confrence",
  month     = "October",
  year      = "2000"
}


@techreport {MCBasedTesting:TechReport,
  Author =   {Sanjai Rayadurgam and Mats P.E. Heimdahl},
  Title =    {Coverage Based Test Data Generation Using Model Checkers},
  Institution =  {Dept. of Computer Science and Engineering, University of Minnesota},
  Address =  {Minneapolis},
  Number =   {01-005},
  Year =     {2001},
  Month =    {January}
}

@INPROCEEDINGS{TestGeneration:ECBS01,
  author =   {Rayadurgam, S. and Heimdahl, M.P.E.},
  Title =    {Coverage Based Test-Case Generation Using Model Checkers},
  booktitle ={Proc. of the 8th IEEE Int'l.
              Conf. and Workshop on the Engineering of
         Computer Based Systems},
  Year  =    {2001},
  Month =    {April},
   Pages =    {83--91},
   Publisher = {IEEE Computer Society}

}

@INPROCEEDINGS{DomainAbstraction:FSE01,
   author = {Yunja Choi and Sanjai Rayadurgam and Mats Heimdahl},
    title  = {{Automatic Abstraction for Model Checking Software Systems
               with Interrelated Numeric Constraints}},
    booktitle = {Proceedings of the 9th ACM SIGSOFT Symposium on the
                 Foundations of Software Engineering (FSE-9)},
   year = {2001},
    month = {September},
    address = {Vienna, Austria},
    note = {To appear}
    }

@INPROCEEDINGS{TestsFromReqs:HASE01,
   author = {Sanjai Rayadurgam and Mats P.E. Heimdahl},
    title  = {{Test-Sequence Generation from Formal Requirement Models}},
    booktitle = {Proceedings of the 6th IEEE Int'l Symposium
                 on the High Assurance Systems Engineering (HASE 2001)},
   year = {2001},
    month = {October},
    address = {Boca Raton, Florida},
    }

@Article{Offutt99:DomainReduction,
  author =   {Jeff Offutt and Zhenyi Jin and Jie Pan.},
  title =    {The Dynamic Domain Reduction Approach to Test Data Generation},
  journal =     {Software--Practice and Experience,},
  year =     {1999},
  OPTkey =   {},
  volume =   {29},
  number =   {2},
  pages =    {167--193},
  month =    {January},
  OPTnote =     {},
  annote =   {\sanjaitoread}
}

@inproceedings{Burton-00a,
  author    = {Simon Burton and John Clark and ANdy Galloway and John McDermid},
  title     = {{Automated V\&V for High Integrity Systems: A Targeted Formal Methods
      Approach}},
  booktitle = {In the Proceedings of the 5th NASA Langley Formal Methods Workshop. June 2000.},
  month     = {June},
  year      = {2000}
}

@TechReport{Black:MCinTesting,
  author =   {Paul Ammann and Paul E. Black and Wei Ding},
  title =    {Model Checkers in Software Testing},
  institution =  {National Institute of Standards and Technology},
  year =     {2002},
  number =   {NIST-IR 6777}
}

@InProceedings{Upenn:TLTestTheory,
  author =   {Hyoung Seok Hong and Insup Lee and Oleg Sokolsky and Hasan Ural},
  title =    {A Temporal Logic Based Theory of Test Coverage and Generation},
  booktitle =    {Proceedings of the Int'l Conf. on Tools and Algorithms for Construction
                  and Analysis of Systems (TACAS '02)},
  year =     {2002},
  address =      {Grenoble, France},
  month =    {April}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% temporary
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@INPROCEEDINGS{Heimdahl03:CaseStudyFGS,
  author    = "Mats P.E Heimdahl and S. Rayadurgam and Willem Visser and
George Devaraj and Jimin Gao ",
  title     = "Auto-Generating Test Sequences using Model Checkers: A
Case Study ",
  booktitle = " 3rd Int'l Workshop on Formal Approaches to Testing
of Software (FATES 2003)",
  year      = 2003
}

@techreport {ModeAwareness:Rockwell,
  Author =   {Steven P. Miller and Anjali Joshi},
  Title =    {{FGS} Mode Awareness Final Report},
  Institution =  {Rockwell Collins},
  Address =  {},
  Number =   {},
  Year =     {2002},
  Month =    {Nevember},
  Note = {}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Need to be placed in the right place above
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@article{devaraj2005coverage,
  title={Coverage-directed Test Generation with Model Checkers: Challenges and Opportunities},
  author={Devaraj, G. and Heimdahl, M.P.E. and Liang, D.},
  journal ={Computer Software and Applications Conf., Annual Int'l},
  volume = {1},
  issn = {0730-3157},
  year = {2005},
  pages = {455-462},
  doi = {http://doi.ieeecomputersociety.org/10.1109/COMPSAC.2005.66},
  publisher = {IEEE Computer Society},
  address = {Los Alamitos, CA, USA}
}

@INPROCEEDINGS{Heimdahl04:FaultDetection,
  AUTHOR =       "Heimdahl, M.P.E. and Devaraj, G and Weber, R.J.",
  TITLE =        "Specification Test Coverage Adequacy Criteria =
Specification Test Generation Inadequacy Criteria?",
  BOOKTITLE =    "Proc. of the Eighth IEEE Int'l Symp.
on High Assurance Systems Engineering (HASE)",
  YEAR =         "2004",
  address =      "Tampa, Florida",
  month =        "March",
}

@INPROCEEDINGS{Heimdahl04:TestReduction,
  AUTHOR =       "Mats P.E. Heimdahl and George Devaraj",
  TITLE =        "Test-suite Reduction for Model Based Tests: Effects on
test quality and Implications for Testing",
  BOOKTITLE =    "Proc. of the 19th IEEE Int'l Conf.
on Automated Software Engineering (ASE)",
  YEAR =         "2004",
  address =      "Linz, Austria",
  month =        "September",
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%   Added by Dan.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%55

@INPROCEEDINGS{Heimdahl01:SpecTesting,
  AUTHOR =       "Mats P.E. Heimdahl",
  TITLE =        "Specification Centered Testing",
  BOOKTITLE =    "Second Int'l Workshop on Analysis, Testing and Verification",
  YEAR =         "2001",
  address =      "Toronto, Canada",
  month =        "May",
}

@INPROCEEDINGS{Heimdahl04:RequirementsValidation,
  AUTHOR =       "Mats P.E. Heimdahl",
  TITLE =        "A Case for Requirements Validation",
  BOOKTITLE =    "Proceeding of National Academies Workshop on Software Certification and Dependability",
  YEAR =         "2004",
  address =      "Washington DC",
  month =        "April",
}

@INPROCEEDINGS{Thompson01:ProductLine,
  AUTHOR =       "Jeffrey M. Thompson and Mats P.E. Heimdahl",
  TITLE =        "Ideas on How Product-Line Engineering Can be Extended",
  BOOKTITLE =    "Second ICSE Workshop on Software Product Lines: Economics, Architectures, and Implications",
  YEAR =         "2001",
  address =      "Toronto, Canada",
  month =        "May",
}

@INPROCEEDINGS{Heimdahl00:SpecBasedProto,
  AUTHOR =       "Mats P.E. Heimdahl and Jeffrey M. Thompson",
  TITLE =        "Specification Based Prototyping of Control Systems",
  BOOKTITLE =    "19th IEEE Digital Avionics Systems Conf.",
  YEAR =         "2000",
  address =      "Philadelphia",
  month =        "October",
}

@INPROCEEDINGS{Rayadurgam03:TestGeneration,
  AUTHOR =       "Sanjai Rayadurgam and Mats P.E. Heimdahl",
  TITLE =        {Generating {MC/DC} Adequate Test Sequences Through Model Checking},
  BOOKTITLE =    "Proceedings of the 28th Annual IEEE/NASA Software Engineering Workshop -- SEW-03",
  YEAR =         "2003",
  address =      "Greenbelt, Maryland",
  month =        "December",
}

@Conf.{sherman2009saturation,
  title={Saturation-based testing of concurrent programs},
  author={Sherman, E. and Dwyer, M.B. and Elbaum, S.},
  booktitle={Proc. of the the 7th Joint European Software Engineering Conf. and Foundations of Software Engineering},
  pages={53--62},
  year={2009},
  organization={ACM}
}


@INPROCEEDINGS{rajan2008epa,
  title={The Effect of Program and Model Structure on {MC/DC} Test Adequacy Coverage},
  author={Rajan, A. and Whalen, M.W. and Heimdahl, M.P.E.},
  booktitle={Proc. of the 30th Int'l Conf. on Software engineering},
  pages={161--170},
  year={2008},
  organization={ACM}
}

@Article{Heimdahl00:InterfaceAnalysis,
  author =   {Mats P.E. Heimdahl and Jeff M. Thompson},
  title =    {Specifying and Analyzing System Level Inter-Component Interfaces},
  journal =     {Requirements Engineering},
  year =     {2000},
  OPTkey =   {},
  volume =   {5},
  number =   {4},
  pages =    {208--224},
  month =    {},
  OPTnote =     {},
  annote =   {}
}

@INPROCEEDINGS{chen78:n-version,
  AUTHOR =       "L. Chen and A. Avizienis",
  TITLE =        "N-version programming: A fault-tolerance approach to reliability of software operation",
  BOOKTITLE =    "Digest of Papers FTCS-8: Eighth Annual Int'l Conf. on Fault Tolerant Computing",
  YEAR =         "1978",
  pages =        "pp. 3-9",
  address =      "Tolouse, France",
  month =        "June"
}


@ARTICLE{Brilliant89:N-version-comparison,
  AUTHOR =       "Susan Brilliant and John Knight and Nancy Leveson",
  TITLE =        "The Consistent Comparison Problem in {N}-Version Programming",
  JOURNAL =      "IEEE Transactions on Software Engineering",
  YEAR =         "1989",
  volume =       "Vol. SE-165",
  number =       "No. 11",
  month =        "November"
}

@ARTICLE{Brilliant90:N-version-faults,
  AUTHOR =       "Susan Brilliant and John Knight and Nancy Leveson",
  TITLE =        "Analysis of Faults in an {N}-Version Software Experiment",
  JOURNAL =      "IEEE Transactions on Software Engineering",
  YEAR =         "1990",
  volume =       "Vol. SE-16",
  number =       "No. 2",
  month =        "February"
}

@ARTICLE{Knight86:N-version,
  AUTHOR =       "John Knight and Nancy Leveson",
  TITLE =        "An Experimental Evaluation of the Assumption of Independence in Multi-Version Programming",
  JOURNAL =      "IEEE Transactions on Software Engineering",
  YEAR =         "1986",
  volume =       "Vol. SE-12",
  number =       "No. 1",
  pages =        "96-109",
  month =        "January"
}

@TECHREPORT{lee03:ptolemy,
  AUTHOR =       "Edward A. Lee",
  TITLE =        "Overview of the Ptolemy Project",
  INSTITUTION =  "University of California, Berkeley",
  YEAR =         "2003",
  number =       "Technical Memorandum UCB/ERL M03/25",
  address =      "CA, 94720, USA",
  month =        "July"
}

@InProceedings{Rushby99:mode-confusion-two,
   author = {J. Rushby and J. Crow and E. Palmer},
   title = {An Automated Method to Detect Potential Mode Confusion},
   booktitle = {Proceedings of the 18th AIAA/IEEE Digital Avionics Systems Conf. ({DASC})},
   address = {St. Louis, MO},
   pages = {4.B.2-1 -- 4.B.2-6},
   volume = {1},
   month = {October},
   year = {1999}
}

@Article{Rushby01:cockpit-interfaces,
   author = {J. Rushby},
   title = {Analyzing Cockpit Interfaces Using Formal Models},
   journal = {Electronic Notes in Theoretical Computer Science},
   Volume = {43},
   Pages = {1--14},
   misc = {Available at http://www.elsevier.nl/locate /entcs/volume43.html},
   year = {2001}
}

@inproceedings{Miller03:ProvingShalls,
 author = {S. P. Miller and M. P.E. Heimdahl and A.C. Tribble},
 title = {Proving the Shalls},
 booktitle = {Proceedings of  FM 2003: the 12th Int'l FME Symposium},
 year = {2003},
 month = {September}
 }


@Misc{Magee:LTSA,
  author =   {J.Magee},
  title =    {Stochastic LTSA - simulation of Timed Transitions systems},
  howpublished = {http://www.doc.ic.ac.uk/%7Ejew01/ltsa/}
}

@BOOK{Berry98:EsterelFound,
  AUTHOR =       {G�rard Berry},
  TITLE =        {The Foundations of Esterel.  Proof, Language and Interaction: Essays in Honour of Robin Milner},
  PUBLISHER =    {MIT Press},
  YEAR =         1998,
  editor =      {G. Plotkin and C. Stirling and M. Tofte}
}

@INPROCEEDINGS{Allen02:QuantAnal,
  AUTHOR =       "Robert Allen and Steve Vestal and Dennis Cornhill and Bruce Lewis",
  TITLE =        "Using an Architecture Description Language for Quantitative Analysis of Real-Time Systems",
  BOOKTITLE =    "Proceedings of the Third Int'l Workshop on Software and Performance",
  YEAR =         "2002",
  address =      "Rome, Italy",
  month =        "June",
  pages = {203-210}
}

@Misc{Honeywell:MetaH,
  author =   {Honeywell},
  title =    {MetaH Product Web Site},
  howpublished = {http://www.htc.honeywell.com/metah/prodinfo.html}
}

@Manual{SafetyHand,
  title =    {System Safety Analysis Handbook 2nd Ed},
  key =      {System Safety Society},
  organization = {System Safety Society},
  year =     {1997},
  note =     {},
  annote =   {}
}

@InProceedings{Emerson:TempModLog,
   author = {E. Allen Emerson},
   title = {Temporal and Modal Logic},
   booktitle = {Handbook of Theoretical Computer Science, Volume B: Formal Models and Sematics},
   editor = {J. van Leeuwen},
   publisher = {North-Holland Pub. Co./MIT Press},
   pages = {995-1072},
   year = {1990}
}

@Misc{SRI:PVS,
  author =   {SRI Int'l},
  title =    {The PVS Specification and Verification System},
  howpublished = {http://pvs.csl.sri.com}
}

@InProceedings{Whalen:PartToolsInterim,
   author = {Michael Whalen and Steven Miller and Anjali Joshi and Daniel O'Brien and Mats P.E. Heimdahl},
   title = {Partitioning Tools Interim Report},
   booktitle = {NASA Contract NCC-01-001 Project Report},
   month = {February},
   year = {2004}
}

@InProceedings{Miller:FGSPartFinal,
   author = {Steven Miller and Daniel O'Brien and Mike Whalen and Anjali Joshi and Mats P.E. Heimdahl},
   title = {FGS Partitioning Final Report},
   booktitle = {NASA Contract NCC-01001 Project Report},
   year = {2005}
}

@TECHREPORT{Miller:FGSPartFinalTechRep,
  AUTHOR = {Steven P. Miller and Michael W. Whalen and Dan O�brien and Mats P.E. Heimdahl and Anjali Joshi},
  TITLE =        {{FGS Partitioning Final Report}},
  INSTITUTION =  {University of Minnesota, Minneapolis},
  YEAR =         2005,
  NUMBER =       {TR 05-039},
  note = "http://www.cs.umn.edu/tech\_reports\_upload/tr2005/05-039.pdf"
}

@INPROCEEDINGS{Tribble02:SafetyFGS,
  AUTHOR =       "Alan C. Tribble and David D. Lempia and Steven P. Miller",
  TITLE =        "Safety Analysis of a Flight Guidance System",
  BOOKTITLE =    "Proceedings of the 21st Digital Avionics Systems Conf. (DASC'02)",
  YEAR =         "2002",
  address =      "Irvine, California",
  month =        "October",
}

@InProceedings{Whalen:AutoToolsInterim,
   author = {Michael Whalen},
   title = {Autocoding Tools Interim Report},
   booktitle = {NASA Contract NCC-01-001 Project Report},
   month = {February},
   year = {2004}
}

@InProceedings{Whalen:AutoToolsFinal,
   author = {Michael Whalen and Steven Miller},
   title = {Autocoding Tools Final Report},
   booktitle = {NASA Contract NCC-01-001 Project Report},
   month = {November},
   year = {2005}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Additional ref's for Mike's Thesis
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@phdthesis{ stringercalvert98:mechanical,
    author = "David W. J. Stringer-Calvert",
    title = "Mechanical Verification of Compiler Correctness",
    address = "York, England",
    year = "1998",
    school = {University of {Y}ork},
    url = "citeseer.ist.psu.edu/stringer-calvert98mechanical.html" }

@InProceedings{Palsberg92:ada-compiler,
   author = {Jens Palsberg},
   title = {An automatically generated and provable correct compiler for a subset of Ada},
   booktitle = {Proceedings of the fourth IEEE Int'l Conf. on Computer Languages},
   address = {San Francisco, CA},
   pages = {20--23},
   month = {April},
   year = {1992}
}

@InProceedings{Palsberg92:provable-compiler,
   author = {Jens Palsberg},
   title = {A provably correct compiler generator},
   booktitle = {Proceedings of ESOP '92, European Symposium on Programming},
   year = {1992}
}

@phdthesis{Palsberg92:thesis,
   author = {Jens Palsberg},
   title = {Provably Correct Compiler Generation},
   address = {Computer Science Department, Aarhus University},
   month = {January},
   year = {1992}
}

@TECHREPORT{Young88:Gypsy,
  AUTHOR =       {William D. Young},
  TITLE =        {A verified code generator for a subset of Gypsy},
  INSTITUTION =  {Computational Logic Inc.},
  YEAR =         {1998},
  number =       {Technical Report 33},
  month =        {October}
}


@inproceedings{Miller87:logic,
    author = {D. Miller and G. Nadathur},
    title = {A Logic Programming Approach to Manipulating Formulas and Programs},
    booktitle = {Proceedings of the Fifth Int'l Conf. and Symposium on Logic Programming},
    month = {August - September},
    publisher = {Computer Society Press},
    address = {San Francisco},
    pages = {379-388},
    year = {1987},
}


@Book{Moore92:Piton,
   author = {J.S. Moore},
   title = {Piton: A Mechanically Verified Assembly-Level Language},
   publisher = {Kluwer Academic Publishers},
   year = {1996}
}

@Book{Pezze06:testing,
   author = {Pezze, M. and Young, M.},
   title = {Software Test and Analysis: Process, Principles, and Techniques},
   publisher = {John Wiley and Sons},
   month = {October},
   year = {2006}
}

@inbook{Nadathur98:holp,
   author = {Gopalan Nadathur and Dale Miller},
   title = {Higher-Order Logic Programming},
   publisher = {Oxford University Press},
   pages = {499--590},
   year = {1998}
}

@Article{Hannan92:operational-semantics,
   author = {John Hannan and Dale Miller},
   title = {From Operational Semantics to Abstract Machines},
   journal = {Journal of Mathematical Structures in Computer Science},
   volume = {2},
   number = {4},
   year = {1992},
   pages = {415--459}
}

@Article{Hannan93:extended-natural-semantics,
   author = {J. Hannan},
   title = {Extended Natural Semantics},
   journal = {Journal of Functional Programming},
   Volume = {11},
   Pages = {1--29},
   year = {1993}
}

@inbook{Scott80:lambda-calculus,
   author = {Dana Scott},
   title = {Relating Theories of the $\lambda$-Calculus},
   editor = {J. Hindley and R. Seldin},
   booktitle = {To {H}. {B}. {C}urry: Essays on Combinitory Logic},
   publisher = {Academic Press},
   year = {1980},
   pages = {403--450}
}

@InProceedings{Pfenning88:hoas,
   author = {Frank Pfenning and Conal Elliot},
   title = {Higher-Order Abstract Syntax},
   booktitle = {Proceedings of the ACM-SIGPLAN Converence on Programming
      Language Design and Implementation},
   publisher = {ACM Press},
   Pages = {199-208},
   year = {1988}
}

@InProceedings{Miller00:hoas,
   author = {Dale Miller},
   title = {Abstract Syntax for Variable Binders: An Overview},
   booktitle = {Proceedings of Computation Logic 2000, LNAI 1861},
   editor = {John Lloyd, et. al.},
   year = {2000}
}

@Article{Church40,
   author = {Alonzo Church},
   title = {A Formulation of the Simple Theory of Types},
   journal = {Journal of Symbolic Logic},
   volume = {5},
   pages = {56--68},
   year = {1940}
}

@Article{Andrews71:resolution,
   author = {Peter B. Andrews},
   title = {Resolution in Type Theory},
   journal = {Journal of Symbolic Logic},
   volume = {36},
   pages = {414--432},
   year = {1971}
}

@InBook{Gentzen69,
   author = {Gerhard Gentzen},
   title = {Investigations into Logical Deduction},
   booktitle = {The Collected Papers of Gerhard Gentzen},
   editor = {M. E. Szabo},
   publisher = {North Holland Publishing Company},
   year = {1969},
   pages = {68--131}
}

@Article{Miller91:uniform-proofs,
   author = {Dale Miller and Gopalan Nadathur and Frank Pfenning and Andre Scedrov},
   title = {Uniform Proofs as a Foundation for Logic Programming},
   journal = {Annals of Pure and Applied Logic},
   volume = {51},
   pages = {125--157},
   year = {1991}
}

@Book{Hindley90:lambda-calculus,
   author = {J. Roger Hindley and J. P. Seldin},
   title = {Introduction to Combinators and Lambda Calculus},
   publisher = {Cambridge University Press},
   year = {1990}
}

@Article{McDowell2001:logical-framework,
   author = {Raymond McDowell and Dale Miller},
   title = {Reasoning with Higher-Order Abstract Syntax in a Logical Framework},
   journal = {ACM Transactions on Computational Logic},
   volume = {3},
   Number = {1},
   month = {January},
   year = {2002},
   pages = {80--136}
}

@InProceedings{Tiu2004:proof-search,
   author = {Alwen Tiu and Dale Miller},
   title = {A Proof Search Specification of the $\lambda$-Calculus},
   booktitle = {Proceedings of FGUC 2004: Foundations of Global Ubiquitous Computing},
   address = {London, UK},
   month = {September},
   year = {2004}
}

@Article{Miller2004:proof-theory,
   author = {Dale Miller and Alwen Tiu},
   title = {A Proof Theory for Generic Judgements},
   editor = {Phokion Kolaitis},
   journal = {(To Appear In) ACM Transactions on Software Engineering},
   year = {2005}
}

@Book{DiStefano67:control-systems,
   author = {DiStefano and Stubberud and Williams},
   title = {Theory and Problems of Feedback and Control Systems},
   series = {Schaum�s Outline Series},
   publisher = {McGraw Hill Book Company},
   year = {1967}
}

@InProceedings{Liang02:compiler,
   author = {Chuck Liang},
   title = {Compiler Construction in Higher Order Logic Programming},
   booktitle = {The Fourth Int'l Symposium on Practical Aspects of Declarative Languages},
   pages = {47 -- 63},
   year = {2002},
   series =     {Lecture Notes in Computer Science Vol. 2257},
   publisher = {Springer-Verlag},
}

@InProceedings{Nadathur99:Teyjus,
   author = {Gopalan Nadathur and Dustin J. Mitchell},
   title = {System Description: Teyjus-A Compiler and Abstract Machine Based Implementation of Lambda Prolog},
   booktitle = {Sixteenth Conf. on Automated Deduction},
   editor = {H. Ganzinger},
   pages = {287--291},
   year = {1999}
}

@Misc{Simulink,
  title =    "Mathworks {I}nc. {S}imulink",
  author = {},
  howpublished = {http://www.mathworks.com/products/simulink},
  key = {Mathworks Inc.},
  year={2015}

}

@Misc{ARM7,
  title =    "{ARM P}rocessors",
  author = {},
  howpublished = {http://www.arm.com/products/processors/classic/arm7/},
  key = {ARM}

}

@Misc{SimulinkCoder,
  title =    "Math{W}orks {I}nc. {S}imulink {C}oder",
  author = {},
  howpublished = {http://www.mathworks.com/products/simulink-coder/},
  key = {Mathworks Inc.}
  }

@Misc{SimulinkDesignVerifier,
  title = "Math{W}orks {I}nc.  {S}imulink {D}esign {V}erifier",
  year={2015},
  author = {},
  howpublished = {http://www.mathworks.com/products/sldesignverifier},
  key = {Mathworks Inc.}
}

@Misc{Stateflow,
  title =    "Math{W}orks {I}nc. {S}tateflow",
  author = {},
  howpublished = {http://www.mathworks.com/stateflow},
  key = {Mathworks Inc.},
  year={2015}
}

@Misc{Polyspace,
  title =    "Math{W}orks {I}nc. {P}olyspace",
  author = {},
  howpublished = {Via the world-wide-web: http://www.mathworks.com/polyspace},
  key = {Mathworks Inc.}
}

@techreport {Whalen10:stateflow-semantics,
  Author =   {M. W. Whalen},
  Title =    {A Parametric Structural Operational Semantics for Stateflow, UML Statecharts, and Rhapsody},
  Institution =  {University of Minnesota Software Engineering Center},
  Address =  {200 Union St., Minneapolis, MN 55455},
  Number =   {2010-1},
  Year =     {2010},
  Month =    {August},
  howpublished = {http://www.umsec.umn.edu/publications}
}

@inproceedings{Hamon05:stateflow,
   AUTHOR = {Gr\'{e}goire Hamon},
   TITLE = {A Denotational Semantics for Stateflow},
   BOOKTITLE = {Proceedings of the Embedded Systems Software Conf.},
   ADDRESS = {Jersey City, New Jersey},
   ORGANIZATION = {ACM},
   MONTH = {September},
   YEAR = {2005}
}

@inproceedings{Hamon04:stateflow,
   AUTHOR = {Gr\'{e}goire Hamon and John Rushby},
   TITLE = {An Operational Semantics for Stateflow},
   BOOKTITLE = {Proceedings of the Fundamental Approaches to Software Engineering (FASE) Conf.},
   ADDRESS = {Barcelona, Spain},
   ORGANIZATION = {Springer Verlag (LNCS 2984)},
   MONTH = {March},
   YEAR = {2004},
   pages = {229--243}
}

@Book{Moore2000:car,
   author = {J. Strother Moore and Matt Kaufmann and Panagiotis Manolios},
   title = {Computer-Aided Reasoning: An Approach},
   publisher = {Kluwer Academic Publishers},
   year = {2000}
}

@InProceedings{Miller88:lprolog,
   author = {D. Miller and G. Nadathur},
   title = {An overview of $\lambda${P}rolog},
   booktitle = {Fifth Symposium on Logic Programming},
   editor = {Kenneth A. Bowen and Robert A. Kowalski},
   month = {August},
   year = {1988},
   pages = {810 -- 827}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Compilation for Model Checking
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Misc{SAL,
  key =   {SRI Int'l},
  title =    {{SAL}` Product Web Site},
  howpublished = {via the world-wide-web: http://www.csl.sri.com/projects/sal/},
}



@InProceedings{Dong99:mc-compiler,
   author = {Yifei Dong and C.R. Ramakrishnan},
   title = {An Optimizing Compiler for Efficient Model Checking},
   booktitle = {IFIP TC6/WG 6.1 Joint Int'l Conf. on
      Formal Description Techniques for Distributed System and Communication
      Protocols (FORTE XII) and Protocol Specification, Testing and Verification (PSTV XIX)},
   pages = {241 -- 256},
   year = {1999},
   address = {Beijing; China},
   month = {October},
}

@InProceedings{Yang05:mc-compiler,
   author = {P. Yang and Y. Dong and C. R. Ramakrishnan and S. A. Smolka},
   title = {Provably Correct Compiler for Efficient Model Checking of Mobile Processes},
   booktitle = {Seventh Int'l Symposium on Practical Aspects of Declarative languages},
   pages  = {113 -- 127},
   publisher = {Springer},
   year = {2005}
}


@InProceedings{Yang99:optimizing-mc,
   author = {Bwolen Yang and Reid G. Simmons and Randal E. Bryant},
   title = {Optimizing Symbolic Model Checking for Constraint-Rich Models},
   booktitle = {Proceedings of the 11th Int'l Conf. on Computer Aided Verification},
   series =     {Lecture Notes in Computer Science Vol. 1633},
   publisher = {Springer-Verlag},
   pages = {328 -- 340},
   year = {1999}
}

@Article{Chan01:optimizing-statecharts-mc,
   author = {William Chan and Richard J. Anderson and Paul Beame and David Notkin and
             David H. Jones and William E. Warner},
   title = { Optimizing Symbolic Model Checking for Statecharts},
   journal = {IEEE Transactions on Software Engineering},
   volume = {27},
   number = {2},
   month = {February},
   year = {2001},
   pages = {170 -- 190},
   publisher = {IEEE Press}
}


@InProceedings{ millett98:slicing,
   author = "L. Millett and T. Teitelbaum",
   title = "Slicing {PROMELA} and its applications to model checking, simulation, and protocol understanding",
   booktitle = {Proceedings of the 4th Int'l {SPIN} Workshop},
   year = {1998},
   month = {November},
   pages = {75--83}
}

@InProceedings{ Ezick04:compiling-tl,
   author = {James Ezick},
   title = {An optimizing compiler for batches of temporal logic formulas},
   booktitle = {Proceedings of the 2004 ACM SIGSOFT Int'l symposium on Software testing and analysis},
   address = {Boston, Massachusetts, USA},
   pages = {183 -- 194},
   year = {2004}
}

@inproceedings{Park2000:java-mc,
    author = {David Y. W. Park and Ulrich Stern and Jens U.
              Skakkebaek and David L. Dill},
    title = {Java Model Checking},
    booktitle = {Proceedings of Automated Software Engineering
              Conf.},
    month = {September},
    year = {2000}
}

@techreport {Ganesh99:slicing-sal,
  Author =   {Vijay Ganesh and Hassan Saidi and Natarajan Shankar},
  Title =    {Slicing {SAL}},
  Institution =  {SRI Computer Science Laboratory},
  Address =  {Menlo Park, CA},
  Year =     {1999},
  Month =    {October}
}

@inproceedings{Holzmann99:engineering,
 author = {Gerard J. Holzmann},
 title = {The Engineering of a Model Checker: The Gnu i-Protocol Case Study Revisited},
 booktitle = {Proceedings of the 5th and 6th Int'l SPIN Workshops on Theoretical and Practical Aspects of
 SPIN Model Checking},
 year = {1999},
 isbn = {3-540-66499-8},
 pages = {232--244},
 publisher = {Springer-Verlag},
}

@inproceedings{Arora04:sat,
   author = {Rajat Arora and Michael S. Hsiao},
   title = {Enhancing SAT-based Bounded Model Checking using Sequential Logic Implications},
   booktitle = {17th Int'l Conf. on VLSI Design},
   year = {2004},
   month = {January},
   pages = {784 -- 788}
}

@PhdThesis{yang99:phd_thesis,
   author = {Bwolen Yang},
   title = {Optimizing model checking based on {BDD} characterization},
   school = {Carnegie Mellon University},
   year = {1999}
}

@inproceedings{Hatcliff98:abstraction,
 author = {John Hatcliff and Matthew B. Dwyer and Shawn Laubach},
 title = {Staging Static Analyses Using Abstraction-Based Program Specialization},
 booktitle = {PLILP '98/ALP '98: Proceedings of the 10th Int'l Symposium on Principles of Declarative
 Programming},
 year = {1998},
 isbn = {3-540-65012-1},
 pages = {134--151},
 publisher = {Springer-Verlag},
 }

@TechReport{Cavada03:smv-trans,
   title = {Practical Formal Verification of Diagnosability of Large Models via Symbolic Model Checking},
   author = {Roberto Cavada and Charles Pecheur},
   institution = {RIACS},
   number = {03.03},
   month = {January},
   year = {2003}
}

@InProceedings{VanEijk96:bdd-dependencies,
   title = {Exploiting Functional Dependencies in Finite State Machine Verification},
   booktitle = {Proceedings of the 1996 European Conf. on Design and Test},
   pages = {9--15},
   year = {1996},
   author = {C. A. J. Van Eijk and J. A. G. Jess},
   publisher = {IEEE Computer Society}
}

@InProceedings{Hu93:bdd-dependencies,
   author = {Alan J. Hu and David L. Dill},
   title = {Reducing {BDD} size by exploiting functional dependencies},
   booktitle = {Proceedings of the 30th Int'l Conf. on Design automation},
   address = {Dallas, Texas, United States},
   pages = {266 -- 271},
   year = {1993}
}

@InProceedings{Berthet90:new-ideas,
   title = {New ideas on symbolic manipulations of finite state machines},
   author = {C. Berthet and O. Coudert and J.C. Madre},
   booktitle = {1990 IEEE Proceedings of the Int'l Conf. on Computer Design},
   month = {September},
   year = {1990},
   pages = {224--227}
}

@article{chvatal1979greedy,
  title={A greedy heuristic for the set-covering problem},
  author={Chvatal, V.},
  journal={Mathematics of operations research},
  volume={4},
  number={3},
  pages={233--235},
  issn={0364-765X},
  year={1979},
  publisher={JSTOR}
}

@Book{Garey79:np,
   author = {M.R. Garey and M.R. Johnson},
   title = {Computers and Intractability},
   publisher = {Freeman},
   address = {New York},
   year = {1979}
}

@Book{ARP4754,
   author = {},
   title = {ARP 4754: Certification Considerations for Highly-Integrated or Complex Aircraft Systems },
   publisher = {SAE Int'l},
   month = {November},
   year = {1996},
   key = {SAE Int'l}
}

@Book{ARP4761,
   author = {},
   title = {ARP 4761: Guidelines and Methods for Conducting the Safety Assessment Process on Civil Airborne Systems
   and Equipment},
   publisher = {SAE Int'l},
   month = {December},
   year = {1996},
   key = {SAE Int'l}
}

@inproceedings{Gerth96:LTL,
 author = {Rob Gerth and Doron Peled and Moshe Y. Vardi and Pierre Wolper},
 title = {Simple on-the-fly automatic verification of linear temporal logic},
 booktitle = {Proceedings of the Fifteenth IFIP WG6.1 Int'l Symposium on Protocol Specification, Testing and
 Verification XV},
 year = {1996},
 isbn = {0-412-71620-8},
 pages = {3--18},
 publisher = {Chapman \& Hall, Ltd.},
 }




 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Fault Finding Capability
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


@TechReport{Offutt94:FaultDetection,
  author =   {A.J. Offutt and J. Pan and K. Tewary and T. Zhang},
  title =    { Experiments with data flow and mutation testing},
  institution =  { Department of Information and Software Systems Engineering, George Mason University, FairFax,
  Virginia },
  year =     {1994},
  number =   { ISSE-TR-94-105 }
}


@inproceedings{AynurA,
  author    = " Aynur Abdurazik and Paul Ammann and Wei Ding and Jeff Offutt ",
  title     = " Evaluation of Three Specification-based Testing Criteria ",
  booktitle = " 6th IEEE Int'l Conf. on Complex Computer Systems (ICECCS '00)",
  publisher = "",
  volume    = "",
  year      = 2000
}


@article{king1976symbolic,
  title={{Symbolic execution and program testing}},
  journal = {"Communications of the ACM"},
  author={King, J.C.},
  year={1976},
  publisher={ACM New York, NY, USA}
}

@article{khurshid2003generalized,
  title={{Generalized symbolic execution for model checking and testing}},
  author={Khurshid, S. and Pasareanu, C.S. and Visser, W.},
  journal={Proc. of the 9th TACAS},
  pages={553--568},
  year={2003},
  publisher={Springer}
}

@article{holzmann2007design,
  title={{The design of a multicore extension of the spin model checker}},
  author={Holzmann, GJ and Bosnacki, D.},
  journal={IEEE Transactions on Software Engineering},
  volume={33},
  number={10},
  pages={659--674},
  year={2007}
}

@MISC{Lam11:soot,
    author = {Patrick Lam and Eric Bodden and Laurie Hendren and Technische Universität Darmstadt},
    title = {The Soot framework for Java program analysis: a retrospective},
    year = {2011}
}

@inproceedings{visser2003model,
  title={Model checking programs},
  author={Visser, W. and Havelund, K. and Brat, G. and Park, S.J. and Lerda, F.},
  booktitle={Proc. of Automated Software Engineering},
  pages={203--232},
  year={2003},
  publisher={Springer}
}

@Conf.{dwyer2007parallel,
  title={{Parallel randomized state-space search}},
  author={Dwyer, M.B. and Elbaum, S. and Person, S. and Purandare, R.},
  booktitle={Proc of 29th Int'l. Conf. on Software Engineering},
  pages={3--12},
  year={2007}
}

@Conf.{jayaraman-jfuzz,
  title={{jFuzz: A Concolic Whitebox Fuzzer for Java}},
  author={Jayaraman, K. and Harvison, D. and Ganesh, V. and Kiezun, A.},
  booktitle={NASA Formal Methods Symposium 2009},
  pages={121}
}
@Conf.{chrabakh2003gridsat,
  title={{GridSAT: A chaff-based distributed SAT solver for the grid}},
  author={Chrabakh, W. and Wolski, R.},
  booktitle={Supercomputing, 2003 ACM/IEEE Conf.},
  pages={37--37},
  year={2003}
}


@book{downing1998java,
  title={{Java RMI: remote method invocation}},
  author={Downing, T.B.},
  year={1998},
  publisher={IDG Books Worldwide, Inc. Foster City, CA, USA}
}


@misc{hickey-iasolver,
  title={{IAsolver: The Brandeis Interval Arithmetic Constraint Solver}},
  author={Hickey, TJ}
}


@Conf.{jussien8choco,
  title={{The CHOCO constraint programming solver}},
  author={Jussien, N. and Rochart, G. and Lorca, X.},
  booktitle={CPAIOR 2008 Workshop on Open-Source Software for Integer and Contraint Programming}
}


@Conf.{rajan2008requirements,
  title={Requirements Coverage as an Adequacy Measure for Conformance Testing},
  author={Rajan, A. and Whalen, M. and Staats, M. and Heimdahl, M.P.},
  booktitle={Proc. of the 10th Int'l Conf. on Formal Methods and Software Engineering},
  pages={86--104},
  year={2008},
  organization={Springer}
}

@Conf.{Whalen08:DASC_MCDC,
  title={On {MC/DC} and Implementation Structure: An Empirical Study},
  author={Michael W. Whalen and Mats P.E. Heimdahl and Ajitha Rajan and Matt Staats},
  booktitle={Proceedings of the 27th Digital Avionics Systems Conf.},
  month={October},
  year={2008}
}

@Conf.{Cofer08:DASC_MC,
  title={Software Model Checking for Avionics Systems},
  booktitle={Proceedings of the 27th Digital Avionics Systems Conf. (DASC�08)},
  author={Darren Cofer and Michael W. Whalen and Steven P. Miller},
  month={October},
  year={2008},
  address={St. Paul, MN},
  organization={IEEE}
}


@Conf.{staats-towards,
  title={Towards a Framework for Generating Tests to Satisfy Complex Code Coverage in {Java Pathfinder}},
  author={Staats, M.},
  booktitle={Proc. of NASA Formal Methods Symposium 2009},
  year={2009},
  pages={116}
}

@article{jones1996automatic,
  title={{Automatic structural testing using genetic algorithms}},
  author={Jones, BF and Sthamer, H.H. and Eyres, DE},
  journal={Software Engineering Journal},
  volume={11},
  number={5},
  pages={299--306},
  year={1996}
}


@article{ramamoorthy1976automated,
  title={{On the automated generation of program test data}},
  author={Ramamoorthy, CV and Ho, S.B.F. and Chen, WT},
  journal={IEEE Transactions on Software Engineering},
  pages={293--300},
  year={1976}
}


@Conf.{tracey1998automated,
  title={{An automated framework for structural test-data generation}},
  author={Tracey, N. and Clark, J. and Mander, K. and McDermid, J.},
  booktitle={Proc. of 13th IEEE Int'l. Conf. on Automated Software Engineering },
  pages={285--288},
  year={1998}
}

@Conf.{pasareanu2008combining,
  title={{Combining unit-level symbolic execution and system-level concrete execution for testing nasa software}},
  author={P\u{a}s\u{a}reanu, C.S. and Mehlitz, P.C. and Bushnell, D.H. and Gundy-Burlet, K. and Lowry, M. and Person, S. and Pape, M.},
  booktitle={Proc. of the 2008 Int'l. Symposium on Software Testing and Analysis},
  pages={15--26},
  year={2008},
  organization={ACM New York, NY, USA}
}

@article{groce2004heuristics,
  title={{Heuristics for model checking Java programs}},
  author={Groce, A. and Visser, W.},
  journal={Int'l. Journal on Software Tools for Technology Transfer},
  volume={6},
  number={4},
  pages={260--276},
  year={2004},
  publisher={Springer}
}

@article{holzmann2008tackling,
  title={{Tackling large verification problems with the swarm tool}},
  author={Holzmann, G.J. and Joshi, R. and Croce, A.},
  journal={Proc. 15th Int'l. SPIN Workshop},
  volume={5156},
  pages={134--143},
  year={2008},
  publisher={Springer}
}

@Conf.{elkarablieh2008efficient,
  title={Efficient solving of structural constraints},
  author={Elkarablieh, B. and Marinov, D. and Khurshid, S.},
  booktitle={Proc. of the 2008 Int'l. Symposium on Software Testing and Analysis},
  pages={39--50},
  year={2008},
  organization={ACM New York, NY, USA}
}


@Conf.{siddiqui2009pkorat,
  title={PKorat: Parallel Generation of Structurally Complex Test Inputs},
  author={Siddiqui, J.H. and Khurshid, S.},
  booktitle={Proc. of the 2009 Int'l. Conf. on Software Testing Verification and Validation},
  pages={250--259},
  year={2009},
  organization={IEEE Computer Society Washington, DC, USA}
}


@Conf.{barnat2003parallel,
  title={{Parallel breadth-first search LTL model-checking}},
  author={Barnat, J. and Brim, L. and Chaloupka, J.},
  booktitle={Proc. of 18th IEEE Int'l. Conf. on Automated Software Engineering},
  pages={106--115},
  year={2003}
}

@Conf.{visser2006test,
  title={Test input generation for java containers using state matching},
  author={Visser, W. and P\u{a}s\u{a}reanu, C.S. and Pel{\'a}nek, R.},
  booktitle={Proc. of the 2006 Int'l. Symposium on Software Testing and Analysis},
  pages={37--48},
  year={2006},
  organization={ACM New York, NY, USA}
}

@article{voas1992revealing,
  title={The revealing power of a test case},
  author={Voas, J.M. and Miller, K.W.},
  journal={Software Testing, Verification and Reliability},
  volume={2},
  number={1},
  pages={25--42},
  year={1992},
  publisher={John Wiley \& Sons, Ltd New York}
}


@article{voas1992pie,
  title={{PIE: A dynamic failure-based technique}},
  author={Voas, J.M.},
  journal={IEEE Trans. on Software Engineering},
  volume={18},
  number={8},
  pages={717--727},
  year={1992}
}

@Conf.{mayer2004test,
  title={Test oracles using statistical methods},
  author={Mayer, J. and Guderlei, R.},
  booktitle={Proc. of the First Int'l Workshop on Software Quality},
  pages={179--189},
  year={2004},
  organization={Citeseer}
}


@Conf.{voas1994putting,
  title={Putting assertions in their place},
  author={Voas, J.M. and Miller, K.W.},
  booktitle={Software Reliability Engineering, 1994., 5th Int'l Symposium on},
  pages={152--157},
  year={1994}
}

@Conf.{mccabe1976complexity,
  title={A complexity measure},
  author={McCabe, T.J.},
  booktitle={Proc. of the 2nd Int'l Conf. on Software Engineering},
  year={1976},
  organization={IEEE Computer Society Press Los Alamitos, CA, USA}
}

@Conf.{washizaki2003metrics,
  title={A metrics suite for measuring reusability of software components},
  author={Washizaki, H. and Yamamoto, H. and Fukazawa, Y.},
  booktitle={Proc. of the 9th Int'l Symposium on Software Metrics},
  pages={211},
  year={2003},
  organization={Citeseer}
}

@Conf.{hutchins1994experiments,
  title={Experiments of the effectiveness of dataflow-and controlflow-based test adequacy criteria},
  author={Hutchins, M. and Foster, H. and Goradia, T. and Ostrand, T.},
  booktitle={Proc. of the 16th Int'l Conf. on Software Engineering},
  year={1994},
  organization={IEEE Computer Society Press Los Alamitos, CA, USA}
}


@article{voas1992dynamic,
  title={Dynamic testing complexity metric},
  author={Voas, J.},
  journal={Software Quality Journal},
  volume={1},
  number={2},
  pages={101--114},
  year={1992},
  publisher={Springer}
}

@article{al2002critical,
  title={Critical Analysis of the PIE Testability Technique},
  author={Al-Khanjari, Z. and Woodward, M. and Ramadhan, H.A.},
  journal={Software Quality Journal},
  volume={10},
  number={4},
  pages={331--354},
  year={2002},
  publisher={Springer}
}


@article{chen2002can,
  title={Can fault-exposure-potential estimates improve the fault detection abilities of test suites?},
  author={Chen, W. and Untch, R.H. and Rothermel, G. and Elbaum, S. and Von Ronne, J.},
  journal={Software Testing Verification and Reliability},
  volume={12},
  number={4},
  pages={197--218},
  year={2002},
  publisher={Citeseer}
}


@Conf.{pasareanu2009testgen,
  title={Test-Case Generation for {Simulink / Stateflow} Models of Software-Intensive Mission-Critical Systems},
  author={Corina S. P\u{a}s\u{a}reanu and Johann M. Schumann and Peter C. Mehlitz and Gabor Karsai and Harmon Nine and Sandeep Nima},
  booktitle={3rd IEEE Int'l. Conf. on Space Mission Challenges for Information Technology },
  year={2009}
}

@article{godefroid-dart,
  title={{DART: Directed automated random testing}},
  author={Godefroid, P. and Klarlund, N. and Sen, K.},
  journal={PLDI05: Proc. of the 2005 ACM SIGPLAN Conf. on Programming Language Design and Implementation},
  year={2005}
}

@article{stern2001parallelizing,
  title={{Parallelizing the Mur$\phi$ verifier}},
  author={Stern, U. and Dill, D.L.},
  journal={Formal Methods in System Design},
  volume={18},
  number={2},
  pages={117--129},
  year={2001},
  publisher={Springer}
}

@Conf.{godefroid2007compositional,
  title={{Compositional dynamic test generation}},
  author={Godefroid, P.},
  booktitle={Proc. of the 34th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages={47--54},
  year={2007},
  organization={ACM New York, NY, USA}
}


@Conf.{sen2005cute,
  title={{CUTE: A concolic unit testing engine for C}},
  author={Sen, K. and Marinov, D. and Agha, G.},
  booktitle={Proc. of the 10th European Software Engineering Conf. / 13th ACM SIGSOFT Int'l. Symp. on Foundations of Software Engineering},
  year={2005},
  organization={ACM New York, NY, USA}
}

@article{sen2006cute,
  title={{CUTE and jCUTE: Concolic unit testing and explicit path model-checking tools}},
  author={Sen, K. and Agha, G.},
  journal={Computer Aided Verification},
  volume={4144},
  pages={419},
  year={2006},
  publisher={Springer}
}

@article{weyuker1991analyzing,
  title={Analyzing partition testing strategies},
  author={Weyuker, E.J. and Jeng, B.},
  journal={IEEE Trans. on Software Engineering},
  volume={17},
  number={7},
  pages={703--711},
  year={1991},
  publisher={Citeseer}
}

@article{duran1984evaluation,
  title={An Evaluation of Random Testing},
  author={Duran, J.W. and Ntafos, S.C.},
  journal={Software Engineering, IEEE Transactions on},
  number={4},
  pages={438--444},
  issn={0098-5589},
  year={1984},
  publisher={IEEE}
}

@Conf.{hamlet1988partition,
  title={Partition testing does not inspire confidence},
  author={Hamlet, D. and Taylor, R.},
  booktitle={Software Testing, Verification, and Analysis, 1988., Proc of the 2nd Workshop on},
  pages={206--215},
  year={1988}
}


@article{hamlet1989theoretical,
  title={Theoretical comparison of testing methods},
  author={Hamlet, R.},
  journal={ACM SIGSOFT Software Engineering Notes},
  volume={14},
  number={8},
  pages={28--37},
  year={1989},
  publisher={ACM New York, NY, USA}
}


@Conf.{weyuker1991comparison,
  title={Comparison of program testing strategies},
  author={Weyuker, E.J. and Weiss, S.N. and Hamlet, D.},
  booktitle={Proc. of the Symposium on Testing, Analysis, and Verification},
  pages={10},
  year={1991},
  organization={ACM}
}


@inproceedings{PFrankl,
  author    = "P.G. Frankl and E.J. Weyuker",
  title     = " A formal analysis of the fault-detecting ability of testing methods ",
  booktitle = "IEEE Trans. on Software Engineering ",
  publisher = "",
  volume    = "",
  year      = 1993
}

@inproceedings{PFrankl:Edgecover,
  author    = "P.G. Frankl and Stewart N. Weiss",
  title     = " An experimental comparison of the effectiveness of the all-uses and all-edges adequacy criteria ",
  booktitle = " Proc. of the Symposium on Testing, Analysis, and Verification ",
  publisher = "",
  volume    = "",
  year      = 1991
}


@TechReport{Mathur:FaultDetection,
  author =   {Aditya P. Mathur and Weichen E. Wong},
  title =    { An empirical evaluation of mutation and data flow test adequacy criteria},
  institution =  {Purdue University, West Lafayette},
  year =     {1993},
  number =   {SERC-TR-135-P}
}

@incollection{Myers90,
  AUTHOR = {B. A. Myers},
  TITLE = {Visual Programming, Programming by Example, and Program Visualization: A Taxonomy},
  YEAR = 1990,
  BOOKTITLE = {Visual Programming Environments: Paradigms and Systems},
  EDITOR = {E. P. Glinert},
  PUBLISHER = {IEEE Computer Society Press},
  ADDRESS = {Los Alamitos},
  PAGES = {33-40},
  KEYWORDS = {}}

@BOOK{myers4328art,
  title={The Art of Software Testing},
  author={Myers, G.J.},
  year = 1979,
  journal={ISBN: 0-471-04328-1}
}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Test Set Minimization
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




@Article{Wong97:FaultDetection,
  author =   {W.E. Wong and J.R. Horgan and A.P. Mathur and A.Pasquini},
  title =  {Test Set Size Minimization and Fault Detection Effectiveness: A Case Study in a Space Application},
  journal =  {Proceedings of the 21st Annual Int'l Computer Software and Applications Conf.},
  year =     {1997},
  OPTkey =   {},
  volume =   {},
  number =   {},
  pages =    {522-528},
  month =    {August},
  OPTnote =     {},
  annote =   {\sanjaitoread}
}

@Conf.{wong1995effect,
  title={Effect of test set minimization on fault detection effectiveness},
  author={Wong, W.E. and Horgan, J.R. and London, S. and Mathur, A.P.},
  booktitle={Proc. of the 17th Int'l Conf. on Software Engineering},
  pages={41--50},
  year={1995},
  organization={ACM}
}


@Article{Wong98:FaultDetection,
  author =   {W.E. Wong and J.R. Horgan and S.London and A.P. Mathur},
  title =  {Effect of Test Set Minimization on Fault Detection Effectiveness},
  journal =  {Software Practice and Experience},
  year =     {1998},
  OPTkey =   {},
  volume =   {28},
  number =   {4},
  pages =    {347-369},
  month =    {April},
  OPTnote =     {},
  annote =   {\sanjaitoread}
}



@Article{Jones03:TestReductionMCDC,
  author =   {James A. Jones and Mary Jean Harrold},
  title =  {Test-Suite Reduction and Prioritization for Modified Condition/Decision Coverage},
  journal =  {IEEE Transactions on Software Emgineering},
  year =     {2003},
  OPTkey =   {},
  volume =   {29},
  number =   {3},
  pages =    {195-209},
  month =    {March},
  OPTnote =     {},
  annote =   {\sanjaitoread}
}




@Article{Rothermel98:TestMin,
  author =   {G. Rothermel and M.J. Harrold and J. Ostrin and C. Hong},
  title =  {An Empirical Study of the Effects of Minimization on the Fault Detection Capabilities of Test Suites},
  journal =  {Proceedings of the Int'l Conf. on Software Maintenance},
  year =     {1998},
  OPTkey =   {},
  volume =   {},
  number =   {},
  pages =    {34--43},
  month =    {November},
  OPTnote =     {},
  annote =   {\sanjaitoread}
}





@Article{Chilenski94:MCDCTesting,
  author =   {J.J. Chilenski and S.P. Miller},
  title =    {Applicability of Modified Condition/Decision Coverage to Software Testing},
  journal =  {Software Engineering Journal},
  year =     {1994},
  month =    {September},
  OPTnote =     {},
  annote =   {\sanjaitoread}
}

@techreport {Chilenski01:MCDC,
  Author =   {J. Chilenski},
  Title =    {An Investigation of Three Forms of the Modified Condition Decision Coverage ({MCDC}) Criterion},
  Institution =  {Office of Aviation Research},
  Address =  {Washington, D.C.},
  Number =   {DOT/FAA/AR-01/18},
  Year =     {2001},
  Month =    {April}
}


@INPROCEEDINGS{Upenn:DataFlowTest,
  AUTHOR =       "Hyoung Seok Hong and Sung Deok Cha and Insup Lee and Oleg Sokolsky and Hasan Ural",
  TITLE =        "Data Flow Testing as Model Checking",
  BOOKTITLE =    "Proceedings of the Int'l Conf. on Software Engineering",
  YEAR =         "2003",
  address =      "Portland, Oregon",
  month =        "May",
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Requirements Based Test Case Generation
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@INPROCEEDINGS{Armoni03:LTL,
  AUTHOR =       {R. Armoni and D. Bustan and O. Kupferman and M. Y. Vardi},
  TITLE =        {Aborts vs. Resets in Linear Temporal Logic.},
  BOOKTITLE =    {TACAS},
  YEAR =         {2003},
  pages =        {65-80},
  Month =        {November}
}

@INPROCEEDINGS{Eisner03:TL,
  AUTHOR =       {C. Eisner and D. Fisman and J. Havlicek and Y. Lustig and A. McIsaac and D. Van Campenhout},
  TITLE =        {Reasoning with Temporal Logic on Truncated Paths},
  BOOKTITLE =    {Proceedings of Computer Aided Verification (CAV)},
  YEAR =         {2003},
  pages =        {27-39}
}

@TECHREPORT{Manna95:TemporalVerification,
  AUTHOR =       {Z. Manna and A. Pnueli},
  TITLE =        {Temporal Verification of Reactive Systems: Safety},
  INSTITUTION =  {Springer-Verlag},
  YEAR =         {1995},
  address =      {New York}
}

@INPROCEEDINGS{Tan04:SpecBasedTestingLTL,
  AUTHOR =       {L. Tan and O. Sokolsky and I. Lee},
  TITLE =        {Specification-based Testing with Linear Temporal Logic},
  BOOKTITLE =    {IEEE Int. Conf. on Information Reuse and Integration (IEEE IRI-2004)},
  YEAR =         {2004},
  Month =        {November}
}

@ARTICLE{Kupferman03:Vacuity,
  AUTHOR =       {O. Kupferman and M. Y. Vardi},
  TITLE =        {Vacuity Detection in Temporal Model Checking},
  JOURNAL =      {Journal on Software Tools for Technology Transfer},
  YEAR =         {2003},
  volume =       {4},
  number =       {2},
  month =        {February}
}

@INPROCEEDINGS{Purandare02:Vacuity,
  AUTHOR =       {M. Purandare and F. Somenzi},
  TITLE =        {Vacuum Cleaning {CTL} Formulae},
  BOOKTITLE =    {Proceedings of the 14th Conf. on Computer Aided Design},
  YEAR =         {2002},
  publisher =    {Springer-Verlag},
  pages =        {485-499}
}


@INPROCEEDINGS{Beer01:VacuityDetectionACTL,
  AUTHOR =       {I. Beer and S. Ben-David and C. Eisner and Y. Rodeh},
  TITLE =        {Efficient Detection of Vacuity in {ACTL} Formulas},
  BOOKTITLE =    {Formal Methods in System Design},
  YEAR =         {2001},
  pages =        {141-162}
}

@INPROCEEDINGS{Chockler01:CovMetricsTL,
  AUTHOR =       {H. Chockler and O. Kupferman and M. Y. Vardi},
  TITLE =        {Coverage metrics for temporal logic model checking.},
  BOOKTITLE =    {Proceedings of the Int'l Conf. on Tools and Algorithms for the Construction and Analysis of Systems, Lecture Notes in Computer Science 2031},
  YEAR =         {2001},
  pages =        {528-542},
  Month =        {April},
  publisher =    {Springer-Verlag}
}

@INPROCEEDINGS{Chockler03:CovMetricsFV,
  AUTHOR =       {H. Chockler and O. Kupferman and M. Y. Vardi},
  TITLE =        {Coverage metrics for formal verification.},
  BOOKTITLE =    {12th Advanced Research Working Conf. on Correct Hardware Design and Verification Methods, volume 2860 of Lecture Notes in Computer Science},
  YEAR =         {2003},
  pages =        {111-125},
  Month =        {October},
  publisher =    {Springer-Verlag}
}

@INPROCEEDINGS{Chockler01:Cov-PracticalApproach,
  AUTHOR =       {H. Chockler and O. Kupferman and R. P. Kurshan and M. Y. Vardi},
  TITLE =        {A practical approach to coverage in model checking.},
  BOOKTITLE =    {Proceedings of the Int'l Conf. on Computer Aided Verification (CAV�01), Lecture Notes in Computer Science 2102},
  YEAR =         {2001},
  pages =        {66-78},
  Month =        {July},
  publisher =    {Springer-Verlag}
}

@misc{foundation2006ei,
  title={{Eclipse IDE}},
  author={Foundation, E.},
  year={2006}
}

@Conf.{sztipanovits2002gpe,
  title={Generative Programming for Embedded Systems},
  author={Sztipanovits, J. and Karsai, G.},
  booktitle={Proc. of Int'l. Conf. on Principles and Practice of Declarative Programming},
  volume={6},
  number={08},
  pages={180--180},
  year={2002},
  organization={Springer}
}

@INPROCEEDINGS{miller2005formal,
  title={Formal Verification of Flight Critical Software},
  author={Miller, S. and Anderson, E. and Wagner, L. and Whalen, M. and Heimdahl, M.},
  booktitle={Proceedings of the AIAA Guidance, Navigation and Control Conf. and Exhibit},
  year={2005},
  month = {August}
}

@Conf.{amla1992using,
  title={Using Z specifications in category partition testing},
  author={Amla, N. and Ammann, P.},
  booktitle={Computer Assurance, 1992. COMPASS'92., Proc. of the 7th Annual Conf. on},
  pages={3--10},
  year={1992}
}


@INPROCEEDINGS{Whalen06:CovMetrics-ReqBased,
  author    = {M.W~Whalen and A.~Rajan and M.P.E.~Heimdahl},
  title     = {Coverage Metrics for Requirements-Based Testing},
  booktitle = {Proceedings of Int'l Symposium on
                Software Testing and Analysis},
  pages={25--36},
  year      = {2006},
  Month =     {July},
  publisher = {ACM}
}

@inproceedings{Rajan06:CovMetrics-BlackBox,
  author    = {A.~Rajan},
  title     = {Coverage Metrics to Measure Adequacy of Black-Box Test Suites},
  booktitle = {Proceedings of Automated Software Engineering, {ASE 2006}
                (Doctoral Symposium)},
  year      = {2006},
  Month =     {September}
}

@inproceedings{Rajan07:ModelValid,
  author    = {A.~Rajan and M.W.~Whalen and M.P.E~Heimdahl},
  title     = {Model Validation Using Automatically Generated Requirements-Based
                Tests},
  booktitle = {Proceedings of the IEEE High Assurance Systems
                Engineering Symposium (HASE 2007)},
  year      = {2007},
  Month =     {Novemeber}
}

@Conf.{fraser2009complementary,
  title={Complementary Criteria for Testing Temporal Logic Properties},
  author={G.~Fraser and F.~Wotawa},
  booktitle={Proceedings of the 3rd Int'l Conf. on Tests and Proofs},
  pages={73},
  year={2009},
  organization={Springer}
}

@Conf.{fraser2009evaluation,
  title={An Evaluation of Model Checkers for Specification Based Test Case Generation},
  author={G.~Fraser and A.~Gargantini and V.~Marconi},
  booktitle={Proceedings of the 2009 Int'l Conf. on Software Testing Verification and Validation},
  pages={41--50},
  year={2009},
  organization={IEEE Computer Society Washington, DC, USA}
}

@Conf.{fraser2011generating,
  title={Generating Parameterized Unit Tests},
  author={Fraser, G. and Zeller, A.},
  booktitle={Prc. of the 20th Int'l Symp. on Software Testing and Analysis},
  pages={147--158},
  year={2011},
  organization={ACM}
}


@Conf.{fraser2010mutation,
  title={Mutation-driven generation of unit tests and oracles},
  author={Fraser, G. and Zeller, A.},
  booktitle={Prc. of the 19th Int'l Symp. on Software Testing and Analysis},
  pages={147--158},
  year={2010},
  organization={ACM}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    MCDC experiments
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Conf.{taneja2008diffgen,
  title={DiffGen: Automated regression unit-test generation},
  author={Taneja, K. and Xie, T.},
  booktitle={Automated Software Engineering, 2008},
  pages={407--410},
  issn={1527-1366},
  year={2008},
  organization={IEEE}
}

@article{pacheco2005eclat,
  title={Eclat: Automatic generation and classification of test inputs},
  author={Pacheco, C. and Ernst, M.D.},
  journal={ECOOP 2005-Object-Oriented Programming},
  pages={504--527},
  year={2005},
  publisher={Springer}
}

@Conf.{evans2007differential,
  title={Differential testing: a new approach to change detection},
  author={Evans, R.B. and Savoia, A.},
  booktitle={Proc. of the 6th Joint European Software Engineering Conf. and Foundations of Software Engineering},
  pages={549--552},
  year={2007},
  organization={ACM}
}

@ARTICLE{Briand04:ExptsClassTesting,
  AUTHOR    = {L.C~Briand and M.~DiPenta and Y.~Labiche},
  TITLE    = "Assessing and improving state-based class testing: A series of experiments",
  JOURNAL = {IEEE Trans. on Software Engineering},
  year      = {2004},
  volume = {30 (11)}

}

@Conf.{briand2007critical,
  title={A critical analysis of empirical research in software testing},
  author={Briand, LC},
  booktitle={Empirical Software Engineering and Measurement, 2007. ESEM 2007. First Int'l Symposium on},
  pages={1--8},
  year={2007}
}

@article{vilkomir2002reinforced,
  title={Reinforced condition/decision coverage ({RC/DC}): A new criterion for software testing},
  author={S.A.~Vilkomir and J.P.~Bowen},
  journal={Lecture Notes in Computer Science},
  volume={2272},
  pages={291--308},
  year={2002},
  publisher={Springer}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% temporary
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@techreport {ModeAwareness:Rockwell,
  Author =   {Steven P. Miller and Anjali Joshi},
  Title =    {{FGS} Mode Awareness Final Report},
  Institution =  {Rockwell Collins},
  Address =  {},
  Number =   {},
  Year =     {2002},
  Month =    {Nevember},
  Note = {}
}

@Book{Miller02:mode-awareness-NASA,
  Author =   {Steven P. Miller and Anjali Joshi},
  Title =    {{FGS} Mode Awareness Final Report},
  booktitle =  {NASA Contractor Report},
  Year =     {2002},
  Month =    {Nevember}
}


%--------------------------------------------------

@MISC{EsterelTech,
  author =       "Esterel-Technologies",
  title =        "Corporate Web Page",
  year = "2004",
  howpublished = "\\www.esterel-technologies.com"
}

@MISC{Scade,
  author =       "Esterel-Technologies ",
  title =        "{SCADE} {S}uite Product Description",
  year = "2004",
  howpublished = {http://www.esterel-technologies.com/v2/
  scadeSuiteForSafetyCriticalSoftwareDevelopment/index.html}
}

@MISC{Rhapsody,
  author =       "",
  title =        "{IBM R}ational {R}hapsody",
  year = "2014",
  howpublished = {http://www.ibm.com/developerworks/rational/ products/rhapsody/}
}

@inproceedings{KNP11,
author={M. Kwiatkowska and G. Norman and D. Parker},
title={{PRISM} 4.0: Verification of Probabilistic Real-time Systems},
booktitle={Proc. 23rd Int'l Conf. on Computer Aided Verification (CAV'11)},
year={2011},
editor={G. Gopalakrishnan and S. Qadeer},
pages={585--591},
organization={},
publisher={Springer},
series={LNCS},
volume={6806}
}

@MISC{Cafta,
  author =       {SAIC},
  title =        {Computer Aided Fault Tree Analysis (CAFTA)Product Brochure},
  howpublished = {http://www.saic.com/products/software/cafta}
}


@MISC{MathWorks,
  author =       "MathWorks",
  title =        "The {M}ath{W}orks {I}nc. Corporate Web Page",
  year = "2004",
  howpublished = "http://www.mathworks.com"
}





@BOOK{UMLReference,
  AUTHOR =       "James Rumbaugh and Ivar Jacobson and Grady Booch ",
  TITLE =        "The Unified Modeling Language Reference Manual",
  PUBLISHER =    "Addison-Wesley",
  YEAR =         "1998",
  series =       "Object Technology Series",
  isbn =         "ISBN: 020130998X"
}

@BOOK{OMG:UML,
  AUTHOR =       "Object Management Group",
  TITLE =        "Unified Modeling LanguageTM (OMG UML), Superstructure Version 2.2",
  PUBLISHER =    "Object Management Group",
  YEAR =         "2009",
  MONTH =        "February",
  howpublished = {http://www.omg.org/technology/documents/formal/uml.htm}
}

@MANUAL{SAL:tut,
  TITLE =        "SAL: Tutorial",
  author =       "Leonardo de Moura",
  organization = "SRI Int'l",
  address =      "Computer Science Laboratory. 333 Ravenswood Ave. Menlo Park, CA 94025",
  month =        "January",
  year =         "2004"
}


@inproceedings{Schumann03:HICSS,
  author = {Johann Schumann and Bernd Fischer and Michael W. Whalen and Jon Whittle},
  title = {Certification Support for Automatically Generated Programs},
  booktitle ={Hawaii Int'l Conf. on System Sciences},
  isbn = {0-7695-1874-5},
  year = {2003},
  month = {January},
  doi = {http://doi.ieeecomputersociety.org/10.1109/HICSS.2003.1174914},
  publisher = {IEEE Computer Society},
  address = {Los Alamitos, CA, USA}
}

@inproceedings{Whalen02:Certification,
  author = {Michael W. Whalen and Bernd Fischer and Johann Schumann},
  title = {Certifying Synthesized Code},
  booktitle ={Proceedings of Formal Methods Europe 2002},
  year = {2002},
  month = {July},
  publisher = {Springer-Verlag},
  address = {Copenhagen, Denmark}
}

@inproceedings{Whalen02:Autobayes,
  author = {Michael W. Whalen and Bernd Fischer and Johann Schumann},
  title = {AutoBayes/CC - Combining Program Synthesis with Automatic Code Certification},
  booktitle ={Proceedings of Conf. on Automated Deduction (CADE) 18},
  year = {2002},
  month = {July},
  publisher = {Springer-Verlag},
  address = {Copenhagen, Denmark}
}

@INPROCEEDINGS{Miller03:shalls,
  author    = "Steven P. Miller and Alan C. Tribble and Mats Per Erik Heimdahl",
  title     = "Proving the Shalls",
  BOOKTITLE =    "Proceedigns of the Int'l Symposium of Formal Methods Europe (FME 2003)",
  YEAR =         "2003",
  editor =       "Keijiro Araki and Stefania Gnesi and Dino Mandrioli",
  volume =       "2805",
  series =       "Lecture Notes in Computer Science",
  pages =        "75-93",
  address =      "Pisa, Italy",
  month =        "September",
  publisher =    "Springer"
}

@article{Miller06:Shalls,
 author = {Steven P. Miller and Alan C. Tribble and Michael W. Whalen and Mats P. E. Heimdahl},
 title = {Proving the shalls: Early validation of requirements through formal methods},
 journal = {Int. J. Softw. Tools Technol. Transf.},
 volume = {8},
 number = {4},
 year = {2006},
 issn = {1433-2779},
 pages = {303--319},
 doi = {http://dx.doi.org/10.1007/s10009-004-0173-6},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 }

@article{Boehm00:reqs,
    author = {Barry Boehm},
    title = {Requirements that Handle IKIWISI, COTS, and Rapid Change},
    journal = {IEEE Computer},
    month = {July},
    volume = {32},
    number = {7},
    year = {2000},
    pages = {99--102}
}


@article{vanLamsweerde07:kaos,
 author = {A. van Lamsweerde},
 title = { Engineering Requirements for System Reliability and Security},
 journal = {Software System Reliability and Security},
 volume = {9},
 year = {2007},
 publisher = {IOS Press}
}

@book{yu11:istar,
 author = {Eric Yu and Paolo Giorgini and Neil Maiden and John Myopoulos},
 title = {Social Modeling for Requirements Engineering},
 year = {2011},
 month = {January},
 isbn = {0-262-24055-6},
 publisher = {The MIT Press}
}

@INPROCEEDINGS{Rayadurgam03:pvs,
  AUTHOR =       "Sanjai Rayadurgam and Anjali Joshi and Mats Per Erik Heimdahl",
  TITLE =        "Using {PVS} to Prove Properties of Systems Modelled in a Synchronous Dataflow Language",
  BOOKTITLE =    "Proceedigns of the 5th Int'l Conf. on Formal Engineering Methods, ICFEM 2003",
  YEAR =         "2003",
  pages =        "167-186",
  address =      "Singapore",
  month =        "November"
}



@INPROCEEDINGS{IF99,
  AUTHOR =       "M. Bozga and J.-C. Fernandez and L. Ghirvu and S. Graf and J. Krimm and L. Mounier and J.
  Sifakis",
  TITLE =        "IF: An intermediate representation for SDL and its applications",
  BOOKTITLE =    "Proceedigns of the SDL-Forum�99",
  YEAR =         "1999",
  pages =        "423�440",
  publisher =    "Elsevier Science"
}


@INPROCEEDINGS{Poigne97:combination,
  AUTHOR =       "Axel Poigne and Leszek Holenderski",
  TITLE =        "On the Combination of Synchronous Languages",
  BOOKTITLE =    "Proceedings of Int'l Symposium on Compositionality",
  YEAR =         "1997",
  editor =       "W.P. de Roever and H. Langmaack and A. Pnueli",
  volume =       "1536",
  address =      "Bad Malente, Germany",
  month =        "September",
  publisher =    "Springer-Verlag"
  }

@INPROCEEDINGS{Bensalem00:sal-overview,
  AUTHOR =       "Saddek Bensalem and Vijay Ganesh and Yassine Lakhnech and Cesar Munoz and Sam Owre and Harald
  Ruess and John Rushby and Vlad Rusu and Hassen Saidi and N. Shankar and Eli Singerman and Ashish Tiwari",
  TITLE =        "An Overview of SAL",
  BOOKTITLE =    "Proceedigns of LFM 2000: Fifth NASA Langley Formal Methods Workshop",
  YEAR =         "2000",
  editor =       "C. Michael Holloway",
  pages =        "187�196",
  address =      "Hampton, VA.",
  month =        "June",
  organization = "NASA Langley Research Center"
}

@ARTICLE{Cleaveland39:workbench,
  AUTHOR =       "Rance Cleaveland and Joachim Parrow and Bernhard Steffen",
  TITLE =        "The Concurrency Workbench: A Semantics Based Tool for the Verification of Concurrent Systems",
  JOURNAL =      "ACM Transactions on Programming Languages and Systems",
  YEAR =         "1993",
  volume =       "15",
  number =       "1",
  pages =        "36 - 72",
  month =        "January"
}

@ARTICLE{Dillon03:inference-graphs,
  AUTHOR =       "L.K. Dillon and R.E.K. Stirewalt",
  TITLE =        "Inference graphs: A computational structure supporting generation of customizable and correct
  analysis components",
  JOURNAL =      "IEEE Transactions on Software Engineering",
  YEAR =         "2003",
  volume =       "29",
  number =       "2",
  pages =        "133-150",
  month =        "February"
}

@ARTICLE{Niu03:template-semantics,
  AUTHOR =       "Jianwei Niu and J.M. Atlee and N.A. Day",
  TITLE =        "Template semantics for model-based notations",
  JOURNAL =      "IEEE Transactions on Software Engineering",
  YEAR =         "2003",
  volume =       "29",
  number =       "10",
  pages =        "866 - 882",
  month =        "October"
}

@article{juristo2004reviewing,
  title={Reviewing 25 years of Testing Technique Experiments},
  author={Juristo, N. and Moreno, A.M. and Vegas, S.},
  journal={Empirical Software Engineering},
  volume={9},
  number={1},
  pages={7--44},
  year={2004},
  publisher={Springer}
}


@INPROCEEDINGS{Zimmerman02:readability,
  AUTHOR =       "Marc K. Zimmerman and Kristina Lundqvist and Nancy Leveson",
  TITLE =        " Investigating the readability of state-based formal requirements specification languages",
  BOOKTITLE =    "Proceedings of the 24th Int'l Conf. on Software engineering ",
  YEAR =         "2002",
  pages =        "33 - 43",
  address =      "Orlando, Florida",
  month =        "May",
  publisher =    "ACM Press"
}

@INPROCEEDINGS{suif,
  AUTHOR =       "Robert P. Wilson and Robert S. French and Christopher S. Wilson and Saman P. Amarasinghe and
  Jennifer M. Anderson and Steve W. K. Tjiang and Shih-Wei Liao and Chau-Wen Tseng and Mary W. Hall and Monica S.
  Lam and John L. Hennessy",
  TITLE =        "SUIF: An Infrastructure for Research on Parallelizing and Optimizing Compilers",
  BOOKTITLE =    "ACM SIGPLAN Notices",
  YEAR =         "1994",
  volume =       "29",
  number =       "12",
  pages =        "31-37",
  month =        "December",
  organization = "Special Interest Group on Programming Languages (SIGPLAN) of ACM"
}

@PhdThesis{Sanjai03:dissertation,
  author =   {Sanjai Rayadurgam},
  title =    {Automatic Test-case Generation from Formal Models of Software},
  school =   {University of Minnesota},
  year =     {2003},
  month =    {November}
}

@PhdThesis{Whalen05:dissertation,
  author =   {Michael W. Whalen},
  title =    {Trustworthy Translation of the Requirements State Machine Language Without Events},
  school =   {University of Minnesota},
  year =     {2005},
  month =    {March}
}


@Book{Garey:NP,
  author =   {M.R. Garey and D.S. Johnson},
  title =    {Computers and Intractability},
  publisher =    {Freeman, New York},
  year =     {1979},
  annote =   {}
}


@INPROCEEDINGS{Heimdahl01:TestFramework,
  AUTHOR =       "Mats P.E.~Heimdahl and Sanjai~Rayadurgam and Willem Visser",
  TITLE =        "Specification Centered Testing",
  BOOKTITLE =    "Second Int'l Workshop on Analysis, Testing and Verification",
  YEAR =         "2001",
  month =        "May",
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%INTERACTION TESTING
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@ARTICLE{avritzer-prioritization,
    AUTHOR = "A. Avritzer and E.J. Weyuker",
    TITLE = "The Automatic Generation of Load Test Suites and the Assessment of the Resulting Software",
    JOURNAL = {IEEE Transactions on  Software Engineering},
    VOLUME = {21},
    NUMBER = {9},
    PAGES = {705-716},
    MONTH = "October",
    YEAR = {1995}   }

@INPROCEEDINGS{BARRETT,
    AUTHOR = "C. Barrett and M. Drozda and A. Marathe and M. Marathe",
    TITLE = "Characterizing the interaction between routing and mac protocols in ad-hoc networks",
    BOOKTITLE = {In Proceedings of the Third ACM Int'l Symposium Mobile Ad Hoc Networking and Computing},
    PAGES = {92-103},
    MONTH = "November",
    YEAR = "2002"}

@ARTICLE{BERLING,
    AUTHOR = "T. Berling and P. Runeson",
    TITLE = "Efficient Evaluation of Multifactor Dependent System Performance Using Fractional Factorial Design",
    JOURNAL = {IEEE Transactions on Software Engineering},
    VOLUME = {29},
    NUMBER = {9},
    PAGES = {769-781},
    MONTH = "September",
    YEAR = {2003}   }

@ARTICLE{BERRY,
    AUTHOR = "R. F. Berry",
    TITLE = "Computer benchmark evaluation and design of experiments: A case study",
    JOURNAL = {IEEE Transactions on Computers},
    VOLUME = {41},
    NUMBER = {10},
    PAGES = {1279-1289},
    MONTH = "October",
    YEAR = {1992}   }

@INPROCEEDINGS{BRYCECC,
    AUTHOR = "R. C. Bryce and C. J. Colbourn and M. B. Cohen",
    TITLE = "A Framework of Greedy Methods for Constructing Interaction Tests",
    BOOKTITLE = {The 27th Int'l Conf. on Software Engineering (ICSE)},
    PAGES = {146-155},
    MONTH = "May",
    YEAR = {2005}   }

@INPROCEEDINGS{BRYCEC-AMOST,
    AUTHOR = "R. C. Bryce and C. J. Colbourn",
    TITLE = "Test Prioritization for Pairwise Coverage",
    BOOKTITLE = {ACM Proceedings of the 2005 workshop on Advances in model-based testing},
    PAGES = {1-7},
    MONTH = "May",
    YEAR = {2005}   }

@INPROCEEDINGS{BRYCE-CHI,
    AUTHOR = "R. C. Bryce",
    TITLE = "Automatic Generation of High Coverage Usability Tests",
    BOOKTITLE = {ACM CHI 2005, Extended Abstract � Doctoral Symposium},
    PAGES = {1108-1109},
    MONTH = "April",
    YEAR = {2005}   }

@INPROCEEDINGS{BRYCE-ASE,
    AUTHOR = "R. C. Bryce",
    TITLE = "Constructing Interaction Test Suites with Greedy Algorithms",
    BOOKTITLE = {20th IEEE/ACM Int'l Conf. on Automated Software Engineering  (ASE05), Extended
    Abstract � Doctoral Symposium},
    PAGES = {to appear},
    MONTH = "November",
    YEAR = {2005}   }

@ARTICLE{BRYCECC-IJSPM,
    AUTHOR = "R. C. Bryce and Y. Chen and C. J. Colbourn",
    TITLE = "Biased Covering Arrays for Progressive Ranking and Composition of Web Services",
    JOURNAL = {Int'l Journal of Simulation and Process Modeling},
    VOLUME = {},
    NUMBER = {},
    PAGES = {},
    MONTH = "",
    YEAR = {scheduled to appear Jan. 2007}  }

@ARTICLE{BRYCECC-TOSEM,
    AUTHOR = "R. C. Bryce and C. J. Colbourn and M. B. Cohen",
    TITLE = "A Framework to Instantiate Greedy Algorithms for Constructing Software Interaction Tests",
    JOURNAL = { },
    VOLUME = { },
    NUMBER = { },
    PAGES = { },
    MONTH = " ",
    YEAR = {submitted for review}   }

@ARTICLE{BRYCECC-STVR,
    AUTHOR = "R. C. Bryce and C. J. Colbourn",
    TITLE = "The Density Algorithm for Pairwise Interaction Testing",
    JOURNAL = {},
    VOLUME = {},
    NUMBER = {},
    PAGES = {},
    MONTH = "",
    YEAR = {submitted for review}   }

@ARTICLE{BRYCEC-JIST,
    AUTHOR = "R. C. Bryce and C. J. Colbourn",
    TITLE = "Prioritized Interaction Testing for Pairwise Coverage with Seeding and Avoids",
    JOURNAL = {Information and Software Technology Journal (IST, Elsevier), \emph{to appear}}
}

@INPROCEEDINGS{BURR1,
    AUTHOR = "K. Burr and W. Young",
    TITLE = "Combinatorial test techniques: Table-based automation, test generation, and code coverage",
    BOOKTITLE = {Proceedings of the Int'l  Conf. on Software Testing Analysis and Review},
    PAGES = {503-513},
    MONTH = "October",
    YEAR = {1998}   }

@INPROCEEDINGS{CDS,
    AUTHOR = "C. Cheng and A. Dumitrescu and P. Schroeder",
    TITLE = "Generating small combinatorial test suites to cover input-output relationships",
    BOOKTITLE = {Proceedings of the Third Int'l Conf. on Quality Software (QSIC '03)},
    PAGES = {76-82},
    MONTH = "",
    YEAR = {2003}   }

@INPROCEEDINGS{WORDS,
    AUTHOR = "C.J. Colbourn and Y. Chen and W.T. Tsai",
    TITLE = "Progressive Ranking and Composition of Web Services Using Covering Arrays",
    BOOKTITLE = {Tenth IEEE Int'l Workshop on Object-oriented Real-time Dependable Systems (WORDS2005)},
    PAGES = {179-186},
    MONTH = "February",
    YEAR = {2005}   }

@ARTICLE{CharlieBigCAPaper,
    AUTHOR = "C. J. Colbourn",
    TITLE = "Combinatorial aspects of covering arrays",
    JOURNAL = {Le Matematiche (Catania)},
    VOLUME = {},
    NUMBER = {},
    PAGES = {},
    MONTH = "",
    YEAR = {2005}   }

@INPROCEEDINGS{DDA,
    AUTHOR = "C. J. Colbourn and M. B. Cohen and R. C. Turban",
    TITLE = "A Deterministic Density Algorithm for Pairwise Interaction Coverage",
    BOOKTITLE = {Proceedings of the IASTED Int'l  Conf. on Software Engineering},
    PAGES = {242-252},
    MONTH = "February",
    YEAR = {2004}   }

@INPROCEEDINGS{DALAL,
    AUTHOR = "S. R. Dalal and A. Karunanithi and J. Leaton and G. Patton and B. M. Horowitz",
    TITLE = "Model-based testing in practice",
    BOOKTITLE = {Proceedings of the Int'l  Conf. on Software Engineering,(ICSE '99)},
    PAGES = {285-294},
    MONTH = "",
    YEAR = {1999}   }

@ARTICLE{COHEN:TSE,
    AUTHOR = "D. M. Cohen and S. R. Dalal and M. L. Fredman and G. C. Patton",
    TITLE = "The {AETG} system: an approach to testing based on combinatorial design",
    JOURNAL = {IEEE Transactions on Software Engineering},
    VOLUME = {23},
    NUMBER = {7},
    PAGES = {437-44},
    MONTH = "October",
    YEAR = {1997}   }

@ARTICLE{COHEN:AETG,
    AUTHOR = "D. M. Cohen and S. R. Dalal and J. Parelius and G. C. Patton",
    TITLE = "The combinatorial design approach to automatic test generation",
    JOURNAL = {IEEE Software},
    VOLUME = {13},
    NUMBER = {5},
    PAGES = {82-88},
    MONTH = "October",
    YEAR = {1996}   }

@INPROCEEDINGS{COHEN:ISSRE,
    AUTHOR = "M. B. Cohen and C. J. Colbourn and A. C. H. Ling",
    TITLE = "Augmented simulated annealing to build interaction test suites",
    BOOKTITLE = {Proceedings IEEE Int'l Symposium Software Reliability Eng. (ISSRE 2003)},
    PAGES = {394-405},
    MONTH = "",
    YEAR = {2003}   }

@ARTICLE{COHEN:STRENGTH3,
    AUTHOR = "M. B. Cohen and C. J. Colbourn and A. C. H. Ling",
    TITLE = "Constructing Strength Three Covering Arrays with Augmented Annealing",
    JOURNAL = {Discrete Mathematics, (accepted October 2003)},
    VOLUME = {},
    NUMBER = {},
    PAGES = {},
    MONTH = "",
    YEAR = {to appear}  }

@INPROCEEDINGS{COHEN:SA2,
    AUTHOR = "M. B. Cohen and C. J. Colbourn and P. B. Gibbons and W. B. Mugridge",
    TITLE = "Constructing test suites for interaction testing",
    BOOKTITLE = {Proceedings of the Int'l  Conf. on Software Engineering (ICSE 2003)},
    PAGES = {28-48},
    MONTH = "May",
    YEAR = {2003}   }

@ARTICLE{CTS,
    AUTHOR = "IBM",
    TITLE = "Combinatorial Test Services Tool, \emph{Available on-line at http://www.alphaworks.ibm.com/tech/cts}",
    BOOKTITLE = {}}

@ARTICLE{DALAL-MALLOWS,
    AUTHOR = "S. R. Dalal and C. L. Mallows",
    TITLE = "Factor-Covering Designs for Testing Software",
    JOURNAL = {Technometrics},
    VOLUME = {50},
    NUMBER = {3},
    PAGES = {234--243},
    MONTH = "August",
    YEAR = {1998}   }

@INPROCEEDINGS{DUNIETZ,
    AUTHOR = "S. Dunietz and W. K. Ehrlich and B. D. Szablak and C. L. Mallows and A. Iannino",
    TITLE = "Applying design of experiments to software testing",
    BOOKTITLE = {Proceedings Int'l  Conf. on Software Engineering (ICSE '97)},
    PAGES = {205-215},
    MONTH = "October",
    YEAR = {1997}   }


@ARTICLE{elbaum-FirstPrioritizationEmpiricalStudy,
    AUTHOR = "S. Elbaum and A. Malishevsky and G. Rothermel",
    TITLE = "Test case prioritization: A family of empirical studies",
    JOURNAL = {IEEE Transactions on  Software Engineering},
    VOLUME = {18},
    NUMBER = {2},
    PAGES = {159-182},
    MONTH = "",
    YEAR = {2002}   }

@ARTICLE{elbaum-BiggestPrioritizationStudy,
    AUTHOR = "S. Elbaum and G. Rothermel and S. Kanduri and A. Malishevsky",
    TITLE = "Selecting a Cost-Effective Test Case Prioritization
Technique",
    JOURNAL = {Software Quality Journal},
    VOLUME = {12},
    NUMBER = {3},
    PAGES = {185-210},
    MONTH = "",
    YEAR = {2004}   }

@ARTICLE{combinationSurvey,
    AUTHOR = "M. Grindal and J. Offutt and S. Andler",
    TITLE = "Combination testing strategies: a survey",
    JOURNAL = {Software Testing, Verification, and Reliability},
    VOLUME = {15},
    NUMBER = {},
    PAGES = {167-199},
    MONTH = "March",
    YEAR = {2005}   }

@ARTICLE{CP,
    AUTHOR = "B. Hnich and S. Prestwich and E. Selensky",
    TITLE = "Constraint-Based Approaches to the Covering Test Problem",
    JOURNAL = {Lecture Notes in Computer Science},
    VOLUME = {3419},
    NUMBER = {1},
    PAGES = {172-186},
    MONTH = "",
    YEAR = {2005}   }

@INPROCEEDINGS{WISER,
    AUTHOR = "D. S. Hoskins and R. C. Turban and C.~J. Colbourn",
    TITLE = "Experimental Designs in Software Engineering: D-Optimal
Designs and Covering Arrays",
    BOOKTITLE = {Proceedings SIGSOFT 2004/FSE-12: Workshop on Interdisciplinary
Software Engineering Research},
    PAGES = {55-66},
    MONTH = "November",
    YEAR = {2004}   }

@INPROCEEDINGS{KUHN1,
    AUTHOR = "D. Kuhn and M. Reilly",
    TITLE = "An investigation of the applicability of design of experiments to software testing",
    BOOKTITLE = {Proceedings 27th Annual NASA Goddard/IEEE Software Engineering Workshop},
    PAGES = {91-95},
    MONTH = "October",
    YEAR = {2002}   }

@ARTICLE{KUHN2,
    AUTHOR = "D. R. Kuhn and D. R. Wallace and A. M. Gallo",
    TITLE = "Software Fault Interactions and Implications for Software Testing",
    JOURNAL = {IEEE Transactions on  Software Engineering},
    VOLUME = {30},
    NUMBER = {6},
    PAGES = {418-421},
    MONTH = "October",
    YEAR = {2004}   }

@ARTICLE{CAWSE,
    AUTHOR = "J. N. Cawse",
    TITLE = "Experimental Design for Combinatorial and High Throughput Materials Development",
    JOURNAL = {GE Global Research Technical Report},
    VOLUME = {29},
    NUMBER = {9},
    PAGES = {769-781},
    MONTH = "November",
    YEAR = {2002}   }

@ARTICLE{COHEN:THESIS,
    AUTHOR = "M. B. Cohen",
    TITLE = "Designing test suites for software interaction testing",
    JOURNAL = {Ph.D. Thesis, The University of Auckland, Department of Computer Science},
    VOLUME = {},
    NUMBER = {},
    PAGES = {},
    MONTH = "",
    YEAR = {2004}   }

@ARTICLE{reneeThesis,
    AUTHOR = "R. C. Turban",
    TITLE = "Algorithms for Covering Arrays",
    JOURNAL = {Ph.D. Thesis, Arizona State University, Department of Computer Science and Engineering},
    VOLUME = {},
    NUMBER = {},
    PAGES = {},
    MONTH = "",
    YEAR = {2006}   }

@ARTICLE{CS,
    AUTHOR = "J. H. Conway and N. J. A. Sloane",
    TITLE = "Lexicographic codes: error correcting codes from game theory",
    JOURNAL = {IEEE Transactions on  Inform. Theory},
    VOLUME = {32},
    NUMBER = {},
    PAGES = {337-348},
    MONTH = "",
    YEAR = {1986}   }

@BOOK{Copeland,
    AUTHOR = "L. Copeland",
    TITLE = "Pair-wise testing. In A Practitioner�s Guide to Software Test Design",
    PUBLISHER = "Artech House",
    ADDRESS = "Chapter 6",
    YEAR = "2003"   }

@BOOK{Whittaker,
    AUTHOR = "J. A. Whittaker",
    TITLE = "Testing from the user interface: Inputs and outputs. In How to Break
Software, A Practical Guide to Testing",
    PUBLISHER = "Pearson Addison Wesley",
    ADDRESS = "Chapter 2",
    YEAR = "2002"   }

@ARTICLE{DG,
    AUTHOR = "P. C. Denny and P. B. Gibbons",
    TITLE = "Case studies and new results in combinatorial enumeration",
    JOURNAL = {Journal of Combinatorial Designs},
    VOLUME = {8},
    NUMBER = {},
    PAGES = {239-260},
    MONTH = "",
    YEAR = {2000}   }

@INPROCEEDINGS{Dum03,
    AUTHOR = "A. Dumitrescu",
    TITLE = "Efficient algorithms for generation of combinatorial covering suites",
    BOOKTITLE = {Proceedings 14-th Annual Int'l  Symposium Algorithms and Computation (ISAAC '03), Lecture
    Notes in Computer Science},
    PAGES = {300-308},
    MONTH = "",
    YEAR = {2003}   }

@ARTICLE{FISHER,
    AUTHOR = "R. A. Fisher",
    TITLE = "The Arrangement of Field Experiments",
    JOURNAL = {Journal of Ministry of Agriculture of Great Britain},
    VOLUME = {33},
    NUMBER = {9},
    PAGES = {503-513},
    MONTH = "November",
    YEAR = {1926}   }

@ARTICLE{Gibbons,
    AUTHOR = "P. B. Gibbons and R. A. Mathon and D. G. Corneil",
    TITLE = "Computing techniques for the construction and analysis of block designs",
    JOURNAL = {Utilitas Math.},
    VOLUME = {11},
    NUMBER = {},
    PAGES = {161-192},
    MONTH = "",
    YEAR = {1977}   }



@BOOK{HartmanBigPaper,
    AUTHOR = "A. Hartman",
    TITLE = "Software and hardware testing using combinatorial covering suites in \it{Haifa Workshop on
    Interdisciplinary Applications of Graph Theory, Combinatorics, and Algorithms}",
    PUBLISHER = "M. C. Golumbic, Ed. Kluwer Academic Press",
    ADDRESS = "Norwell, MA",
    YEAR = "2005"   }

@ARTICLE{CTS1,
    AUTHOR = "A. Hartman and L. Raskin",
    TITLE = "Problems and algorithms for covering arrays",
    JOURNAL = {Discrete Math.},
    VOLUME = {284},
    NUMBER = {},
    PAGES = {149-156},
    MONTH = "",
    YEAR = {2004}   }

@ARTICLE{HY,
    AUTHOR = "A. Hartman and Z. Yehudai",
    TITLE = "Greedesigns",
    JOURNAL = {Ars Combin.},
    VOLUME = {29C},
    NUMBER = {},
    PAGES = {69-76},
    MONTH = "",
    YEAR = {1990}   }

@BOOK{oas,
    AUTHOR = "A. Hedayat and N. Sloane and J. Stufken",
    TITLE = "Orthogonal Arrays",
    PUBLISHER = "Springer-Verlag, New York",
    YEAR = {1999}   }

@ARTICLE{KTK2,
    AUTHOR = "N. Kobayashi and T. Tsuchiya and T. Kikuno",
    TITLE = "A new method for constructing pair-wise covering designs for software testing",
    JOURNAL = {Information Processing Letters},
    VOLUME = {81},
    NUMBER = {},
    PAGES = {85-91},
    MONTH = "",
    YEAR = {2002}   }

@ARTICLE{LAZIC,
    AUTHOR = "L. J. Lazi\'c and D. Vela\^sevi\'c",
    TITLE = "Applying simulation and design of experiments to the
embedded software testing process",
    JOURNAL = {Software Testing, Verification, and Reliability},
    VOLUME = {14},
    NUMBER = {},
    PAGES = {257-�282},
    MONTH = "",
    YEAR = {2004}   }

@INPROCEEDINGS{antiRandom,
    AUTHOR = "Y. K. Malaiya",
    TITLE = "Antirandom testing: getting the most out of black-box testing",
    BOOKTITLE = {Proceeding of Int'l  Symposium on Software Reliability Engineering (ISSRE'95)},
    VOLUME = {},
    NUMBER = {},
    PAGES = {86-95},
    MONTH = "October",
    YEAR = {1995}}


@ARTICLE{MANDL,
    AUTHOR = "R. Mandl",
    TITLE = "Orthogonal latin squares an application of experiment design to compiler testing",
    JOURNAL = {Communications of the ACM},
    VOLUME = {28},
    NUMBER = {10},
    PAGES = {1054-1058},
    MONTH = "October",
    YEAR = {1985}   }

@BOOK{MONTGOMERY,
    AUTHOR = "D.C. Montgomery",
    TITLE = "Design and Analysis of Experiments 5th edition",
    PUBLISHER = "John Wiley and Sons",
    ADDRESS = "New York NY",
    YEAR = "2001"   }

@ARTICLE{partitioning,
    AUTHOR = "T. J. Ostrand and M. J. Balcer",
    TITLE = "The Category-Partition method for specifying and generating functional tests",
    JOURNAL = {Communications of the ACM},
    VOLUME = {31},
    NUMBER = {6},
    PAGES = {676-686},
    MONTH = "June",
    YEAR = {1988}   }

@ARTICLE{NIST,
    AUTHOR = "NIST",
    TITLE = "The Economic Impacts of Inadequate Infrastructure for software testing",
    MONTH = "March",
    YEAR = {2003}   }

@ARTICLE{TABU,
    AUTHOR = "K. Nurmela",
    TITLE = "Upper bounds for covering arrays by tabu search",
    JOURNAL = {Discrete Applied Math.},
    VOLUME = {138},
    NUMBER = {9},
    PAGES = {143-152},
    MONTH = "March",
    YEAR = {2004}   }

@ARTICLE{rothermel-BigPrioritizationPaper,
    AUTHOR = "G. Rothermel and R. H. Untch and C. Chu and M. J. Harrold",
    TITLE = "Prioritizing Test Cases For Regression Testing",
    JOURNAL = {ACM Transactions on  Software Engineering and Methodology},
    VOLUME = {27},
    NUMBER = {10},
    PAGES = {929-948},
    MONTH = "",
    YEAR = {2001}   }

@INPROCEEDINGS{prioritization-MS,
    AUTHOR = "A. Srivastava and J. Thiagarajan",
    TITLE = "Effectively Prioritizing Tests in Development
Environment",
    BOOKTITLE = {Proceedings Int'l Symposium on
Software Testing and Analysis},
    PAGES = {97-106},
    MONTH = "",
    YEAR = {2002}   }

@ARTICLE{SHASHA,
    AUTHOR = "D. Shasha and A. Kouranov and L. Lejay and M. Chou and G. Coruzzi",
    TITLE = "Using Combinatorial Design to Study Regulation by Multiple Input Signals. A tool for Parsimony in the
    Post-Genomics Era",
    JOURNAL = {Plant Physiology},
    VOLUME = {27},
    NUMBER = {},
    PAGES = {1590-1594},
    MONTH = "",
    YEAR = {2001}   }

@ARTICLE{IPO,
    AUTHOR = "K.C. Tai and L.Yu",
    TITLE = "A test generation strategy for pairwise testing",
    JOURNAL = {IEEE Transactions on Software Engineering},
    VOLUME = {28},
    NUMBER = {},
    PAGES = {109-111},
    MONTH = "",
    YEAR = {2002}   }

@ARTICLE{PHADKE,
    AUTHOR = "M. S. Phadke",
    TITLE = "Planning efficient software tests",
    JOURNAL = {CrossTalk - Journal of Defense Software Engineering},
    VOLUME = {10},
    NUMBER = {10},
    PAGES = {11-15},
    MONTH = "October",
    YEAR = {1997}   }

@BOOK{stardom,
    AUTHOR = "J. Stardom",
    TITLE = "Metaheuristics and the search for covering and packing arrays",
    PUBLISHER = {Master's thesis},
    ADDRESS = "Simon Fraser University",
    YEAR = {2001}   }

@INPROCEEDINGS{TCG,
    AUTHOR = "Y.W. Tung and W.S. Aldiwan",
    TITLE = "Automating test case generation for the new generation mission software system",
    BOOKTITLE = {IEEE Aerospace Conf.},
    PAGES = {431-37},
    MONTH = "",
    YEAR = {2000}   }


@BOOK{Wells,
    AUTHOR = "M. B. Wells",
    TITLE = "Elements of Combinatorial Computing",
    PUBLISHER = "Pergamon Press",
    ADDRESS = "Oxford-New York-Toronto",
    YEAR = "1971"   }

@INPROCEEDINGS{TCONFIG1,
    AUTHOR = "A. W. Williams and R. L. Probert",
    TITLE = "A practical strategy for testing pair-wise coverage of network interfaces",
    BOOKTITLE = {Seventh Int'l  Symposium on Software Reliability Engineering},
    VOLUME = {},
    NUMBER = {},
    PAGES = {246-254},
    MONTH = "",
    YEAR = {1996}   }

@INPROCEEDINGS{TCONFIG2,
    AUTHOR = "A. W. Williams",
    TITLE = "Determination of test configurations for pair-wise interaction coverage. {T}esting of Communicating
    Systems: Tools and Techniques",
    BOOKTITLE = {13th Int'l  Conf. on Testing Communicating Systems },
    VOLUME = {},
    NUMBER = {},
    PAGES = {59-74},
    MONTH = "October",
    YEAR = {2000}   }

@INPROCEEDINGS{TCONFIG3,
    AUTHOR = "A. W. Williams and R. L. Probert",
    TITLE = "A measure for component interaction test coverage",
    BOOKTITLE = {Proceedings ACS/IEEE Int'l  Conf. on Computer Systems and Applications},
    PAGES = {301-311},
    MONTH = "October",
    YEAR = {2001}   }

@ARTICLE{VADDE-NETWORKS,
    AUTHOR = "K. Vadde and V.R. Syrotiuk",
    TITLE = "Factor interactions on service delivery in mobile and ad hoc networks",
    JOURNAL = {IEEE Journal on Selected Areas in Communications},
    VOLUME = {22},
    NUMBER = {7},
    PAGES = {1335-1346},
    MONTH = "September",
    YEAR = {2004}   }

@INPROCEEDINGS{GUITEST,
    AUTHOR = "L. White and H. Almezen",
    TITLE = "Generating test cases for GUI responsibilities using complete interaction sequences",
    BOOKTITLE = {Proceedings of the Interactional Symposium on Software Reliability Engineering},
    PAGES = {110-121},
    MONTH = "",
    YEAR = {2000}   }

@ARTICLE{whittaker-markov1,
    AUTHOR = "J. A. Whittaker and J. H. Poore",
    TITLE = "Markov Analysis of Software Specifications",
    JOURNAL = {ACM Transactions on  Software Engineering and Methodology},
    VOLUME = {2},
    NUMBER = {1},
    PAGES = {93-106},
    MONTH = "",
    YEAR = {1993}   }

@ARTICLE{whittaker-markov2,
    AUTHOR = "J. A. Whittaker and M. G. Thomason",
    TITLE = "A Markov Chain Model for Statistical Softare Testing",
    JOURNAL = {IEEE Transactions on Software Engineering},
    VOLUME = {20},
    NUMBER = {10},
    PAGES = {812-824},
    MONTH = "",
    YEAR = {1994}   }

@INPROCEEDINGS{YILMAZ,
    AUTHOR = "C. Yilmaz and M. B. Cohen and A. Porter",
    TITLE = "Covering arrays for efficient fault characterization in complex configuration spaces",
    BOOKTITLE = {Int'l  Symposium on Software Testing and Analysis},
    VOLUME = {},
    NUMBER = {},
    PAGES = {45-54},
    MONTH = "July",
    YEAR = {2004}   }

@INPROCEEDINGS{Shroeder-Bach,
    AUTHOR = "J. Bach and P. Shroeder",
    TITLE = "Pairwise Testing: A Best Practice That Isn't",
    BOOKTITLE = {Proceedings of 22nd Pacific Northwest Software Quality Conf.},
    VOLUME = {},
    NUMBER = {},
    PAGES = {180-196},
    MONTH = "",
    YEAR = {2004}   }


@inproceedings{Lutz00:Roadmap,
    author = "Robyn R. Lutz",
    title = "Software engineering for safety: a roadmap",
    booktitle = "{ICSE 2000} - Future of Software Engineering Track",
    pages = "213-226",
    year = "2000",
    editor =       "Anthony Finkelstein",
    publisher =    "ACM Press",
    address =      "New York, NY, USA",
    isbn =         "1-58113-253-0",
    url = "citeseer.ist.psu.edu/article/lutz00software.html" }


@book{Herrmann00:Reliability,
author= "Debra S. Herrmann",
title= "Software Safety and Reliability: Techniques, Approaches, and Standards of Key Industrial Sectors",
publisher= "Wiley-IEEE Computer Society Press",
isbn={978-0-7695-0299-1},
address= {USA},
year= 2000
}

@PROCEEDINGS{FoSE:2000,
  TITLE =        "{ICSE 2000} - Future of Software Engineering Track",
  YEAR =         "2000",
  editor =       "Anthony Finkelstein",
  publisher =    "ACM Press",
  address =      "New York, NY, USA",
  isbn =         "1-58113-253-0"
}

@PROCEEDINGS{FoSE:2007,
  TITLE =        "Future of Software Engineering 2007",
  YEAR =         "2007",
  editor =       "L. Briand and A. Wolf",
  publisher =    "IEEE-CS Press"
}



@BOOK{Raheja91,
  AUTHOR =       "D.~Raheja",
  TITLE =        "Assurance Technologies: Principles and Practices",
  PUBLISHER =    "McGraw-Hill",
  YEAR =         "1991"
}

@BOOK{Storey96,
  AUTHOR =       "N.~Storey",
  TITLE =        "Safety-Critical Computer Systems",
  PUBLISHER =    "Addison Wesley Longman",
  YEAR =         "1996",
  address =      "Harlow, England"
}

@ARTICLE{Knight06:education,
  AUTHOR =       "John C. Knight and Nancy G. Leveson",
  TITLE =        "Software and Higher Education",
  JOURNAL =      "Communications of the ACM",
  YEAR =         "2006",
  volume =       "Vol. 49",
  number =       "No. 1",
  pages =        "160",
  month =        "January"
}

@ARTICLE{Knight02:licensing,
  AUTHOR =       "John C. Knight and Nancy G. Leveson",
  TITLE =        "Should Software Engineers Be Licensed?",
  JOURNAL =      "Communications of the ACM",
  YEAR =         "2002",
  volume =       "Vol. 45",
  number =       "No. 11",
  pages =        "87--90",
  month =        "November"
}

@ARTICLE{Knight05:education,
  AUTHOR =       "John C. Knight",
  TITLE =        "Focusing Software Education on Engineering",
  JOURNAL =      "ACM SIGSOFT Software Engineering Notes",
  YEAR =         "2005",
  volume =       "Vol. 30",
  number =       "No. 2",
  month =        "March"
}


@ARTICLE{Parnas90:education,
  AUTHOR =       "David Lorge Parnas",
  TITLE =        "Education for Computing Professionals",
  JOURNAL =      "IEEE Computer",
  YEAR =         "1990",
  volume =       "Vol. 23",
  number =       "No. 1",
  month =        "January"
}

@inproceedings{FoSE07:Education,
    AUTHOR =       "T. Lethbridge and J. Diaz-Herrera and R. LeBlanc and J. Thompson",
    TITLE =        "Improving Software Practice through Education: Challenges and Future Trends",
    booktitle = "Future of Software Engineering 2007",
    year = "20007",
    publisher = "IEEE-CS Press",
    editor = "L. Briand and A. Wolf"}

@inproceedings{FoSE07:Requirements,
    AUTHOR =       "B. Cheng and J. Atlee",
    TITLE =        "Research Directions in Requirements Engineering",
    booktitle = "Future of Software Engineering 2007",
    year = "20007",
    publisher = "IEEE-CS Press",
    editor = "L. Briand and A. Wolf"}

@inproceedings{FoSE07:Model-Based,
    AUTHOR =       "R. France and B. Rumpe",
    TITLE =        "Model-driven Development of Complex Systems: A Research Roadmap",
    booktitle = "Future of Software Engineering 2007",
    year = "20007",
    publisher = "IEEE-CS Press",
    editor = "L. Briand and A. Wolf"}

@inproceedings{FoSE07:Architecture,
    AUTHOR =       "R.~Taylor and A.~van der Hoek",
    TITLE =        "Software Design and Architecture: The Once and Future Focus of Software Engineering",
    booktitle = "Future of Software Engineering 2007",
    year = "20007",
    publisher = "IEEE-CS Press",
    editor = "L. Briand and A. Wolf"}

@inproceedings{FoSE07:FormalMethods,
    AUTHOR =       "M. Dwyer and J. Hatcliff and C. Pasareanu and Robby and W. Visser",
    TITLE =        "Formal Software Analysis: Emerging Trends in Software Model Checking",
    booktitle = "Future of Software Engineering 2007",
    year = "20007",
    publisher = "IEEE-CS Press",
    editor = "L. Briand and A. Wolf"}

@inproceedings{FoSE07:Testing,
    AUTHOR =       "A. Bertolino",
    TITLE =        "Software Testing Research: Achievements, Challenges, Dreams",
    booktitle = "Future of Software Engineering 2007",
    year = "2007",
    publisher = "IEEE-CS Press",
    editor = "L. Briand and A. Wolf"}




@INPROCEEDINGS{Leveson03:NewApproach,
  AUTHOR =       "Nancy G.~Leveson",
  TITLE =        "A New Approach to Hazard Analysis for Complex Systems ",
  BOOKTITLE =    "Proceedings of the Int'l Conf. of the System Safety Society",
  YEAR =         "2003",
  address =      "Ottawa, Canada",
  month =        "August"
}

@ARTICLE{Leveson05:SystemTheoretic,
  AUTHOR =       "Nancy G. Leveson",
  TITLE =        "A Systems-Theoretic Approach to Safety in Software-Intensive Systems",
  JOURNAL =      "IEEE Transactions on Dependable and Secure Computing",
  YEAR =         "2005",
  volume =       "Vol. 1",
  number =       "No. 1",
  pages =        "66--86",
  month =        "January-March"
}

@BOOK{IEC61508,
  TITLE =        "IEC-61508: Functional Safety of Electrical/ Electronic/ Programmable Electronic Safety-Related
  Systems",
  PUBLISHER =    "Int'l Electrotechnical Commission (IEC)",
  YEAR =         "1999",
  KEY = "IEC61508"
}

@inproceedings{McDermid01:WhereIsEvidence,
 author = {John A McDermid},
 title = {Software safety: where's the evidence?},
 booktitle = {SCS '01: Proceedings of the Sixth Australian workshop on Safety critical systems and software},
 year = {2001},
 isbn = {0-909-92581-X},
 pages = {1--6},
 location = {Brisbane, Australia},
 publisher = {Australian Computer Society, Inc.},
 address = {Darlinghurst, Australia, Australia},
 }

@inproceedings{Shooman96:OccurenceRates,
 author = {Martin L. Shooman},
 title = {Avionics software problem occurrence rates},
 booktitle = {Proceedings of the Seventh Int'l Symposium on Software Reliability Engineering},
 year = {1996},
 pages = {55--64 }
 }

@inproceedings{Bishop98:Methodology,
    author = "Peter Bishop and Robin Bloomfield",
    title = "A Methodology for Safety Case Development",
    booktitle = "Industrial Perspectives of Safety-critical Systems: Proceedings of the Sixth Safety-critical
    Systems Symposium",
    publisher = "Springer",
    editor = "Felix Redmill and Tom Anderson",
    pages = "194--203",
    year = "1998" }

@inproceedings{Wilson96:AssessingUsingGSN,
 author = {S P. Wilson and J A. McDermid and C H. Pygott and D J. Tombs},
 title = {Assessing Complex Computer Based Systems using the Goal Structuring Notation},
 booktitle = {ICECCS '96: Proceedings of the 2nd IEEE Int'l Conf. on Engineering of Complex Computer
 Systems (ICECCS '96)},
 year = {1996},
 isbn = {0-8186-7614-0},
 pages = {498},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

 @inproceedings{Kelly04:GSN,
 author = "T. P. Kelly and R. A. Weaver",
 title = "The Goal Structuring Notation--A Safety Argument Notation",
 booktitle = "Proceedings of the Dependable Systems and Networks 2004 Workshop on Assurance Cases",
 year = {2004}
 }



@inproceedings{Greenwell06:Taxonomy,
    author = "William S.~Greenwell and John C.~Knight and C.~Michael Holloway and Jacob J.~Pease",
    title = "A Taxonomy of Fallacies in System Safety Arguments",
    booktitle = "Proceedings of the 2006 Int'l System Safety Conf.",
    year = "2006" }

@MISC{Vioxx,
  author =       "Merck",
  title =        "VIOXX Home Page",
  howpublished = "http://www.vioxx.com/",
  year =         "2004"
}

@BOOK{DrugSafety,
  TITLE =        "The Future of Drug Safety: Promoting and Protecting the Health of the Public",
  PUBLISHER =    "Board on Population Health and Public Health Practice (BPH), Institute of Medicine (IOM) ",
  YEAR =         "2006",
  isbn =         "ISBN: 0309103363 ",
  key = "BoardOnPopulation"
}



@INPROCEEDINGS{VanWyk05:CallToArms,
  AUTHOR =       "Eric Van Wyk and Mats P.E~Heimdahl",
  TITLE =        "Flexibility in Modeling Languages and Tools: A Call to Arms",
  BOOKTITLE =    "Proceedings of the IEEE ISoLA Workshop on Leveraging Applications of Formal Methods, Verification,
  and Validation",
  YEAR =         "2005",
  address =      "Columbia, Maryland, USA",
  month =        "September"
}

@INPROCEEDINGS{McDermid01:Consensus,
  AUTHOR =       "J. A. McDermid and D. J. Pumfrey",
  TITLE =        "Software Safety: Why is there no Consensus?",
  BOOKTITLE =    "Proceedings of the 19th Int'l System Safety Conf.",
  YEAR =         "2001",
  organization = "System Safety Society"
}



@MISC{FAAToolsForum04,
  title =        "{S}oftware {T}ools {W}orkshop of {FAA} and {E}mbry-{R}iddle {A}eronautical {U}niversity",
  howpublished = "\\http://www.erau.edu/db/campus/softwaretoolsforum.html",
  year =         "2004",
  month =        "May",
  KEY = "FAAToolsForum"
}

@MISC{SC205,
  title =        "{RTCA SC-205} ({J}oint with {EUROCAE WG-71}) {S}oftware {C}onsiderations",
  howpublished = "\\http://www.rtca.org/comm/Committee.cfm?id=55",
  key = "SC205"
  }

@inproceedings{Storey03:Data,
  author    = {N. Storey and
               A. Faulkner},
  title     = {The Characteristics of Data in Data-Intensive Safety-Related
               Systems.},
  booktitle = {SAFECOMP},
  year      = {2003},
  pages     = {396-409}
}


@ARTICLE{Storey03:Forgotten,
  AUTHOR =       "N. Storey and
                    A. Faulkner",
  TITLE =        "Data---The Forgotten System Component?",
  JOURNAL =      "Journal of System Safety",
  YEAR =         "2003",
  volume =       "Vol. 39",
  number =       "No. 4",
  pages =        "10-14, 36"
}


@INBOOK{Cook05:Prescription,
  AUTHOR =       "R. I. Cook RI and M. F. O'Connor",
  TITLE =        "Medication Safety: A Guide to Health Care Facilities",
  CHAPTER =      "Thinking about accidents and systems",
  pages =        "73--87",
  PUBLISHER =    "American Society of Health-System Pharmacists",
  YEAR =         "2005",
  address =      "Bethesda, MD"
}

@INPROCEEDINGS{Knight04:DataDriven,
  AUTHOR =       "John C. Knight and Elisabeth A. Strunk and William S. Greenwell and Kimberly S. Wasson",
  TITLE =        "Specification and Analysis of Data for Safety-Critical Systems",
  BOOKTITLE =    "22nd Int'l System Safety Conf.",
  YEAR =         "2004",
  address =      "Providence, RI",
  month =        "August"
}

%% Live Sequence Charts / Message Sequence Charts (Protoplasm)

@Article{Rudin85:protocols,
author = {Rudin, Harry},
title = {An informal overview of protocol specification},
journal = {Communications Magazine, IEEE},
year = {1985},
OPTvolume = {23},
OPTnumber = {3},
OPTpages = {46-52},
OPTmonth = {March},
OPTannote = {Gives an overview of protocol specification methods, including CSP and LOTOS.}
}

@Article{SchwartzSmith82:protocols,
author = {Schwartz, Richard and Melliar-Smith, P. Michael},
title = {From State Machines to Temporal Logic: Specification Methods for Protocol Standards },
journal = {IEEE Transactions on Communications},
year = {1982},
OPTvolume = {30},
OPTnumber = {12},
OPTpages = {2486-2496},
OPTmonth = {December},
OPTannote = {Gives an overview of varoius methods of specifying protocols circa 1982,
    including state machines, temporal logic, and permuations of the temporal logic.}
}

@inproceedings{BochmannPetrenko94:protocols,
 author = {Gregor V. Bochmann and Alexandre Petrenko},
 title = {Protocol testing: review of methods and relevance for software testing},
 booktitle = {ISSTA '94: Proceedings of the 1994 ACM SIGSOFT Int'l symposium on Software testing and
 analysis},
 year = {1994},
 isbn = {0-89791-683-2},
 pages = {109--124},
 location = {Seattle, Washington, United States},
 doi = {http://doi.acm.org/10.1145/186258.187153},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 OPTannote= {Gives an overview of various methods of specifying and testing protocols. Of particular note
    is information on Estelle, SDL, LOTOS, FSM, and Petri nets.}
 }

@article{Selic99:UMLrealtime,
 author = {Bran Selic},
 title = {Turning clockwise: using UML in the real-time domain},
 journal = {Commun. ACM},
 volume = {42},
 number = {10},
 year = {1999},
 issn = {0001-0782},
 pages = {46--54},
 doi = {http://doi.acm.org/10.1145/317665.317675},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 OPTannote= {Uses UML to model in the real-time domain, with a focus on the use of state machines.
    The method presented does not appear particularly powerful or novel.}
 }

@INPROCEEDINGS{Fecher05:UML,
    author = {Harald Fecher and Jens Schnborn and Marcel Kyas and Willem-paul De Roever},
    title = {29 New unclarities in the semantics of UML 2.0 state machines},
    booktitle = {Proceedings of the 7th Int'l Conf. on formal engineering methods (ICFEM05)},
    year = {2005},
    pages = {52--65}
}

@inproceedings{Mauw97:HMSCs,
    author = "S. Mauw and M. A. Reniers",
    title = "High-level message sequence charts",
    booktitle = "Proceedings of the Eighth {SDL} Forum {({SDL}'97)}",
    pages = "291--306",
    year = "1997",
    url = "citeseer.ist.psu.edu/63307.html",
    OPTannote= {Demonstrates the use of MSCs for specifying protocols by specifying the alternating
    bit protocol. Seems fairly informal.}
 }

@Conf.{bohn2002mav,
  title={{Modeling and Validating Train System Applications Using Statemate and Live Sequence Charts}},
  author={Bohn, J. and Damm, W. and Klose, J. and Moik, A. and Wittke, H.},
  booktitle={Proceedings of the Sixth Biennial World Conf. on Integrated Design and Process Technology},
  year={2002}
}


@Conf.{bontemps2003als,
  title={{Applying LSCs to the specification of an air traffic control system}},
  author={Bontemps, Y. and Heymans, P. and Kugler, H.},
  booktitle={Proc. of the 2nd Int. Workshop on 'Scenarios and State Machines: Models, Algorithms and
  Tools'(SCESM '03), at the 25th Int. Conf. on Soft. Eng.(ICSE '03), Portland, OR, USA, May},
  year={2003}
}


@inproceedings{BohnDamm02:LSCtrains,
  author = "J. Bohn and W. Damm and J. Klose and A. Moik and H. Wittke et al.",
  title = "Modeling and validating train system applications using Statemate and Live
    Sequence Charts",
  editor = "H. Ehrig and B. J. Kramer and A. Ertas",
  booktitle = "Proceedings of the Conf. on Integrated Design and Process
    Technology (IDPT2002)",
  year = "2002",
  url = "citeseer.ist.psu.edu/bohn02modeling.html",
  OPTannote= {Uses LSCs to specify, verify and generate test vectors for a protocol related to train switching.
    Good example of using LSCs for specification, but information on exactly what verification is done and,
    more glaringly, how it was done is sparse.}
}

@misc{Bontemps02:LSCtoAuto,
  author = "Y. Bontemps and P. Heymans",
  title = "Turning high-level Live Sequence Charts into automata",
  text = "Y. Bontemps and P. Heymans. Turning high-level Live Sequence Charts into
    automata. In Proc. of Scenarios and State-Machines: models, algorithms and
    tools (SCESM) workshop of the 24th Int. Conf. on Software Engineering (ICSE
    2002.",
  year = "2002",
  url = "citeseer.ist.psu.edu/bontemps03turning.html",
  OPTannote= {Describes how to convert LSCs into automata.}
}

@inproceedings{Koning01:protocols,
 author = {Jean-Luc Koning and Marc-Philippe Huget and Jun Wei and Xu Wang},
 title = {Extended Modeling Languages for Interaction Protocol Design},
 booktitle = {AOSE '01: Revised Papers and Invited Contributions from the Second Int'l Workshop on
 Agent-Oriented Software Engineering II},
 year = {2002},
 isbn = {3-540-43282-5},
 pages = {68--83},
 publisher = {Springer-Verlag},
 address = {London, UK},
 OPTannote= { Explains the use of Unified Agent Modeling Language and Agent UML for agent (not communication)
 protocols.}
 }

 @inproceedings{ Malik03:verifyUML,
  author = {R. Malik and R. M\"uhlfeld},
  title = {A Case Study in Verification of {UML} Statecharts:
    the {PROFIsafe} Protocol},
  booktitle = {Proc. 5th Workshop on Tools for System Design and
    Verification, FM-TOOLS 2002},
  pages = {89--93},
  year = {2002},
  url = {citeseer.ist.psu.edu/malik02case.html},
OPTannote = {Describes a method of turning UML statecharts into FSM and verifying properties
    using the VALID toolset.} }

@article{Letichevsky05:protocols,
 author = {A. Letichevsky and J. Kapitonova and A. Letichevsky, Jr. and V. Volkov and S. Baranov and T. Weigert},
 title = {Basic protocols, message sequence charts, and the verification of requirements specifications},
 journal = {Comput. Networks},
 volume = {49},
 number = {5},
 year = {2005},
 issn = {1389-1286},
 pages = {661--675},
 doi = {http://dx.doi.org/10.1016/j.comnet.2005.05.005},
 publisher = {Elsevier North-Holland, Inc.},
 address = {New York, NY, USA},
 OPTannote = {Demonstrates the use of annotated SDL and MSCs to generate traces and verify properties defined.
 Contains references to other systems such as PTK (semantic analysis) and FatCat (checking for nondeterminism) }
 }

@inproceedings{ Alur99:MSCs,
    author = "R. Alur and M. Yannakakis",
    title = "Model Checking of Message Sequence Charts",
    booktitle = "Proc. 10th Intl. Conf. on Concurrency Theory",
    publisher = "Springer Verlag",
    pages = "114--129",
    year = "1999",
    url = "citeseer.ist.psu.edu/alur99model.html",
    OPTannote= {Demonstrates methods of model checking synchronous MSCs/HMSCs and bounded model checking of
    ansynchronous
     MCSs/HMSC. Model checking is done by constructing an automaton A which accepts all undesirable executions and
     verifying that the intersection of L(M) and L(A) is empty. }
 }

@book{Harel03:Playbook,
 author = {David Harel and Rami Marelly},
 title = {Come Let's Play: Scenario-Based Programming Using LSC's and the Play-Engine},
 year = {2003},
 isbn = {3540007873},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA}
 }

 @inproceedings{ClarkeEmerson83:concurrent,
 author = {E. M. Clarke and E. A. Emerson and A. P. Sistla},
 title = {Automatic verification of finite state concurrent system using temporal logic specifications: a practical
 approach},
 booktitle = {POPL '83: Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming
 languages},
 year = {1983},
 isbn = {0-89791-090-7},
 pages = {117--126},
 location = {Austin, Texas},
 doi = {http://doi.acm.org/10.1145/567067.567080},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@BOOK{Kugler05:Temporal,
  AUTHOR =       {Hillel Kugler and David Harel and Amir Pnueli and Yuan Lu and Yves Bontemps},
  TITLE =        {Temporal Logic for Scenario-Based Specifications},
  PUBLISHER =    {Springer Berlin / Heidelberg},
  YEAR =         {2005},
  isbn =         { 978-3-540-25333-4},
  OPTannote= {Demonstrates how to translate a subset of LSCs omitting variables and
      conditional looping to CTL*. }
}

@Article{bunker05:LSCsVCI,
  author =   {Annette Bunker and Ganesh Gopalakrishnan and Konrad Slind},
  title =    {Live Sequence Charts Applied to Hardware Requirements
                  Specification and Verification:  A VCI Bus Interface Model},
  journal =      {Software Tools for Technology Transfer},
  year =     2005,
  volume =   7,
  number =   4,
  pages =    {341-350},
  month =    {August},
    OPTannote= {Example of specification and verification of hardware  via LSCs. Light on
    verification info.}
}


@TECHREPORT{SLICspec02,
  AUTHOR =       {Thomas Ball and Sriram K. Rajamani},
  TITLE =        {SLIC: A Specification Language for Interface Checking (of C)},
  INSTITUTION =  {Microsoft Research},
  YEAR =         {20002},
  OPTannote= {Gives a basic overview of SLIC's use in SLAM as a monitoring language.}
}

@misc{henzinger03:BLAST,
  author = "T. Henzinger and R. Jhala and R. Majumdar and G. Sutre",
  title = "Software verification with Blast",
  text = "Thomas A. Henzinger, Ranjit Jhala, Rupak Majumdar, and Gregoire Sutre.
    Software verification with Blast. In Tenth Int'l Workshop on Model
    Checking of Software (SPIN), volume 2648 of Lecture Notes in Computer Science,
    pages 235--239. Springer-Verlag, 2003.",
  year = "2003",
  url = "citeseer.ist.psu.edu/henzinger03software.html",
  OPTannote= {Gives a basic overview of BLAST.}
  }

  @inproceedings{Ball02:SLAM,
  author    = {Thomas Ball and
               Sriram K. Rajamani},
  title     = {The SLAM project: debugging system software via static analysis.},
  booktitle = {POPL},
  year      = {2002},
  pages     = {1-3},
  ee        = {http://doi.acm.org/10.1145/503272.503274},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@inproceedings{Klose01:LSCs,
 author = {Jochen Klose and Hartmut Wittke},
 title = {An Automata Based Interpretation of Live Sequence Charts},
 booktitle = {TACAS 2001: Proceedings of the 7th Int'l Conf. on Tools and Algorithms for the
 Construction and Analysis of Systems},
 year = {2001},
 isbn = {3-540-41865-2},
 pages = {512--527},
 publisher = {Springer-Verlag},
 address = {London, UK},
 OPTannote= {  READ READ READ}
 }


@article{Muscholl98:MSCs,
    author = "Anca Muscholl and Doron Peled and Zhendong Su",
    title = "Deciding Properties for Message Sequence Charts",
    journal = "Lecture Notes in Computer Science",
    volume = "1378",
    pages = "226--??",
    year = "1998",
    url = "citeseer.ist.psu.edu/article/muscholl98deciding.html",
    OPTannote= {  READ READ READ}
 }

 @misc{leue96:implementing,
  author = "Stefan Leue and Peter B. Ladkin",
  title = "Implementing and Verifying Scenario-Based Specifications Using Promela/XSpin",
  text = "S. Leue and P. B. Ladkin. Implementing and verifying scenario-based specifications
    using Promela/XSpin. In Participants Proceedings of the 2nd Int'l
    Workshop on the SPIN Verification System, pages 129--146. DIMACS/Bell Labs/INRS-T'el'ecommunications,
    1996.",
  year = "1996",
  url = "citeseer.ist.psu.edu/ladkin96implementing.html",
  OPTannote= {  READ READ READ}
  }

@misc{najm96:protocol,
  author = "Elie Najm and Frank Olsen",
  title = "Protocol Verification with Reactive Promela/RSPIN",
  text = "E. Najm and F. Olsen. Protocol Verification with Reactive Promela/RSPIN.
    In Proceedings of the Second SPIN Workshop, Rutgers University, New Jersey,
    USA, August 1996.",
  year = "1996",
  url = "citeseer.ist.psu.edu/najm96protocol.html",
  OPTannote= {  READ READ READ}
  }

@article{Harel03:MSCSurvey,
 author = {David Harel and P. S. Thiagarajan},
 title = {Message sequence charts},
 book = {UML for real: design of embedded real-time systems},
 year = {2003},
 isbn = {1-4020-7501-4},
 pages = {77--105},
 publisher = {Kluwer Academic Publishers},
 address = {Norwell, MA, USA},
 url = "http://portal.acm.org/citation.cfm?id=886349",
 OPTannote= {  READ READ READ}
 }

@BOOK{Fisher:DOE,
  AUTHOR =       {R.A. Fisher},
  TITLE =        {The Design of Experiment},
  PUBLISHER =    {New York: Hafner},
  YEAR =         {1935}
  }

@UNPUBLISHED{Garavel98:formal,
  AUTHOR =       {H Garavel and M Sighireanu},
  TITLE =        {Towards a Second Generation of Formal Description Techniques Rationale for the Design of
  E-LOTOS},
  year =         {1998},
  abstract =     {Process algebras are often advocated as suitable formalisms for the specication
    of telecommunication protocols and distributed systems. However, despite
    their mathematical basis, despite standardization attempts (most notably the
    Formal Description Technique Lotos), and despite an ever growing number of
    successful case-studies, process algebras have not yet reached a wide acceptance
    in industry.
    On the other hand, description languages such as Promela or Sdl are quite
    popular, although they lack a formal semantics, which should prohibit their use
    for safety-critical systems.
    In this paper, we seek to merge the \best of both worlds" by attempting to
    dene a \second generation Formal Description Technique" that would combine
    the strong theoretical foundations of process algebras with language features
    suitable for a wider industrial dissemination of formal methods. Taking the
    Int'l standard Lotos as a basis, we suggest several enhancements, which
    fall into three categories: data part, behaviour part, and modules.
    Our work was initiated in 1992 in the framework of the Iso/Iec Committee
    for the revision of the Lotos standard. Several of our suggestions have been
    accepted and will be integrated into the revised standard E-Lotos. The other
    suggestions are considered in the context of Lotos NT, a variant of E-Lotos
    for which a prototype compiler/model-checker is under development at Inria.},
  source =       {ftp://ftp.inrialpes.fr/pub/vasy/publications/cadp/Garavel-Sighireanu-98-a.pdf},
 OPTannote= {  READ READ READ}
}

@inproceedings{Baresi01:TestOracle,
 author = {Baresi, L. and Young, M.},
 title = {Test Oracles},
 booktitle = {Technical Report CIS-TR-01-02, Dept. of Computer and Information Science, Univ. of
Oregon},
 annote = {\commentpark{This paper surveys proposed approaches to automated test oracles. The proposed approaches
 for deriving test oracel
 covered BNF grammers, embedded assertion language, assertion system and some specification languages. This paper is
 a good reference for
 test oracle in the literature.
   }}
 }

@Article{Peters98:TestOracle,
   author =   "Dennis K. Peters and David L. Parnas",
   title =   "Using Test Oracles Generated from Programming Documentation",
   journal =  {IEEE Transactions on Software Engineering},
   month = "November",
   number = "3",
   year =   "1998",
   volume =   "24",
   pages =   "161-173",
}

@inproceedings{Memon03:TestOracle,
 author = {Atif M. Memon and Mary Lou Soffa},
 title = {Regression Testing of {GUI}s},
 booktitle = {In Proceedings of the 9th European Software Engineering Conf.},
 year = {2003}
 }}

@article{xie2007designing,
  title={Designing and comparing automated test oracles for GUI-based software applications},
  author={Xie, Q. and Memon, A.M.},
  journal={ACM Trans. on Software Engineering and Methodology (TOSEM)},
  volume={16},
  number={1},
  pages={4},
  year={2007},
  publisher={ACM}
}


@article{hamlet1994foundations,
  title={{Foundations of software testing: dependability theory}},
  author={Hamlet, D.},
  journal={ACM SIGSOFT Software Engineering Notes},
  volume={19},
  number={5},
  pages={128--139},
  year={1994},
  publisher={ACM New York, NY, USA}
}


@Article{Gannon:TestOracle,
   author =   "John Gannon and Paul McMullin and Richard Hamlet",
   title =   "Data abstraction, Implementation, Specification, and testing",
   journal =   "ACM Transactions on Programming Languages and Systems",
   month = "November",
   number = "3",
   year =   "1981",
   volume =   "3",
   pages =   "211-223",
}
@BOOK{Clarke99,
    AUTHOR = "Edmund M. Clarke, Orna Grumberg and Doron A. Peled",
    TITLE = "Model Checking",
    PUBLISHER = "The MIT Press",
    VOLUME = {},
    NUMBER = {},
    PAGES = {},
    MONTH = "",
    YEAR = {1999}   }

@phdthesis{klose2003lsc,
  title={{Live Sequence Charts: A Graphical Formalism for the Specification of Communication Behavior}},
  author={Klose, J.},
  year={2003},
  school={Univ., Fachbereich Informatik}
}

@article{brill:lsc,
  title={{Live Sequence charts: An introduction to lines, arrows, and strange boxes in the context of formal
  verification}},
  author={BRILL, M. and DAMM, W. and KLOSE, J. and WESTPHAL, B. and WITTKE, H.},
  journal={Lecture notes in computer science},
  pages={374--399},
  publisher={Springer}
}

%End Live Sequence Charts

%% Begin Mutation Testing

@article{calvagna2008logic,
  title={A logic-based approach to combinatorial testing with constraints},
  author={Calvagna, A. and Gargantini, A.},
  journal={Tests and Proofs},
  pages={66--83},
  year={2008},
  publisher={Springer}
}

@article{van2002sequential,
  title={Sequential equivalence checking based on structural similarities},
  author={Van Eijk, CAJ},
  journal={IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, },
  volume={19},
  number={7},
  pages={814--819},
  year={2002},
  publisher={IEEE}
}

@ARTICLE{andrews2006mat,
author={Andrews, J.H. and Briand, L.C. and Labiche, Y. and Namin, A.S.},
journal={IEEE Transactions on Software Engineering}, title={Using Mutation Analysis for Assessing and Comparing Testing Coverage Criteria},
year={2006},
month={aug. },
volume={32},
number={8},
pages={608 -624},
keywords={empirical assessment;experimental design;industrial program;mutation analysis;mutation operators;program control criteria;program data flow criteria;program debugging;software fault detection probability;software testing coverage criteria;data flow analysis;design of experiments;probability;program control structures;program debugging;program testing;software fault tolerance;},
doi={10.1109/TSE.2006.83},
ISSN={0098-5589},}

@article{andrews2005mat,
  title={Is Mutation an Appropriate Tool for Testing Experiments?},
  author={J.H.~Andrews and L.C.~Briand and Y.~Labiche},
  journal={Proc of the 27th Int'l Conf on Software Engineering (ICSE)},
  pages={402--411},
  year={2005},
  publisher={ACM Press New York, NY, USA}
}

@article{offutt1997ade,
  title={{Automatically detecting equivalent mutants and infeasible paths}},
  author={Offutt, A.J. and Pan, J.},
  journal={Software Testing, Verification \& Reliability},
  volume={7},
  number={3},
  pages={165--192},
  year={1997}
}

@book{kvam2007nsa,
  title={{Nonparametric Statistics with Applications to Science and Engineering}},
  author={Kvam, P.H. and Vidakovic, B.},
  year={2007},
  publisher={Wiley-Interscience}
}

@article{memon2003tos,
  title={What test oracle should {I} use for effective {GUI} testing?},
  author={Memon, A. and Banerjee, I. and Nagarajan, A.},
  journal={Automated Software Engineering, 2003. Proc. 18th IEEE Int'l Conf. on},
  pages={164--173},
  year={2003}
}

@article{shaffer1995mht,
  title={{Multiple Hypothesis Testing}},
  author={Shaffer, J.P.},
  journal={Annual Review of Psychology},
  volume={46},
  number={1},
  pages={561--584},
  year={1995},
  publisher={Annual Reviews}
}

%%Begin Translation Verfication
@article{mccarthy1962tms,
  title={{Towards a mathematical science of computation}},
  author={McCarthy, J.},
  journal={Information Processing},
  volume={62},
  pages={21--28},
  year={1962}
}

@article{floyd1967amp,
  title={{Assigning meanings to programs}},
  author={Floyd, R.W.},
  journal={Mathematical Aspects of Computer Science},
  volume={19},
  number={19-32},
  pages={1},
  year={1967}
}

@article{hoare2003vcg,
  title={{The Verifying Compiler: A Grand Challenge for Computing Research}},
  author={Hoare, T.},
  journal={Modular Programming Languages: Joint Modular Languages Conf., JMLC 2003, Klagenfurt, Austria, August
  25-27, 2003: Proceedings},
  year={2003},
  publisher={Springer}
}

@article{necula1998dai,
  title={{The design and implementation of a certifying compiler}},
  author={Necula, G.C. and Lee, P.},
  journal={ACM SIGPLAN Notices},
  volume={33},
  number={5},
  pages={333--344},
  year={1998},
  publisher={ACM Press New York, NY, USA}
}

@article{pnueli98tv,
  title={{Translation validation}},
  author={Pnueli, A. and Siegel, M. and Singerman, E.},
  journal={Tools and Algorithms for Construction and Analysis of Systems, 4th Int'l Conf., TACAS},
  volume={98},
  pages={151--166},
  publisher={Springer}
}

@article{clarke2004tca,
  title={{A Tool for Checking ANSI-C Programs}},
  author={Clarke, E. and Kroening, D. and Lerda, F.},
  journal={Tools and Algorithms for the Construction and Analysis of Systems: 10th Int'l Conf., TACAS
  2004, Held as Part of the Joint European Conf.s on Theory and Practice of Software, ETAPS 2004, Barselona,
  Spain, March 29-April 2, 2004: Proceedings},
  year={2004},
  publisher={Springer}
}

@article{duretlutz2004sem,
  title={{SPOT: an extensible model checking library using transition-based generalized Bu/spl uml/chi automata}},
  author={Duret-Lutz, A. and Poitrenaud, D.},
  journal={Modeling, Analysis, and Simulation of Computer and Telecommunications Systems, 2004.(MASCOTS 2004).
  Proceedings. The IEEE Computer Society's 12th Annual Int'l Symposium on},
  pages={76--83},
  year={2004}
}

@article{guttman1995vvi,
  title={{VLISP: A verified implementation of Scheme}},
  author={Guttman, J.D. and Ramsdell, J.D. and Wand, M.},
  journal={Higher-Order and Symbolic Computation},
  volume={8},
  number={1},
  pages={5--32},
  year={1995},
  publisher={Springer}
}

@book{dybjer:uda,
  title={{Using Domain Algebras to Prove the Correctness of a Compiler}},
  author={Dybjer, P.},
  publisher={Springer}
}

@article{moore1989mvl,
  title={{A mechanically verified language implementation}},
  author={Moore, J.S.},
  journal={Journal of Automated Reasoning},
  volume={5},
  number={4},
  pages={461--492},
  year={1989},
  publisher={Springer}
}

@article{colby2000ccj,
  title={{A certifying compiler for Java}},
  author={Colby, C. and Lee, P. and Necula, G.C. and Blau, F. and Plesko, M. and Cline, K.},
  journal={ACM SIGPLAN Notices},
  volume={35},
  number={5},
  pages={95--107},
  year={2000},
  publisher={ACM Press New York, NY, USA}
}

@article{rinard1999cc,
  title={{Credible compilation}},
  author={Rinard, M.},
  journal={Proceedings of the FLoC Workshop Run-Time Result Verification, July},
  year={1999}
}

@article{biere2003bmc,
  title={{Bounded Model Checking}},
  author={Biere, A. and Cimatti, A. and Clarke, E.M. and Strichman, O. and Zhu, Y.},
  journal={Advances in Computers},
  volume={58},
  pages={118--149},
  year={2003}
}

@article{biere2002lcs,
  title={{Liveness Checking as Safety Checking}},
  author={Biere, A. and Artho, C. and Schuppan, V.},
  journal={Electronic Notes in Theoretical Computer Science},
  volume={66},
  number={2},
  pages={160--177},
  year={2002},
  publisher={Elsevier}
}

@article{giannakopoulou2002sti,
  title={{From states to transitions: Improving translation of LTL formulae to Buchi automata}},
  author={Giannakopoulou, D. and Lerda, F.},
  journal={Proceedings of the 22nd IFIP WG},
  volume={6},
  year={2002},
  publisher={Springer}
}

@article{giannakopoulou2001abv,
  title={{Automata-Based Verification of Temporal Properties on Running Programs}},
  author={Giannakopoulou, D. and Havelund, K.},
  journal={Proceedings, Int'l Conf. on Automated Software Engineering (ASE’01)},
  pages={412--416},
  year={2001}
}

@article{wheeler2004ssl,
  title={{SLOCCount: Source Lines of Code Count}},
  author={Wheeler, D.},
  journal={Webpage. Version},
  volume={2},
  year={2004}
}

@article{denney6ais,
  title={{Annotation inference for the safety certification of automatically generated code}},
  author={Denney, E. and Fischer, B.},
  journal={Proceedings of the 21st IEEE Int'l Conf. on Automated Software Engineering (ASE’06)},
  pages={265--268}
}

@article{klose2006coe,
  title={{Check It Out: On the Efficient Formal Verification of Live Sequence Charts}},
  author={Klose, J. and Toben, T. and Westphal, B. and Wittke, H.},
  journal={LECTURE NOTES IN COMPUTER SCIENCE},
  volume={4144},
  pages={219},
  year={2006},
  publisher={Springer}
}

@article{alpern1987rsa,
  title={{Recognizing safety and liveness}},
  author={Alpern, B. and Schneider, F.B.},
  journal={Distributed Computing},
  volume={2},
  number={3},
  pages={117--126},
  year={1987},
  publisher={Springer}
}

@Conf.{queille1982sav,
  title={{Specification and verification of concurrent systems in CESAR}},
  author={Queille, J.P. and Sifakis, J.},
  booktitle={Proceedings of the 5th Colloquium on Int'l Symposium on Programming},
  pages={337--351},
  year={1982},
  organization={Springer}
}


@article{damm2001lbl,
  title={{LSCs: Breathing Life into Message Sequence Charts}},
  author={Damm, W. and Harel, D.},
  journal={Formal Methods in System Design},
  volume={19},
  number={1},
  pages={45--80},
  year={2001},
  publisher={Springer}
}

@article{rosenberg2002ssi,
  title={{SIP: Session Initiation Protocol}},
  author={Rosenberg, J. and Schulzrinne, H. and Camarillo, G. and Johnston, A. and Peterson, J. and Sparks, R. and
  Handley, M. and Schooler, E.},
  year={2002},
  publisher={RFC 3261, Internet Engineering Task Force, June 2002}
}

@article{whittle2005sca,
  title={{From scenarios to code: An air traffic control case study}},
  author={Whittle, J. and Kwan, R. and Saboo, J.},
  journal={Software and Systems Modeling},
  volume={4},
  number={1},
  pages={71--93},
  year={2005},
  publisher={Springer}
}

@article{feyerabend1996rts,
  title={{Real-time Symbolic Timing Diagrams}},
  author={Feyerabend, K.},
  year={1996},
  publisher={Technical report, Department of Computer Science, Oldenburg University, September 1994}
}

@PhdThesis{kumarthesis2008,
author = {Rahul Kumar},
title = {Using Live Sequence Chart Speicifications for Formal Verification of Systems},
school = {Brigham Young University},
year = {2008},
OPTmonth = {April},
}

@article{khurshid2003gse,
  title={{Generalized Symbolic Execution for Model Checking and Testing}},
  author={Khurshid, S. and Pasareanu, C.S. and Visser, W.},
  journal={Proc. 9th Int. Conf. on TACAS},
  pages={553--568},
  year={2003},
  publisher={Springer}
}

@Conf.{boyapati2002kat,
  title={{Korat: Automated Testing Based on Java Predicates}},
  author={Boyapati, C. and Khurshid, S. and Marinov, D.},
  booktitle={Proc. of the 2002 ACM SIGSOFT Int'l. Symposium on Software Testing and Analysis},
  pages={123--133},
  year={2002},
  organization={ACM New York, NY, USA}
}

@Conf.{harrold2000tr,
  title={Testing: a roadmap},
  author={Harrold, M.J.},
  booktitle={Proc. of the Conf. on the Future of Software Engineering},
  pages={61--72},
  year={2000},
  organization={ACM New York, NY, USA}
}


@inproceedings{staats11:nier-oracle-selection,
  author    = {M. Staats and M.W.~Whalen and M.P.E.~Heimdahl},
  title     = {Better testing through oracle selection (NIER track)},
  booktitle = {Proceedings of the 33rd Int'l Conf. on Software Engineering},
  pages     = {892-895},
  year      = {2011}
}


@inproceedings{Rajan08:InlinedEffect-MCDC,
  author    = {A.~Rajan and M.W.~Whalen and M.P.E.~Heimdahl},
  title     = "The {E}ffect of {P}rogram and {M}odel {S}tructure on {MC/DC} {T}est {A}dequacy {C}overage",
  booktitle = {Proceedings of 30th Int'l Conf. on
                Software Engineering (ICSE)},
  year      = {2008},
  note = "Available at http://crisys.cs.umn.edu/ICSE08.pdf"

}

@inproceedings{Rajan08:FaultFinding-MCDC,
  author    = {A.~Rajan and M.W.~Whalen and M.~Staats and W.~Deng and M.P.E.~Heimdahl},
  title     = "The {E}ffect of {P}rogram and {M}odel {S}tructure on the {F}ault {F}inding {A}bility of {MC/DC}
  {T}est {S}uites",
  booktitle = {Proceedings of Int'l Symposium on
                Software Testing and Analysis (ISSTA)},
  year      = {Submitted 2008},
  note = "Available at http://crisys.cs.umn.edu/ISSTA08.pdf"

}

@misc{gao92:patriot,
  title =    {The United State General Accounting Office Patriot Missile Report},
  author =   {The VDM Tool Group},
  month =    {September},
  year =     {1997},
  howpublished = {Technical Report, B-247094.  Available at:
  http://www.fas.org/spp/starwars/gao/im92026.htm},
}

@inproceedings{Ball10:preemption,
  author    = {T. Ball and S. Burckhardt and K. Coons and M. Musuvathi and S. Qadeer},
  title     = "Preemption Sealing for Efficient Concurrency Testing",
  booktitle = {Proceedings of the 16th Annual Conf. on Tools and Algorithms
               for the Construction and Analysis of Systems (TACAS)},
  year      = {2010},
  month     = {March}
}

@article{Bessey10:static-analysis,
  author    = {Al Bessey and
               Ken Block and
               Benjamin Chelf and
               Andy Chou and
               Bryan Fulton and
               Seth Hallem and
               Charles Henri-Gros and
               Asya Kamsky and
               Scott McPeak and
               Dawson R. Engler},
  title     = {A few billion lines of code later: using static analysis
               to find bugs in the real world},
  journal   = {Communications of the ACM},
  volume    = {53},
  number    = {2},
  year      = {2010},
  pages     = {66-75}
}


@inproceedings{Saff03:continuous-testing,
 author = {D. Saff and M. D. Ernst},
 title = {Reducing wasted development time via continuous testing},
 booktitle = {proceedings of the 14th Int'l Symposium on Software
Reliability Engineering},
 year = {2003},
publisher = {IEEE Computer Society},
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Hardware-supported monitoring for MCDC compliance
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@misc{Romanski10:verocel,
  author = {George Romanski},
  title = {Personal Interview},
  organization = {Verocel},
  url = {http://www.verocel.com},
  month = {December},
  year = {2010}
}

@misc{Baer10:verifysoft,
  author = {Roland Baer},
  title = {Personal Interview},
  organization = {Verifysoft},
  url = {www.verifysoft.com},
  month = {December},
  year = {2010}
}

@misc{Gilchrist10:ipl,
  author = {Ian Gilchrist},
  title = {Personal Interview},
  organization = {IPL},
  url = {www.verifysoft.com},
  month = {December},
  year = {2010}
}

@misc{Gains10:vectorCast,
  author = {L. Gains},
  title = {Personal Interview},
  organization = {VectorCast},
  url = {www.vectorcast.com},
  month = {December},
  year = {2010}
}

@misc{Tadlaoui10:ldra,
  author = {M. Tadlaoui},
  title = {Personal Interview Regarding LDRA Too Suite},
  organization = {LDRA},
  url = {www.ldra.com},
  month = {December},
  year = {2010}
}

@misc{CodeTEST10:amc,
  title = {Personal Interview Regarding CodeTEST},
  organization = {Applied Microsystems},
  url = {http://www.amc.com},
  month = {December},
  year = {2010}
}

@Conf.{He08:dynamicProgramMonitoring,
  title={{Ex-mon: An architectural framework for dynamic program monitoring on multicore processors}},
  author={He, G. and Zhai, A. and Yew, P.C.},
  booktitle={The Twelfth Workshop on Interaction between Compilers and Computer Architectures (Interact-12)},
  year={2008},
  organization={Citeseer}
}

@Conf.{He10:compilerSupportForProgMonitors,
  title={{Improving the performance of program monitors with compiler support in multi-core environment}},
  author={He, G. and Zhai, A.},
  booktitle={Parallel \& Distributed Processing (IPDPS), 2010 IEEE Int'l Symposium on},
  pages={1--12},
  issn={1530-2075},
  year={2010},
  organization={IEEE}
}

@misc{simics,
  title="Wind River Simics",
  url="http://www.windriver.com/products/simics/"
 }


 @inproceedings{he_ipdps10,
  title = "Improving the Performance of Program Monitors with Compiler Support in Multi-Core Systems",
  author = "Guojin He and Antonia Zhai",
  booktitle = "The IEEE Int'l Parallel \& Distributed Processing Symposium (IPDPS)",
  year =  2010,
  location = {Atlanta, GA}
}

@inproceedings{he_08,
 author =  {Guojin He and Antonia Zhai and Pen-Chung Yew},
 title = {Ex-Mons: An Architectural Framework for Dynamic Program Monitoring on Multicore Processors},
 booktitle = {The 12th Workshop on Interaction between Compilers and Computer Architectures (INTERACT 12)},
 year = {2008},
 location = {Salt Lake City, UT},
}

@inproceedings{luk_pldi05,
    author = "C.-K. Luk and R. Cohn and R. Muth and H. Patil and A. Klauser and G. Lowney and S. Wallace and V.J. Reddi and K. Hazelwood",
    title = "{Pin: Building Customized Program Analysis Tools with Dynamic Instrumentation}",
    booktitle = {The 2005 ACM SIGPLAN Conf. on Programming language design and implementation},
    pages={190-200},
    year={2005},
    month = "June"
}

@inproceedings{Zhai:RV09,
 author = {Zhai, Atonia and He, Guojin and Heimdahl, Mats P.},
 title = {Hardware Supported Flexible Monitoring: Early Results},
 booktitle = {Runtime Verification},
 editor = {Bensalem, Saddek and Peled, Doron A.},
 year = {2009},
 isbn = {978-3-642-04693-3},
 pages = {168--183},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{he_interact08,
   title = "Ex-Mon: An Architectural Framework for Dynamic Program Monitoring on Multicore Processors",
   author = "Guojin He and Antonia Zhai and Pen-Chung Yew",
   booktitle = "The Twelfth Workshop on Interaction between Compilers and Computer Architectures (Interact-12)",
   year = 2008
}

@techreport {Esmaeilsabzali09:big-step,
  Author =   {Shahram Esmaeilsabzali, Nancy A. Day, Joanne M. Atlee, and Jianwei Niu},
  Title =    {Big-Step Semantics},
  Institution =  {David R. Chariton School of Computer Science, University of Waterloo},
  Address =  {Waterloo, Ontario, Canada N2l 3G1},
  Number =   {CS-2009-05},
  Year =     {2009},
  Month =    {February}
}

@techreport{gacek11:hierarchical,
    Author = {Andrew Gacek and Michael Whalen and Darren Cofer},
    Title = {Circular Hierarchical Reasoning using Past Time LTL},
    Institution = {University of Minnesota Software Engineering Center},
    Number = {2011-1},
    Year = {2011},
    url = {http://www.umsec.umn.edu/publications}
}

@inproceedings{Esmaeilsabzali10:prescriptive,
  Author =   {Shahram Esmaeilsabzali and Nancy A. Day},
  Title =    {Prescriptive Semantics for Big-Step Modelling Languages},
  booktitle = {13th Int'l Conf. on Fundamentals of Software Engineering},
  year = {2010},
  month = {March},
  location = {Paphos, Cyprus}
}

@inproceedings{Hardin12:guardol,
  Author = {David Hardin and Konrad Slind and Michael W. Whalen and Tuan-Hung Pham},
  Title = {The Guardol Language and Verification System},
  booktitle = {18th Int'l Conf. on Tools and Algorithms for the
                Construction and Analysis of Systems (TACAS)},
  year = {2012},
  month = {April},
  location = {Tallinn, Estonia}
}

@inproceedings{Staats12:oracle,
 author = {Staats, M. and Gay, G. and Heimdahl, M.P.E.},
 title = {Automated oracle creation support, or: how {I} learned to stop worrying about fault propagation and love mutation testing},
 booktitle = {Proceedings of the 2012 Int'l Conf. on Software Engineering},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {870--880},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337326},
 acmid = {2337326},
}

@inproceedings{staats11:formal-testing,
  author    = {M. Staats and M.W.~Whalen and M.P.E.~Heimdahl},
  title     = {Programs, Testing, and Oracles: The Foundations of Testing Revisited},
  booktitle = {Proceedings of the 33rd Int'l Conf. on Software Engineering},
  pages     = {391-400},
  year      = {2011}
}

@inproceedings{Gay12:testgen,
  Author = {Matt Staats and Gregory Gay  and Michael W Whalen and Mats P.E. Heimdahl},
  Title = {On the Danger of Coverage Directed Test Case Generation},
  booktitle = {15th Int'l Conf. on Fundamental Approaches to Software Engineering (FASE)},
  year = {2012},
  month = {April},
  location = {Tallinn, Estonia}
}

@Misc{Gay14:coverage,
  Author = {Gregory Gay and Michael W Whalen and Mats P.E. Heimdahl and Matt Staats},
  Title = {The Risks of Coverage Directed Test Case Generation},
  howpublished = {Currently under submission, draft available from http://greggay.com/pdf/14risks.pdf},
  year = {2014},
}

@inproceedings{Hardin11:guardol,
    Author = {David Hardin and Konrad Slind and Michael W. Whalen and Tuan-Hung Pham},
    Title = {Introduction to the Guardol Language and Verification System},
    booktitle = {4th Annual Layered Assurance Workshop},
    year = {2011},
    month = {December},
    location = {Orlando, Florida}
}

@inproceedings{Balasubramanian11:polyglot,
    Author = {Daniel Balasubramanian and
              Corina S. Pasareanu and
              Michael W. Whalen and
              Gabor Karsai and
              Michael Lowry},
    Title = {Polyglot: Modeling and Analysis for Multiple Statechart Formalisms},
    booktitle = {Proceedings of the Int'l Symposium on Software Testing and Analysis (ISSTA)},
    location = {Toronto, Ontario, Canada},
    month =  {July},
    year = {2011}
}


@article{Hardin11:nextwave,
    Author = {David Hardin and T. Douglas Hiratzka and D. Randolph Johnson and Lucas Wagner and Michael Whalen},
    Title = {A High-Assurance Methodology for the Development of Security Software},
    year = {2011},
    month = {October},
    journal = {The Next Wave},
    publisher = {National Security Agency}
}

@inproceedings{Whalen10:fite,
    Author = {Michael W. Whalen and Patrice Godefroid and Leonardo Mariani and
              Andrea Polini and Nikolai Tillman and Willem Visser},
    Title = {FITE: Future Integrated Testing Environment},
    booktitle = {Workshop on the Future of Software Engineering Research 2010 (FoSER)},
    location = {Santa Fe, New Mexico},
    month = {November},
    year = {2010}
}

@inproceedings{Pham13:VSTTE,
    Author = {Tuan-Hung Pham and Michael Whalen},
    Title = {An Improved Unrolling-Based Decision Procedure for Algebraic Data Types},
    booktitle = {Fifth Working Conf. on Verified Software: Theories, Tools and Experiments},
    location = {Atherton, CA},
    month = {May},
    year = {2013}
}

@article{Nuseibeh01:twin-peaks,
  author = {Bashar Nuseibeh},
  title = {Weaving Together Requirements and Architectures},
  journal ={Computer},
  volume = {34},
  issn = {0018-9162},
  year = {2001},
  pages = {115-117},
  publisher = {IEEE Computer Society},
  address = {Los Alamitos, CA, USA}}

@inproceedings{NFM2012:CoGaMiWhLaLu,
 author = {Darren D. Cofer and Andrew Gacek and Steven P. Miller and Michael W. Whalen and Brian LaValley and Lui Sha},
 title = {Compositional Verification of Architectural Models},
 booktitle = {Proceedings of the 4th  NASA Formal Methods Symposium (NFM 2012)},
 volume = {7226},
 editor = {Alwyn E. Goodloe and Suzette Person},
 location = {Norfolk, VA, USA},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 pages = {126--140},
 month = {April},
 year = {2012}
}
@inproceedings{NFM2012:CoGaMiWhLaLuShort,
 author = {Darren D. Cofer and others},
 title = {Compositional Verification of Architectural Models},
 booktitle = {NFM},
 volume = {7226},
 pages = {126--140},
 year = {2012}
}

@Book{IEEE-PSL,
  author =   {IEEE},
  title =    "IEEE Std. 1850-2005.  Property Specification Language (PSL)",
  publisher =    {IEEE},
  year =     {2005}
}

@inproceedings{Nam09:scheduling-analysis,
    author = {Min-Young Nam and R. Pellizzoni and Lui Sha and R. M. Bradford},
    title = {ASIIST: Application Specific I/O Integration Support Tool for Real-Time Bus
             Architecture Designs},
    year = {2009},
    booktitle = {14th IEEE Int'l Conf. on Engineering of Complex Computer Systems},
    month = {June}
}

@book{Friedenthal08:sysml,
 author = {Friedenthal, Sanford and Moore, Alan and Steiner, Rick},
 title = {A Practical Guide to SysML: Systems Modeling Language},
 year = {2008},
 isbn = {0123743796, 9780080558363, 9780123743794},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
}

@article{halbwachs_synchronous_1991,
	title = {The synchronous data flow programming language {LUSTRE}},
	volume = {79},
	number = {9},
	journal = {Proceedings of the {IEEE}},
	author = {Halbwachs, N. and Caspi, P. and Raymond, P. and Pilaud, D.},
	year = {1991},
	pages = {1305-1320}
}

@inproceedings{devadas_observability-based_1996,
	title = {An observability-based code coverage metric for functional simulation},
	booktitle = {Proceedings of the 1996 {IEEE/ACM} Int'l Conf. on {Computer-Aided} Design},
	author = {Devadas, S. and Ghosh, A. and Keutzer, K.},
	year = {1996},
	pages = {418-425}
}

@article{fallah_occom-efficient_2001,
	title = {{OCCOM-efficient} computation of observability-based code coverage metrics for functional verification},
	volume = {20},
	number = {8},
	journal = {{IEEE} Transactions on {Computer-Aided} Design of Integrated Circuits and Systems},
	author = {Fallah, F. and Devadas, S. and Keutzer, K.},
	year = {2001},
	pages = {1003-1015}
}

@article{fallah_functional_2001,
	title = {Functional vector generation for {HDL} models using linear programming and boolean satisfiability},
	volume = {20},
	number = {8},
	journal = {{IEEE} Transactions on {Computer-Aided} Design of Integrated Circuits and Systems},
	author = {Fallah, F. and Devadas, S. and Keutzer, K.},
	year = {2001},
	pages = {994-1002}
}

@article{fallah_functional_2002,
	title = {Functional vector generation for sequential {HDL} models under an observability-based code coverage metric},
	volume = {10},
	number = {6},
	journal = {{IEEE} Transactions on Very Large Scale Integration {(VLSI)} Systems},
	author = {Fallah, F. and Ashar, P. and Devadas, S.},
	year = {2002},
	pages = {919-923}
}

@inproceedings{tasiran_functional_2001,
	title = {A functional validation technique: biased-random simulation guided by observability-based coverage},
	shorttitle = {A functional validation technique},
	booktitle = {Proceedings of the 2001 Int'l Conf. on Computer Design},
	author = {Tasiran, S. and Fallah, F. and Chinnery, {D.G.} and Weber, {S.J.} and Keutzer, K.},
	year = {2001},
	pages = {82-88}
}

@inproceedings{fallah_simulation_1999,
	title = {Simulation vector generation from {HDL} descriptions for observability-enhanced statement coverage},
	booktitle = {Proceedings of the 36th annual {ACM/IEEE} Design Automation Conf.},
	author = {Fallah, F. and Ashar, P. and Devadas, S.},
	year = {1999},
	pages = {666-671}
}

@inproceedings{costa_observability_2000,
	title = {Observability analysis of embedded software for coverage-directed validation},
	booktitle = {Proceedings of the 2000 {IEEE/ACM} Int'l Conf. on {Computer-Aided} Design},
	author = {Costa, {J.C.} and Devadas, S. and Monteiro, {J.C.}},
	year = {2000},
	pages = {27-32}
}

@article{zhang_framework_2006,
	title = {A framework for automatic design validation of rtl circuits using atpg and observability-enhanced tag coverage},
	volume = {25},
	number = {11},
	journal = {{IEEE} Transactions on {Computer-Aided} Design of Integrated Circuits and Systems},
	author = {Zhang, L. and Ghosh, I. and Hsiao, {M.S.}},
	year = {2006},
	pages = {2526-2538}
}

@article{jiang_observability_2007,
	title = {Observability analysis on {HDL} descriptions for effective functional validation},
	volume = {26},
	number = {8},
	journal = {{IEEE} Transactions on {Computer-Aided} Design of Integrated Circuits and Systems},
	author = {Jiang, {T.Y.} and Liu, {C.N.J.} and Jou, {J.Y.}},
	year = {2007},
	pages = {1509-1521}
}

@inproceedings{costa_observability-based_2009,
	title = {Observability-based coverage-directed path search using {PBO} for automatic test vector generation},
	booktitle = {Proceedings of the 17th {IFIP} Int'l Conf. on Very Large Scale Integration {(VLSI-SoC)}},
	author = {Costa, {J.C.} and Monteiro, {J.C.}},
	year = {2009},
	pages = {153-158}
}

@article{voas_pie:_1992,
	title = {{PIE:} A dynamic failure-based technique},
	volume = {18},
	shorttitle = {{PIE}},
	number = {8},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Voas, {J.M.}},
	year = {1992},
	pages = {717-727}
}

@inproceedings{papailiopoulou_automatic_2008,
	title = {Automatic test generation for lustre/scade programs},
	booktitle = {Proceedings of the 23rd {IEEE/ACM} Int'l Conf. on Automated Software Engineering},
	author = {Papailiopoulou, V.},
	year = {2008},
	pages = {517-520}
}

@article{papailiopoulou_extending_2009,
	title = {Extending Structural Test Coverage Criteria for {L}ustre Programs with Multi-clock Operators},
	journal = {Formal Methods for Industrial Critical Systems},
	author = {Papailiopoulou, V. and Madani, L. and du Bousquet, L. and Parissis, I.},
	year = {2009},
	pages = {23-36}
}

@inproceedings{lakehal_structural_2005,
	title = {Structural test coverage criteria for {L}ustre programs},
	booktitle = {Proceedings of the 10th Int'l workshop on Formal methods for industrial critical systems},
	author = {Lakehal, A. and Parissis, I.},
	year = {2005},
	pages = {35-43}
}

@inproceedings{schuler_assessing_2011,
	title = {Assessing Oracle Quality with Checked Coverage},
	booktitle = {Proceedings of the Fourth {IEEE} Int'l Conf. on Software Testing, Verification and Validation},
	author = {Schuler, D. and Zeller, A.},
	year = {2011},
	pages = {90-99}
}

@inproceedings{duesterwald_rigorous_1992,
	title = {Rigorous data flow testing through output influences},
	booktitle = {Proceedings of the 2nd Irvine Software Symposium},
	author = {Duesterwald, E. and Gupta, R. and Soffa, {M.L.}},
	year = {1992},
	pages = {131-145}
}

@inproceedings{masri_detecting_2004,
	title = {Detecting and debugging insecure information flows},
	booktitle = {Proceedings of the 15th Int'l Symposium on Software Reliability Engineering},
	author = {Masri, W. and Podgurski, A. and Leon, D.},
	year = {2004},
	pages = {198-209}
}

@inproceedings{clause_dytan:_2007,
	title = {Dytan: a generic dynamic taint analysis framework},
	shorttitle = {Dytan},
	booktitle = {Proceedings of the 2007 Int'l Symposium on Software Testing and Analysis},
	author = {Clause, J. and Li, W. and Orso, A.},
	year = {2007},
	pages = {196-206}
}

@inproceedings{staats_influence_2010,
	title = {The influence of multiple artifacts on the effectiveness of software testing},
	booktitle = {Proceedings of the {IEEE/ACM} Int'l Conf. on Automated Software Engineering},
	author = {Staats, M.},
	year = {2010},
	pages = {517-522}
}


@article{clarke_formal_1989,
	title = {A formal evaluation of data flow path selection criteria},
	volume = {15},
	number = {11},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Clarke, {L.A.} and Podgurski, A. and Richardson, {D.J.} and Zeil, {S.J.}},
	year = {1989},
	pages = {1318-1332}
}

@article{rapps_selecting_1985,
	title = {Selecting software test data using data flow information},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Rapps, S. and Weyuker, {E.J.}},
	year = {1985},
	pages = {367-375}
}


@inproceedings{agrawal_dynamic_1990,
	title = {Dynamic program slicing},
	volume = {25},
	booktitle = {Proceedings of the ACM SIGPLAN 1990 Conf. on Programming Language Design and Implementation},
	author = {Agrawal, H. and Horgan, {J.R.}},
	year = {1990},
	pages = {246-256}
}

@article{korel_dynamic_1988,
	title = {Dynamic program slicing},
	volume = {29},
	number = {3},
	journal = {Information Processing Letters},
	author = {Korel, B. and Laski, J.},
	year = {1988},
	pages = {155-163}
}

@article{beer_efficient_2001,
	title = {Efficient detection of vacuity in temporal model checking},
	volume = {18},
	number = {2},
	journal = {Formal Methods in System Design},
	author = {Beer, I. and {Ben-David}, S. and Eisner, C. and Rodeh, Y.},
	year = {2001},
	pages = {141-163}
}

@article{kupferman_vacuity_2003,
	title = {Vacuity detection in temporal model checking},
	volume = {4},
	number = {2},
	journal = {Int'l Journal on Software Tools for Technology Transfer {(STTT)}},
	author = {Kupferman, O. and Vardi, {M.Y.}},
	year = {2003},
	pages = {224-233}
}

@inproceedings{purandare_vacuum_2002,
	title = {Vacuum cleaning {CTL} formulae},
	booktitle = {Proceedings of the 14th Conf. on Computer Aided Verification},
	author = {Purandare, M. and Somenzi, F.},
	year = {2002},
	pages = {277-297}
}

@article{gurfinkel_how_2004,
	title = {How vacuous is vacuous?},
	journal = {Tools and Algorithms for the Construction and Analysis of Systems},
	author = {Gurfinkel, A. and Chechik, M.},
	year = {2004},
	pages = {451-466}
}

@article{gurfinkel_robust_2012,
	title = {Robust Vacuity for Branching Temporal Logic},
	volume = {13},
	number = {1},
	journal = {{ACM} Transactions on Computational Logic {(TOCL)}},
	author = {Gurfinkel, A. and Chechik, M.},
	year = {2012},
	pages = {1}
}

@inproceedings{armoni_enhanced_2003,
	title = {Enhanced vacuity detection in linear temporal logic},
	booktitle = {Proceedings of the 15th Conf. on Computer Aided Verification},
	author = {Armoni, R. and Fix, L. and Flaisher, A. and Grumberg, O. and Piterman, N. and Tiemeyer, A. and Vardi, M.},
	year = {2003},
	pages = {368-380}
}


@inproceedings{post_vacuous_2011,
	title = {Vacuous real-time requirements},
	booktitle = {2011 19th {IEEE} Int'l Requirements Engineering Conf. {(RE)}},
	author = {Post, A. and Hoenicke, J. and Podelski, A.},
	year = {2011},
	pages = {153-162}
}


@inproceedings{chockler_beyond_2008,
	title = {Beyond vacuity: Towards the strongest passing formula},
	shorttitle = {Beyond vacuity},
	booktitle = {Proceedings of the 2008 Int'l Conf. on Formal Methods in {Computer-Aided} Design},
	author = {Chockler, H. and Gurfinkel, A. and Strichman, O.},
	year = {2008},
	pages = {24}
}


@inproceedings{kupferman_theory_2008,
	title = {A theory of mutations with applications to vacuity, coverage, and fault tolerance},
	booktitle = {Proceedings of the 2008 Int'l Conf. on Formal Methods in {Computer-Aided} Design},
	author = {Kupferman, O. and Li, W. and Seshia, {S.A.}},
	year = {2008},
	pages = {25}
}

@techreport{kupferman_duality_2008,
	title = {On the duality between vacuity and coverage},
	institution = {Technical report {UCB/EECS-2008-26}, {EECS} Department, {UC} Berkeley},
	author = {Kupferman, O. and Li, W. and Seshia, {S.A.}},
	year = {2008}
}


@inproceedings{hoskote_coverage_1999,
	title = {Coverage estimation for symbolic model checking},
	booktitle = {Proceedings of the 36th annual {ACM/IEEE} Design Automation Conf.},
	author = {Hoskote, Y. and Kam, T. and Ho, {P.H.} and Zhao, X.},
	year = {1999},
	pages = {300-305}
}

@inproceedings{jayakumar_s_2003,
	title = {Do's and don'ts of {CTL} state coverage estimation},
	booktitle = {Proceedings of the 2003 Design Automation Conf.},
	author = {Jayakumar, N. and Purandare, M. and Somenzi, F.},
	year = {2003},
	pages = {292-295}
}

@article{fedeli_properties_2007,
	title = {Properties incompleteness evaluation by functional verification},
	volume = {56},
	number = {4},
	journal = {{IEEE} Transactions on Computers},
	author = {Fedeli, A. and Fummi, F. and Pravadelli, G.},
	year = {2007},
	pages = {528-544}
}

@inproceedings{whalen_coverage_2006,
	title = {Coverage metrics for requirements-based testing},
	booktitle = {Proceedings of the Int'l Symposium on Software Testing and Analysis},
	author = {Whalen, {M.W.} and Rajan, A. and Heimdahl, {M.P.E.} and Miller, {S.P.}},
	year = {2006},
	pages = {25-36}
}

@article{rajan_model_2007,
	title = {Model validation using automatically generated requirements-based tests},
	journal = {10th {IEEE} High Assurance Systems Engineering Symposium},
	author = {Rajan, A. and Whalen, {M.W.} and Heimdahl, {M.P.E.}},
	year = {2007}
}

@article{rajan_requirements_2008,
	title = {Requirements coverage as an adequacy measure for conformance testing},
	journal = {Formal Methods and Software Engineering},
	author = {Rajan, A. and Whalen, M. and Staats, M. and Heimdahl, M.},
	year = {2008},
	pages = {86-104}
}

@inproceedings{pecheur_formal_2009,
	title = {A formal analysis of requirements-based testing},
	booktitle = {Proceedings of the 18th Int'l Symposium on Software Testing and Analysis},
	author = {Pecheur, C. and Raimondi, F. and Brat, G.},
	year = {2009},
	pages = {47-56}
}

@inproceedings{chockler_practical_2001,
	title = {A practical approach to coverage in model checking},
	booktitle = {Computer Aided Verification},
	author = {Chockler, H. and Kupferman, O. and Kurshan, R. and Vardi, M.},
	year = {2001},
	pages = {66-78}
}

@article{chockler_coverage_2003,
	title = {Coverage metrics for formal verification},
	journal = {Correct hardware design and verification methods},
	author = {Chockler, H. and Kupferman, O. and Vardi, M.},
	year = {2003},
	pages = {111-125}
}

@article{chockler_coverage_2001,
	title = {Coverage metrics for temporal logic model checking},
	journal = {Tools and Algorithms for the Construction and Analysis of Systems},
	author = {Chockler, H. and Kupferman, O. and Vardi, M.},
	year = {2001},
	pages = {528-542}
}

@article{jee2009data,
  title={A data flow-based structural testing technique for {FBD} programs},
  author={Jee, E. and Yoo, J. and Cha, S. and Bae, D.},
  journal={Information and Software Technology},
  volume={51},
  number={7},
  pages={1131-1139},
  year={2009},
  publisher={Elsevier}
}



@article{Felleisen1992_rsec,
 author = {Felleisen, Matthias and Hieb, Robert},
 title = {The revised report on the syntactic theories of sequential control and state},
 journal = {Theor. Comput. Sci.},
 issue_date = {14 Sept. 1992},
 volume = {103},
 number = {2},
 month = sep,
 year = {1992},
 issn = {0304-3975},
 pages = {235--271},
 numpages = {37},
 publisher = {Elsevier Science Publishers Ltd.},
 address = {Essex, UK},
}

@misc{BOEING:747,
   author = "Boeing",
   title = "747 Fun Facts",
   note = "{http://www.boeing.com/commercial/ 747family/pf/pf\_facts.html}"
}

@article{Charette09:code,
 author = {Robert Charette},
 title = {This Car Runs on Code},
 journal = {IEEE Spectrum},
 year = {2009},
 month = {February},
 publisher = {IEEE}
 }

@INPROCEEDINGS{Hammond01:WiW,
author={Hammond, J. and Rawlings, R. and Hall, A.},
booktitle={Requirements Engineering, 2001. Proceedings. Fifth IEEE Int'l Symposium on},
title={Will it work? [Requirements engineering]},
year={2001},
month={},
volume={},
number={},
pages={102 -109},
keywords={RE;case studies;complex smaller systems;industrial application;integrated system;large heterogeneous distributed systems;practical techniques;requirements engineering;systems integration;distributed programming;risk management;systems analysis;},
doi={10.1109/ISRE.2001.948549},
ISSN={},}

@article{leveson2004role,
  title={Role of software in spacecraft accidents},
  author={Leveson, N.G.},
  journal={Journal of spacecraft and Rockets},
  volume={41},
  number={4},
  pages={564--575},
  year={2004}
}

@inproceedings{lutz1993analyzing,
  title={Analyzing software requirements errors in safety-critical, embedded systems},
  author={Lutz, R.R.},
  booktitle={Requirements Engineering, 1993., Proceedings of IEEE Int'l Symposium on},
  pages={126--133},
  year={1993},
  organization={IEEE}
}

@inproceedings{rushby2011new,
  title={New challenges in certification for aircraft software},
  author={Rushby, J.},
  booktitle={Proceedings of the ninth ACM Int'l Conf. on Embedded software},
  pages={211--218},
  year={2011},
  organization={ACM}
}
%added by Anitha for hierachical representation disucssions.
@techreport{rasmussen1981coping,
  title={Coping with complexity},
  author={Rasmussen, J. and Lind, M.},
  year={1981}
}

@article{rasmussen1985role,
  title={The role of hierarchical knowledge representation in decisionmaking and system management},
  author={Rasmussen, J.},
  journal={Systems, Man and Cybernetics, IEEE Transactions on},
  number={2},
  pages={234--243},
  year={1985},
  publisher={IEEE}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%    Added by Dongjiang on multi-valued LTL
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@article{morse2012model,
  title={Model checking {LTL} properties over {ANSI-C} programs with bounded traces},
  author={Morse, J. and Cordeiro, L. and Denis, N. and Bernd, F.},
  journal={Software and Systems Modelling on SEFM'11},
  year={2012}
}

@article{bauer2006monitoring,
  title={Monitoring of real-time properties},
  author={Bauer, A. and Leucker, M. and Schallhart, C.},
  journal={FSTTCS 2006: Foundations of Software Technology and Theoretical Computer Science},
  pages={260--272},
  year={2006},
  publisher={Springer}
}

@article{bauer2011runtime,
  title={Runtime verification for {LTL} and {TLTL}},
  author={Bauer, A. and Leucker, M. and Schallhart, C.},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={20},
  number={4},
  pages={14},
  year={2011},
  publisher={ACM}
}

@inproceedings{bauer2007good,
  title={The good, the bad, and the ugly, but how ugly is ugly?},
  author={Bauer, A. and Leucker, M. and Schallhart, C.},
  booktitle={Runtime Verification},
  pages={126--138},
  year={2007},
  organization={Springer}
}

@article{bauer2010comparing,
  title={Comparing {LTL} semantics for runtime verification},
  author={Bauer, A. and Leucker, M. and Schallhart, C.},
  journal={Journal of Logic and Computation},
  volume={20},
  number={3},
  pages={651-674},
  year={2010},
  publisher={Oxford Univ Press}
}

@article{tan2011state,
  title={State coverage metrics for specification-based testing with B{\"u}chi automata},
  author={Tan, L.},
  journal={Tests and Proofs},
  pages={171--186},
  year={2011},
  publisher={Springer}
}

@article{ammann2008coverage,
  title={Coverage criteria for state based specifications},
  author={Ammann, P. and Offutt, J. and Xu, W.},
  journal={Formal methods and testing},
  pages={118--156},
  year={2008},
  publisher={Springer}
}

% added by anitha for CPS Workshop 2013

@article{reseachdevelopment,
  title={High-Confidence Medical Devices : Cyber-Physical Systems for 21st Century Health Care. Technical report. http://www.nitrd.gov/About/MedDevice-FINAL1-web.pdf},
  author={NITRD High Confidence Software and Systems Coordinating Group},
   year={2009}
}

@ARTICLE{fda2010guidance,
	AUTHOR = "FDA",
	TITLE = "Guidance for {I}ndustry and {FDA} Staff - {T}otal {P}roduct {L}ife {C}ycle: {I}nfusion {P}ump - {P}remarket {N}otification [510(k)] {S}ubmissions",	
	MONTH = "April",
	YEAR = {2010}
}

@Misc{Simulink:Website,
 title = {Simulink - Simulation and Model-Based Design},
  howpublished = { http://www.mathworks.com/products/simulink/},
}
@Misc{Stateflow:Website,
 title = {Stateflow - {M}ath{W}orks tool for modeling state machines},
  howpublished = {http://www.mathworks.com/products/stateflow/},
}

@Misc{GIP:Website,
 title = {Generic Infusion Pump project},
  howpublished = {http://rtg.cis.upenn.edu/gip.php3},
}

@Misc{ProverPlugin,
 title = {Prover Plug-In},
  howpublished = {http://www.prover.com/products/prover\_plugin/},
}

@ARTICLE{fda2010whitepaper,
  title={White {P}aper: {I}nfusion {P}ump {I}mprovement {I}nitiative},
  author={FDA},
  month = {April},
  year={2010}
}



%Anitha - in the following URL, it was long to be displayed in 2 column format. But the short cut i mentioned in the title redirects to the same URL as on Feb 6 2013.

@Misc{InfusionPumpRecals,
 title = {Infusion {P}umps},
  howpublished = {http://www.fda.gov/InfusionPumps},
}

@inproceedings{kelly2007reviewing,
  title={Reviewing assurance arguments-a step-by-step approach},
  author={Kelly, T},
  booktitle={Proceedings of Workshop on Assurance Cases for Security},
  year={2007}
}


@inproceedings{wilson1995safety,
  title={Safety case development: Current practice, future prospects},
  author={Wilson, SP and Kelly, Tim P and McDermid, John A},
  booktitle={Proceedings 1st ENCRESS/12th Annual CSR Workshop},
  year={1995}
}

@article{kelly1999arguing,
  title={Arguing safety-a systematic approach to managing safety cases},
  author={Kelly, T.P. and others},
  journal={UNIVERSITY OF YORK DEPARTMENT OF COMPUTER SCIENCE-PUBLICATIONS-YCST},
  year={1999},
  publisher={University of York}
}

@article{sha2009cyber,
  title={Cyber-physical systems: A new frontier},
  author={Sha, L. and Gopalakrishnan, S. and Liu, X. and Wang, Q.},
  journal={Machine Learning in Cyber Trust},
  pages={3--13},
  year={2009},
  publisher={Springer}
}

@inproceedings{knight2002safety,
  title={Safety critical systems: challenges and directions},
  author={Knight, J.C.},
  booktitle={Proceedings of the 24th Int'l Conf. on Software Engineering},
  pages={547--550},
  year={2002},
  organization={IEEE}
}

@inproceedings{jackson1993domain,
  title={Domain descriptions},
  author={Jackson, M. and Zave, P.},
  booktitle={Proceedings of IEEE Int'l Symposium on Requirements Engineering},
  pages={56--64},
  year={1993},
  organization={IEEE}
}


@inproceedings{lee2008cyber,
  title={Cyber physical systems: Design challenges},
  author={Lee, E.A.},
  booktitle={11th IEEE Int'l Symposium on Object Oriented Real-Time Distributed Computing (ISORC)},
  pages={363--369},
  year={2008},
  organization={IEEE}
}

@article{brooks1987no,
  title={No silver bullet: Essence and accidents of software engineering},
  author={Brooks, F.P.},
  journal={IEEE computer},
  volume={20},
  number={4},
  pages={10--19},
  year={1987}
}

@article{van2004object,
  title={From object orientation to goal orientation: A paradigm shift for requirements engineering},
  author={Van Lamsweerde, A. and Letier, E.},
  journal={Radical Innovations of Software and Systems Engineering in the Future},
  pages={153--166},
  year={2004},
  publisher={Springer}
}



@inproceedings{tate2008model,
  title={Model Based Requirements Elicitation},
  author={Tate, PG},
  booktitle={3rd IET Int'l Conf. on System Safety},
  pages={1--5},
  year={2008},
  organization={IET}
}

@inproceedings{yu1997towards,
  title={Towards modelling and reasoning support for early-phase requirements engineering},
  author={Yu, E.S.K.},
  booktitle={Proceedings of the Third IEEE Int'l Symposium on Requirements Engineering},
  pages={226--235},
  year={1997},
  organization={IEEE}
}



@inproceedings{mavin2009easy,
  title={Easy approach to requirements syntax (EARS)},
  author={Mavin, A. and Wilkinson, P. and Harwood, A. and Novak, M.},
  booktitle={17th IEEE Int'l Requirements Engineering Conf.},
  pages={317--322},
  year={2009},
  organization={IEEE}
}
@article{parnas1979designing,
  title={Designing software for ease of extension and contraction},
  author={Parnas, D.L.},
  journal={IEEE Transactions on Software Engineering},
  number={2},
  pages={128--138},
  year={1979},
  publisher={IEEE}
}

@inproceedings{Whalen12,
  author = {Whalen, M.W. and Murugesan, A. and Heimdahl, M.P.E.},
  booktitle = {First Int'l Workshop on the Twin Peaks of Requirements and Architecture},
  keywords = {TwinPeaks},
  title = {Your what is my how: Why requirements and architectural design should be iterative},
  year = 2012
}


%added by anitha for Mode modelling paper
@INPROCEEDINGS{Leveson97analyzingsoftware,
    author = {Nancy Leveson and L. Denise Pinnel and Sean David Sandys and Shuichi Koga and Jon Damon Reese},
    title = {Analyzing Software Specifications for Mode Confusion Potential},
    booktitle = {Proceedings of a Workshop on Human Error and System Development},
    year = {1997},
    pages = {132--146}
}


@InProceedings{Verma05surveyof,
    author = {Vandi Verma and Ari J\^{o}nsson and Reid Simmons and Tara Estlin and Rich Levinson},
    title = {Survey of Command Execution Systems for NASA Spacecraft and Robots},
    booktitle = {Plan Execution: A Reality Check Workshop at the Int'l Conf. on
                 Automated Planning and Scheduling (ICAPS)},
    month = {June},
    year = {2005},
    address = {Monterey, CA}
}

@book{miller1999detecting,
  title={Detecting mode confusion through formal modeling and analysis},
  author={Miller, Stephen P and Potts, James N and Collins, Rockwell},
  year={1999},
  publisher={National Aeronautics and Space Administration, Langley Research Center}
}

@InProceedings{Verma06:plexil,
    author = {V. Verma and A. J\^{o}nsson and C. Pasareanu and M. Iatauro},
    title = {Universal Executive and {PLEXIL}: Engine and Language for Robust Spacecraft Control and Operations},
    booktitle = {American Institute of Aeronautics and Astronautics Space 2006 Conf.},
    year = {2006},
    month = {September}
}


@book{miller2003flight,
  title={Flight guidance system requirements specification},
  author={Miller, Steven P and Tribble, A and Carlson, T and Danielson, Eric J},
  year={2003},
  publisher={National Aeronautics and Space Administration, Langley Research Center}
}

@inproceedings{joshi2003mode,
  title={Mode confusion analysis of a flight guidance system using formal methods},
  author={Joshi, Anjali and Miller, Steven P and Heimdahl, Mats PE},
  booktitle={Proceedings of 22nd Digital Avionics Systems Conf.(DASC'03)},
  volume={1},
  pages={2--D},
  year={2003},
  organization={IEEE}
}

@article{Rosu2010:K,
title = "An overview of the K semantic framework",
journal = "J. of Logic and Algebraic Programming",
volume = "79",
number = "6",
pages = "397 - 434",
year = "2010",
issn = "1567-8326",
doi = "10.1016/j.jlap.2010.03.012",
author = "Grigore Rosu and Traian Florin Serbanuta"
}

%mode definition confusion
@article{bredereke2002rigorous,
  title={A rigorous view of mode confusion},
  author={Bredereke, Jan and Lankenau, Axel},
  journal={Computer Safety, Reliability and Security},
  pages={1--13},
  year={2002},
  publisher={Springer}
}

%feature definition confusion
@article{pulvermueller2002feature,
  title={Feature interaction in composed systems},
  author={Pulvermueller, Elke and Speck, Andreas and Coplien, James and D�Hondt, Maja and De Meuter, Wolfgang},
  journal={Object-Oriented Technology},
  pages={1--16},
  year={2002},
  publisher={Springer}
}
@article{robak2001feature,
  title={Feature interaction and composition problems in software product lines},
  author={Robak, Silva and Franczyk, Bogdan},
  journal={Feature Interaction in Composed System},
  pages={61},
  year={2001}
}

%feature defn good
@techreport{kang1990feature,
  title={Feature-oriented domain analysis (FODA) feasibility study},
  author={Kang, Kyo C and Cohen, Sholom G and Hess, James A and Novak, William E and Peterson, A Spencer},
  year={1990},
  institution={DTIC Document}
}
%feature defn2
@article{liu2005modeling,
  title={Modeling interactions in feature oriented software designs},
  author={Liu, Jia and Batory, Don and Nedunuri, Srinivas},
  journal={FIW},
  pages={178--197},
  year={2005}
}


%%%%%%%%%%%%%%%requiremnts and Architecture papers%%%%%%%%%%%%%%%

@inproceedings{hall2002relating,
  title={Relating software requirements and architectures using problem frames},
  author={Hall, Jon G and Jackson, Michael and Laney, Robin C and Nuseibeh, Bashar and Rapanotti, Lucia},
  booktitle={Proceedings of Joint Int'l Conf. on Requirements Engineering},
  pages={137--144},
  year={2002},
  organization={IEEE}
}

@inproceedings{brandozzi2001transforming,
  title={Transforming goal oriented requirement specifications into architecture prescriptions},
  author={Brandozzi, Manuel and Perry, Dewayne E},
  booktitle={Workshop from Soft. Req. to Arch},
  pages={54--61},
  year={2001}
}

@inproceedings{grunbacher2001reconciling,
  title={Reconciling software requirements and architectures: The cbsp approach},
  author={Grunbacher, Paul and Egyed, Alexander and Medvidovic, Nenad},
  booktitle={Proceedings of 5th Int'l Symposium on Requirements Engineering},
  pages={202--211},
  year={2001},
  organization={IEEE}
}

% Will it work



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%Added by Anitha for Req Model paper
@book{dorf2005modern,
  title={Modern {C}ontrol {S}ystems},
  author={Dorf, R.C. and Bishop, R.H.},
  year={2005},
  publisher={Pearson Prentice Hall}
}

@inproceedings{xu2002effects,
  title={Effects of vehicle-vehicle/roadside-vehicle communication on adaptive cruise controlled highway systems},
  author={Xu, Qing and Hedrick, Karl and Sengupta, Raja and VanderWerf, Joel},
  booktitle={Proceedings of Vehicular Technology Conf.},
  volume={2},
  pages={1249--1253},
  year={2002},
  organization={IEEE}
}

%%%% Added by Anitha for CPS Large Poster - Mar 2013
@inproceedings{mcps2013,
  title={Using Models to Address Challenges in Specifying Requirements for Medical Cyber-Physical Systems},
  author={Murugesan,Anitha and Rayadurgam,Sanjai and Heimdahl,Mats},
  booktitle={Fourth workshop on Medical Cyber-Physical Systems},
  month=Apr,
  year={2013}
  }

@inproceedings{icsetwinpeaks,
  title={Modeling and Requirements on the Physical Side of Cyber-Physical Systems},
  author={Heimdahl,Mats and Duan,Lian and Murugesan,Anitha and Rayadurgam,Sanjai },
  booktitle={Second Int'l Workshop on the Twin Peaks of Requirements and Architecture},
  month=May,
  year={2013}
}

@inproceedings{modemodelingMise,
author={Murugesan,Anitha and Rayadurgam,Sanjai and Heimdahl,Mats},
title={Modes, Features, and State-Based Modeling for Clarity and Flexibility},
 booktitle={Fifth Int'l Workshop on Modeling in Software Engineering},
  month=May,
  year={2013}
}


@article{chen1998metamorphic,
  title={Metamorphic testing: a new approach for generating next test cases},
  author={Chen, Tsong Y and Cheung, Shing C and Yiu, SM},
  journal={Department of Computer Science, Hong Kong University of Science and Technology, Tech. Rep. HKUST-CS98-01},
  year={1998}
}

@techreport{Whalen13:MCDC_TR,
  title =    {Efficient Multicore MCDC Monitoring},
  author =   {Michael W. Whalen},
  month =    {May},
  year =     {2013},
  institution = {University of Minnesota Twin Cities},
  number = {13-008},
  annote =   {\miketoread}
}


@INPROCEEDINGS{Bonakdarpour12:monitoring,
    author={Bonakdarpour, B. and Thomas, J.J. and Fischmeister, S.},
    booktitle={Embedded and Real-Time Computing Systems and Applications (RTCSA), 2012 IEEE 18th Int'l Conf. on},
    title={Time-Triggered Program Self-Monitoring},
    year={2012},
    pages={260-269},
    keywords={formal verification;monitoring;optimisation;NP-complete;SAT based solution;application program;computing system;engineering time critical application;error detection;exponential complexity;external time triggered monitor;formal testing;formal verification;healthy behavior;operating system level;optimization problem;predictable overhead;safety critical embedded system;self-sampling instrumentation instruction;synchronization dependency;time triggered program self monitoring;time triggered runtime monitoring;time triggered self monitored program;Complexity theory;Educational institutions;Inspection;Instruments;Monitoring;Runtime;Synchronization;Runtime verification;embedded systems;instrumentation;monitoring;predictability;real-time;self-monitoring;time-triggered},
    doi={10.1109/RTCSA.2012.16},
    ISSN={1533-2306}
}

@inproceedings{Chen2012:arch,
 author = {Chen, Yu-Yuan and Jamkhedkar, Pramod A. and Lee, Ruby B.},
 title = {A software-hardware architecture for self-protecting data},
 booktitle = {Proceedings of the 2012 ACM Conf. on Computer and communications security},
 series = {CCS '12},
 year = {2012},
 isbn = {978-1-4503-1651-4},
 location = {Raleigh, North Carolina, USA},
 pages = {14--27},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2382196.2382201},
 doi = {10.1145/2382196.2382201},
 acmid = {2382201},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {architecture, information flow tracking, policy languages, security, self-protecting data, trusted computing}
}

@article{Ozsoy12:SIFT,
author={Ozsoy, M. and Ponomarev, D. and Abu-Ghazaleh, N. and Suri, T.},
journal={Computers, IEEE Transactions on},
title={SIFT: Low-Complexity Energy-Efficient Information Flow Tracking on SMT Processors},
year={2012},
volume={PP},
number={99},
pages={1-1},
keywords={Computer Systems Organization;General;Hardware;Processor Architectures},
doi={10.1109/TC.2012.189},
ISSN={0018-9340}
}

@INPROCEEDINGS{Li12:HeapDefender,
author={Dongfang Li and Zhenglin Liu and Yizhi Zhao},
booktitle={Ubiquitous Intelligence Computing and 9th Int'l Conf. on Autonomic Trusted Computing (UIC/ATC), 2012 9th Int'l Conf. on},
title={HeapDefender: A Mechanism of Defending Embedded Systems against Heap Overflow via Hardware},
year={2012},
pages={851-856},
keywords={buffer storage;embedded systems;field programmable gate arrays;instruction sets;parallel programming;security of data;CPU;FPGA;HeapDefender;embedded processor;field programmable gate array;hardware cost overhead;hardware defense mechanism;heap buffer overflow attack detection;heap overflow prevention;instruction level;parallel programming;security threat;stack overflow prevention;Buffer overflow;Embedded systems;Hardware;Monitoring;Payloads;Pipelines;Security;HeapDefender;embedded system;heap overflow},
doi={10.1109/UIC-ATC.2012.115}}

@ARTICLE{Whalen13:WhatHow:TwinPeaksIEEESoftware,
 author={Whalen, Michael W. and Gacek, Andrew and Cofer, Darren and Murugesan, Anitha and Heimdahl, Mats P.E. and Rayadurgam, Sanjai},
 journal={Software, IEEE},
 title={Your What Is My How: Iteration and Hierarchy in System Design},
 year={2013},
 volume={30},
 number={2},
 pages={54-60},
 keywords={Aerospace electronics;Analytical models;Cognition;Computer architecture;Contracts;Formal verification;Software architecture;Software development;architecture;formal methods;model checking;refinement;requirements},
 doi={10.1109/MS.2012.173},
 ISSN={0740-7459}}


@inproceedings{Belli:1993,
 author = {Belli, B. and Jack, O.},
 title = {Implementation-based analysis and testing of Prolog programs},
 booktitle = {Proceedings of the 1993 ACM SIGSOFT Int'l symposium on Software testing and analysis},
 series = {ISSTA '93},
 year = {1993},
 isbn = {0-89791-608-5},
 location = {Cambridge, Massachusetts, USA},
 pages = {70--80},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/154183.154203},
 doi = {10.1145/154183.154203},
 acmid = {154203},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@INPROCEEDINGS{Belli92:ASQC,
author={Belli, B. and Jack, O.},
booktitle={2nd Int'l Conf. on Software Quality},
title={ProTEST II: Testing Logic Programs},
year={1992},
pages={1280135}
}

@INPROCEEDINGS{Luo92:prolog-testing,
author={Luo, G. and Bochmann, G.V. and Sarikaya, B. and Boyer, Michel},
booktitle={Software Reliability Engineering, 1992. Proceedings., Third Int'l Symposium on},
title={Control-flow based testing of Prolog programs},
year={1992},
pages={104-113},
keywords={PROLOG;graph theory;logic programming;program testing;Prolog programs;control flow based testing;control flow graphs;coverage;declarative language;fault detection capability;fault model;test selection;Algorithms;Automatic testing;Computer languages;Fault detection;Flow graphs;Logic programming;Logic testing;Software measurement;Software quality;Software testing},
doi={10.1109/ISSRE.1992.285853}}

@incollection{Zhao07:prolog,
year={2007},
isbn={978-3-540-76636-0},
booktitle={Programming Languages and Systems},
volume={4807},
series={Lecture Notes in Computer Science},
editor={Shao, Zhong},
doi={10.1007/978-3-540-76637-7_8},
title={A Novel Test Case Generation Method for Prolog Programs Based on Call Patterns Semantics},
publisher={Springer Berlin Heidelberg},
author={Zhao, Lingzhong and Gu, Tianlong and Qian, Junyan and Cai, Guoyong},
pages={105-121}
}

@inproceedings{SheeranSS00,
  author    = {Mary Sheeran and
               Satnam Singh and
               Gunnar St{\aa}lmarck},
  title     = {Checking Safety Properties Using Induction and a SAT-Solver},
  booktitle = {FMCAD},
  year      = {2000},
  pages     = {108-125},
  ee        = {http://dx.doi.org/10.1007/3-540-40922-X_8},
  crossref  = {DBLP:conf/fmcad/2000},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/fmcad/2000,
  editor    = {Warren A. Hunt Jr. and
               Steven D. Johnson},
  title     = {Formal Methods in Computer-Aided Design, Third Int'l
               Conf., FMCAD 2000, Austin, Texas, USA, November 1-3,
               2000, Proceedings},
  booktitle = {FMCAD},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {1954},
  year      = {2000},
  isbn      = {3-540-41219-0},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{hilt2013,
  author    = {Anitha Murugesan and Michael W. Whalen and Sanjai Rayadurgam and Mats P.E. Heimdahl},
  title     = {Compositional Verification of a Medical Device System},
  booktitle = {ACM Int'l Conf. on High Integrity Language Technology (HILT) 2013},
  year      = {2013},
  month     = {November},
  publisher = {ACM}
}
@inproceedings{hilt2013Short,
  author    = {Anitha Murugesan and others},
  title     = {Compositional Verification of a Medical Device System},
  booktitle = {HILT},
  year      = {2013}
}

@phdthesis{Kamp68,
    author = {Johan A. W. Kamp},
    title = {Tense Logic and the Theory of Linear Order},
    school={UCLA},
    year = {1968}
}

@inproceedings{Larson13:BLESS,
    author = {Brian Larson and Patrice Chalin and John Hatcliff},
    title = {B{L}{E}{S}{S}: Formal Specification and Verification of Behaviors for Embedded Systems with Software},
    booktitle = {Proceedings of the 5th NASA Formal Methods Symposium},
    year = {2013},
    publisher = {Springer-Verlag}
}

@Book{SAE:BAAnnex,
  author =   {SAE},
  title =    {SAE Architecture Analysis and Design Language (AADL) Annex Volume 2},
  publisher = {SAE Int'l},
  year =     {2011},
  annote =   {\commentmike{Add more here...}}
}

%% Bib from Penn for ICCPS Paper

@TechReport{CU05,
  author = 	 {V. Chan and S. Underwood},
  title = 	 {A Single-Chip Pulsoximeter Design Using the {MSP430}},
  institution =  {Texas Instruments},
  year = 	 2005,
  number = 	 {SLAA274},
  month = 	 nov}

@inproceedings{BDL04,
          volume = {3185},
          author = {G. Behrmann and A. David and K.G. Larsen},
       booktitle = {Formal Methods for the Design of Real-Time Systems (revised lectures)},
series = {LNCS},
           title = {A Tutorial on {UPPAAL}},
           pages = {200--237},
            year = {2004},
}

@article{Pajic2012,
author={Pajic, M. and Mangharam, R. and Sokolsky, O. and Arney, D. and Goldman, J. and Lee, I.},
journal={Industrial Informatics, IEEE Transactions on},
title={Model-Driven Safety Analysis of Closed-Loop Medical Systems},
year={2012},
volume={PP},
pages={1--12},
note={In early online access.}
}
@article{Pajic2012Short,
author={Pajic, M. and others},
journal={Industrial Informatics, IEEE Transactions on},
title={Model-Driven Safety Analysis of Closed-Loop Medical Systems},
year={2012},
pages={1--12}
}

@Book{Bequette_proc_ctrl,
  editor = 	 {B. Wayne Bequette},
  title = 	 {Process control: modeling, design, and simulation},
  publisher = 	 {Prentice Hall},
  year = 	 2003,
  edition = 	 {2nd}}

@INPROCEEDINGS{Clarke1981,
year={1981},
series={LNCS},
booktitle={Workshop on Logics of Programs},
title={Design and synthesis of synchronization skeletons using branching time temporal logic},
author={Clarke, EdmundM. and Emerson, E.Allen},
volume={131},
pages={52-71},
}

@inproceedings{MasciSAFECOMP13,
title = {Model-based development of the Generic {PCA} infusion pump user interface within {PVS}},
author = {Paolo Masci and Anaheed Ayoub and Paul Curzon and Insup Lee and Oleg Sokolsky and Harold Thimbleby},
booktitle = {Proceedings of the 32$^{nd}$ Int'l Conf. on Computer Safety, Reliability and Security (SAFECOMP 2013)},
month = sep,
year = 2013
}


@inproceedings{HMP92,
author = {T. A. Henzinger and Z. Manna and A. Pnueli},
title = {What good are digital clocks?},
booktitle = {Proceedings of ICALP 1992},
series = {LNCS},
volume = 623,
pages = {545--558},
year = 1992
}

@inproceedings{HMP92Short,
author = {T. A. Henzinger and others},
title = {What good are digital clocks?},
booktitle = {Proceedings of ICALP 1992}
volume = 623,
pages = {545--558},
year = 1992
}


@INPROCEEDINGS{GPV94,
    author = {Aleks G�ll� and Anuj Puri and Pravin Varaiya},
    title = {Discretization of Timed Automata},
    booktitle = {Proceedings of the 33$^{rd}$ IEEE Conf. on Decision and Control},
    year = {1994},
    pages = {957--958}
}
@INPROCEEDINGS{GPV94Short,
    author = {Aleks G�ll� and others},
    title = {Discretization of Timed Automata},
    booktitle = {Proceedings of the 33$^{rd}$ IEEE Conf. on Decision and Control},
    year = {1994},
    pages = {957--958}
}


@inproceedings{Pajic12,
  title = {From Verification to Implementation: A Model Translation Tool and a Pacemaker Case Study},
  author = {Miroslav Pajic and Zhihao Jiang and Insup Lee and Oleg Sokolsky and and Rahul Mangharam},
  booktitle = {Proceedings of the 18$^{th}$ IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS 2012)},
  year = 2012,
  month = apr
}
@inproceedings{Pajic12Short,
  title = {From Verification to Implementation: A Model Translation Tool and a Pacemaker Case Study},
  author = {Miroslav Pajic and others},
  booktitle = {RTAS 2012},
  year = 2012
}


@article{WS+08,
journal = {Diabetes Care},
year = 2008,
month = may,
volume = 31,
number = 5,
pages = {934--939},
title = {Fully automated closed-loop insulin delivery versus semiautomated hybrid control in pediatric patients with type 1 diabetes using an artificial pancreas},
author = {S.A. Weinzimer and G.M. Steil and K.L. Swan and J. Dziura and N. Kurtz and W.V. Tamborlane}
}

@article{Cobelli09,
author = {C. Cobelli and C. D. Man and G. Sparacino and L. Magni and G. De Nicolao and B. P. Kovatchev},
title = {Diabetes: Models, signals, and control},
journal = {IEEE Reviews in Biomedical Engineering},
volume = 2,
pages = {54--96},
year = 2009
}

@inproceedings{MasciSAFECOMP13,
title = {Model-based development of the Generic {PCA} infusion pump user interface within {PVS}},
author = {Paolo Masci and Anaheed Ayoub and Paul Curzon and Insup Lee and Oleg Sokolsky and Harold Thimbleby},
booktitle = {Proceedings of the 32$^{nd}$ Int'l Conf. on Computer Safety, Reliability and Security (SAFECOMP 2013)},
month = sep,
year = 2013
}

@inproceedings{KimEMSOFT2011,
 author = {Kim, BaekGyu and Ayoub, Anaheed and Sokolsky, Oleg and Lee, Insup and Jones, Paul and Zhang, Yi and Jetley, Raoul},
 title = {Safety-assured development of the {GPCA} infusion pump software},
 booktitle = {Proceedings of EMSOFT},
 year = {2011},
 }

@inproceedings{CKLG07,
 author = {Cortes, Philippe-Antoine and Krishnan, Shankar M. and Lee, Insup and Goldman, Julian M.},
 title = {Improving the Safety of Patient-Controlled Analgesia Infusions with Safety Interlocks and Closed-Loop Control},
 booktitle = {Proceedings of the 2007 Joint Workshop on High Confidence Medical Devices, Software, and Systems and Medical Device Plug-and-Play Interoperability},
 year = {2007},
 pages = {149--150}
}

@article{vittorini2004osmosys,
  title={The {O}s{M}o{S}ys approach to multi-formalism modeling of systems},
  author={Vittorini, Valeria and Iacono, Mauro and Mazzocca, Nicola and Franceschinis, Giuliana},
  journal={Software and Systems Modeling},
  volume={3},
  number={1},
  pages={68--81},
  year={2004},
  publisher={Springer}
}

@incollection{de2002atom3,
  title={A{T}o{M}$^3$: A Tool for Multi-formalism and Meta-modelling},
  author={De Lara, Juan and Vangheluwe, Hans},
  booktitle={Fundamental approaches to software engineering},
  pages={174--188},
  year={2002},
  publisher={Springer}
}
@incollection{de2002atom3Short,
  title={A{T}o{M}$^3$: A Tool for Multi-formalism and Meta-modelling},
  author={De Lara, Juan and Vangheluwe, Hans},
  booktitle={Fundamental approaches to software engineering},
  pages={174--188},
  year={2002}
}


@article{deavours2002mobius,
  title={The {M}\"{o}bius framework and its implementation},
  author={Deavours, Daniel D. and Clark, Graham and Courtney, Tod and Daly, David and Derisavi, Salem and Doyle, Jay M. and Sanders, William H. and Webster, Patrick G.},
  journal={Software Engineering, IEEE Transactions on},
  volume={28},
  number={10},
  pages={956--969},
  year={2002},
  publisher={IEEE}
}

%% Added for Proposal by Anitha - As per request on 10/18/13

@article{Luo:2012:DDS:2355585.2355586,
 author = {Luo, Yangchun and Zhai, Antonia},
 title = {Dynamically dispatching speculative threads to improve sequential execution},
 journal = {ACM Trans. Archit. Code Optim.},
 issue_date = {September 2012},
 volume = {9},
 number = {3},
 month = oct,
 year = {2012},
 issn = {1544-3566},
 pages = {13:1--13:31},
 articleno = {13},
 numpages = {31},
 url = {http://doi.acm.org/10.1145/2355585.2355586},
 doi = {10.1145/2355585.2355586},
 acmid = {2355586},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Dynamic optimization, multicore, thread-level speculation},
}
@INPROCEEDINGS{5990748,
author={Seiler, P. and Vanek, B. and Bokor, J. and Balas, G.J.},
booktitle={American Control Conf. (ACC), 2011},
title={Robust Hinfinity filter design using frequency gridding},
year={2011},
pages={1801-1806},
ISSN={0743-1619},}

@inproceedings{srivastava2010hybrid,
  title={A hybrid-logic approach towards fault detection in complex cyber-physical systems},
  author={Srivastava, Nisheeth and Srivastava, Jaideep},
  booktitle={Proceedings of the Annual Conf. of the Prognostics and Health Management Society, Portland, Oregon, USA},
  pages={13--16},
  year={2010}
}

@inproceedings{seiler2011robust,
  title={Robust model matching for geometric fault detection filters},
  author={Seiler, Peter and Bokor, J{\'o}zsef and Vanek, Balint and Balas, Gary J},
  booktitle={American Control Conf. (ACC), 2011},
  pages={226--231},
  year={2011},
  organization={IEEE}
}
@inproceedings{freeman2011robust,
  title={Robust fault detection for commercial transport air data probes},
  author={Freeman, Paul and Seiler, Peter and Balas, Gary J},
  booktitle={18th IFAC World Congress. IFAC, Milan},
  year={2011}
}

@inproceedings{ozdemir2011wind,
  title={Wind turbine fault detection using counter-based residual thresholding},
  author={Ozdemir, Ahmet Arda and Seiler, Peter and Balas, Gary J},
  booktitle={Proceedings of IFAC World Congress},
  pages={8289--8294},
  year={2011}
}

@article{wheelerperformance,
  title={Performance Analysis of Fault Detection Systems Based on Linear Time-Invariant Sensor Dynamics with Additive Faults},
  author={Wheeler, Timothy J and Seiler, Peter and Packard, Andrew K and Balas, Gary J},
   journal = {American Control Conf.},
 year = {2010}
}

@INPROCEEDINGS{6160786,
author={Wheeler, Timothy J. and Seiler, P. and Packard, Andrew K. and Balas, G.J.},
booktitle={Decision and Control and European Control Conf. (CDC-ECC), 2011 50th IEEE Conf. on},
title={Performance analysis of LTV fault detection schemes with additive faults},
year={2011},
pages={3038-3043},
keywords={Aircraft;Computational modeling;Fault detection;Markov processes;Measurement;Probes;Reliability},
doi={10.1109/CDC.2011.6160786},
ISSN={0743-1546}}

@inproceedings{vanek2011robust,
  title={Robust fault detection filter design for commercial aircraft},
  author={Vanek, B{\'a}lint and Seiler, Peter and Bokor, J{\'o}zsef and Balas, Gary J},
  booktitle={Euro GNC 2011 1st CEAS Specialist Conf. on Guidance, Navigation \& Control, M{\"u}nich},
  year={2011}
}

@inproceedings{dorobantu2011frequency,
  title={Frequency Domain System Identification for a Small, Low-Cost, Fixed-Wing UAV},
  author={Dorobantu, Andrei and Murch, A and Mettler, Bernie and Balas, G},
  booktitle={AIAA Atmospheric Flight Mechanics Conf. and Exhibit},
  number={2011-6719},
  year={2011}
}

@INPROCEEDINGS{5470405,
author={Guojin He and Zhai, A.},
booktitle={Parallel Distributed Processing (IPDPS), 2010 IEEE Int'l Symposium on},
title={Improving the performance of program monitors with compiler support in multi-core environment},
year={2010},
pages={1-12},
keywords={flow graphs;multiprocessing systems;optimisation;program compilers;system monitoring;code generator;compiler support;control flow graph;dynamic program execution monitors;instrumentation-based dynamic program monitors;memory bug detection;monitoring requirements;multi-core environment;multi-core processors;optimization technique;static binary rewriter;taint-propagation;Application software;Computer architecture;Computer displays;Hardware;Instruments;Monitoring;Multicore processing;Optimizing compilers;Program processors;Security;compiler optimization;multi-core;program distilling;program execution monitor},
doi={10.1109/IPDPS.2010.5470405},
ISSN={1530-2075}}

@inproceedings{luo2010energy,
  title={Energy efficient speculative threads: dynamic thread allocation in Same-ISA heterogeneous multicore systems},
  author={Luo, Yangchun and Packirisamy, Venkatesan and Hsu, Wei-Chung and Zhai, Antonia},
  booktitle={Proceedings of the 19th Int'l Conf. on Parallel architectures and compilation techniques},
  pages={453--464},
  year={2010},
  organization={ACM}
}
@article{he2011efficient,
  title={Efficient dynamic program monitoring on multi-core systems},
  author={He, Guojin and Zhai, Antonia},
  journal={Journal of Systems Architecture},
  volume={57},
  number={1},
  pages={121--133},
  year={2011},
  publisher={Elsevier}
}

@inproceedings{Mekkat:2010:PCD:1739025.1739040,
 author = {Mekkat, Vineeth and Natarajan, Ragavendra and Hsu, Wei-Chung and Zhai, Antonia},
 title = {Performance characterization of data mining benchmarks},
 booktitle = {Proceedings of the 2010 Workshop on Interaction between Compilers and Computer Architecture},
 series = {INTERACT-14},
 year = {2010},
 isbn = {978-1-60558-921-3},
 location = {Pittsburgh, Pennsylvania},
 pages = {11:1--11:8},
 articleno = {11},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1739025.1739040},
 doi = {10.1145/1739025.1739040},
 acmid = {1739040},
 publisher = {ACM},
 address = {New York, NY, USA},
}
@inproceedings{he2008ex,
  title={Ex-mon: An architectural framework for dynamic program monitoring on multicore processors},
  author={He, Guojin and Zhai, Antonia and Yew, Pen-Chung},
  booktitle={The Twelfth Workshop on Interaction between Compilers and Computer Architectures, Interact-12},
  year={2008}
}

@INPROCEEDINGS{5470405,
author={Guojin He and Zhai, A.},
booktitle={Parallel Distributed Processing (IPDPS), 2010 IEEE Int'l Symposium on},
title={Improving the performance of program monitors with compiler support in multi-core environment},
year={2010},
pages={1-12},
keywords={flow graphs;multiprocessing systems;optimisation;program compilers;system monitoring;code generator;compiler support;control flow graph;dynamic program execution monitors;instrumentation-based dynamic program monitors;memory bug detection;monitoring requirements;multi-core environment;multi-core processors;optimization technique;static binary rewriter;taint-propagation;Application software;Computer architecture;Computer displays;Hardware;Instruments;Monitoring;Multicore processing;Optimizing compilers;Program processors;Security;compiler optimization;multi-core;program distilling;program execution monitor},
doi={10.1109/IPDPS.2010.5470405},
ISSN={1530-2075}}

@ARTICLE{6051465,
author={Insup Lee and Sokolsky, O. and Sanjian Chen and Hatcliff, J. and Eunkyoung Jee and BaekGyu Kim and King, A. and Mullen-Fortino, M. and Soojin Park and Roederer, A. and Venkatasubramanian, K.K.},
journal={Proceedings of the IEEE},
title={Challenges and Research Directions in Medical Cyber Physical Systems},
year={2012},
volume={100},
number={1},
pages={75-90},
keywords={medical administrative data processing;open systems;safety-critical software;security of data;autonomy;context-aware intelligence;context-aware system;device certifiability;intoperability;life-critical system;medical cyber-physical systems;networked system;privacy;security;system software assurance;Biomedical equipment;Closed loop systems;Computational modeling;Cyberspace;Medical services;Network topology;Pacemakers;Principal component analysis;Unified modeling language;Closed-loop physiological control;cyber�physical systems (CPSs);design challenges;medical device systems;model-based design},
doi={10.1109/JPROC.2011.2165270},
ISSN={0018-9219}}


@ARTICLE{5985460,
author={Zhihao Jiang and Pajic, M. and Mangharam, R.},
journal={Proceedings of the IEEE},
title={Cyber-Physical Modeling of Implantable Cardiac Medical Devices},
year={2012},
volume={100},
number={1},
pages={122-137},
doi={10.1109/JPROC.2011.2161241},
ISSN={0018-9219}}


@INPROCEEDINGS{6345897,
author={King, A. and Fortino, K. and Stevens, N. and Shah, S. and Fortino-Mullen, M. and Lee, I.},
booktitle={Engineering in Medicine and Biology Society (EMBC), 2012 Annual Int'l Conf. of the IEEE},
title={Evaluation of a smart alarm for intensive care using clinical data},
year={2012},
pages={166-169},
doi={10.1109/EMBC.2012.6345897},
ISSN={1557-170X}}


@incollection{ayoub2012systematic,
  title={A systematic approach to justifying sufficient confidence in software safety arguments},
  author={Ayoub, Anaheed and Kim, BaekGyu and Lee, Insup and Sokolsky, Oleg},
  booktitle={Computer Safety, Reliability, and Security},
  pages={305--316},
  year={2012},
  publisher={Springer}
}

@article{ayoub2013assessing,
  title={Assessing the Overall Sufficiency of Safety Arguments},
  author={Ayoub, Anaheed and Chang, Jian and Sokolsky, Oleg and Lee, Insup},
  year={2013},
  journal={21st Safety-critical Systems Symposium}
}

@ARTICLE{6322972,
author={Venkatasubramanian, K.K. and Vasserman, E.Y. and Sokolsky, O. and Insup Lee},
journal={Security Privacy, IEEE},
title={Security and Interoperable-Medical-Device Systems, Part 1},
year={2012},
volume={10},
number={5},
pages={61-63},
doi={10.1109/MSP.2012.128},
ISSN={1540-7993}}

@INPROCEEDINGS{6380685,
author={Baek Gyu Kim and Phan, L.T.X. and Insup Lee and Sokolsky, O.},
booktitle={Rapid System Prototyping (RSP), 2012 23rd IEEE Int'l Symposium on},
title={A model-based I/O interface synthesis framework for the cross-platform software modeling},
year={2012},
pages={16-22},
doi={10.1109/RSP.2012.6380685},
ISSN={2150-5500}}


@ARTICLE{6341078,
author={Pajic, M. and Mangharam, R. and Sokolsky, O. and Arney, D. and Goldman, J. and Lee, I.},
journal={Industrial Informatics, IEEE Transactions on},
title={Model-Driven Safety Analysis of Closed-Loop Medical Systems},
year={2012},
volume={PP},
number={99},
pages={1-1},
doi={10.1109/TII.2012.2226594},
ISSN={1551-3203}}

@inproceedings{Masci:2013:VIS:2494603.2480302,
 author = {Masci, Paolo and Ayoub, Anaheed and Curzon, Paul and Harrison, Michael D. and Lee, Insup and Thimbleby, Harold},
 title = {Verification of interactive software for medical devices: PCA infusion pumps and FDA regulation as an example},
 booktitle = {Proceedings of the 5th ACM SIGCHI symposium on Engineering interactive computing systems},
 series = {EICS '13},
 year = {2013},
 isbn = {978-1-4503-2138-9},
 location = {London, United Kingdom},
 pages = {81--90},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2480296.2480302},
 doi = {10.1145/2480296.2480302},
 acmid = {2480302},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{smith2013healthcare,
  title={Healthcare information technology's relativity problems: a typology of how patients� physical reality, clinicians� mental models, and healthcare information technology differ},
  author={Smith, Sean W and Koppel, Ross},
  journal={Journal of the American Medical Informatics Association},
  year={2013},
  publisher={BMJ Publishing Group Ltd}
}

@incollection{jee2010assurance,
  title={Assurance cases in model-driven development of the pacemaker software},
  author={Jee, Eunkyoung and Lee, Insup and Sokolsky, Oleg},
  booktitle={Leveraging Applications of Formal Methods, Verification, and Validation},
  pages={343--356},
  year={2010},
  publisher={Springer}
}

@INPROCEEDINGS{5934797,
author={Sokolsky, O.},
booktitle={Engineering of Computer Based Systems (ECBS), 2011 18th IEEE Int'l Conf. and Workshops on},
title={Medical Cyber-Physical Systems},
year={2011},
pages={2-2},
doi={10.1109/ECBS.2011.40}}

@INPROCEEDINGS{6090663,
author={Arney, D. and Venkatasubramanian, K.K. and Sokolsky, O. and Insup Lee},
booktitle={Engineering in Medicine and Biology Society,EMBC, 2011 Annual Int'l Conf. of the IEEE},
title={Biomedical devices and systems security},
year={2011},
pages={2376-2379},
doi={10.1109/IEMBS.2011.6090663},
ISSN={1557-170X},}

@inproceedings{Murphy:2011:ETH:1987993.1988003,
 author = {Murphy, Christian and Raunak, M. S. and King, Andrew and Chen, Sanjian and Imbriano, Christopher and Kaiser, Gail and Lee, Insup and Sokolsky, Oleg and Clarke, Lori and Osterweil, Leon},
 title = {On effective testing of health care simulation software},
 booktitle = {Proceedings of the 3rd Workshop on Software Engineering in Health Care},
 series = {SEHC '11},
 year = {2011},
 isbn = {978-1-4503-0585-3},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {40--47},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1987993.1988003},
 doi = {10.1145/1987993.1988003},
 acmid = {1988003},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{King:2010:GFR:1882992.1883069,
 author = {King, Andrew L. and Roederer, Alex and Arney, David and Chen, Sanjian and Fortino-Mullen, Margaret and Giannareas, Ana and Hanson,III, William and Kern, Vanessa and Stevens, Nicholas and Tannen, Jonathan and Trevino, Adrian Viesca and Park, Soojin and Sokolsky, Oleg and Lee, Insup},
 title = {GSA: a framework for rapid prototyping of smart alarm systems},
 booktitle = {Proceedings of the 1st ACM Int'l Health Informatics Symposium},
 series = {IHI '10},
 year = {2010},
 isbn = {978-1-4503-0030-8},
 location = {Arlington, Virginia, USA},
 pages = {487--491},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/1882992.1883069},
 doi = {10.1145/1882992.1883069},
 acmid = {1883069},
 publisher = {ACM},
 address = {New York, NY, USA}
}
@INPROCEEDINGS{6090051,
author={Zhihao Jiang and Mangharam, R.},
booktitle={Engineering in Medicine and Biology Society,EMBC, 2011 Annual Int'l Conf. of the IEEE},
title={Modeling cardiac pacemaker malfunctions with the Virtual Heart Model},
year={2011},
pages={263-266},
keywords={Automata;Electrocardiography;Heart;Lead;Pacemakers;Sensors;Timing;Computer Simulation;Equipment Failure;Equipment Failure Analysis;Heart Conduction System;Humans;Models, Cardiovascular;Pacemaker, Artificial},
doi={10.1109/IEMBS.2011.6090051},
ISSN={1557-170X},}


@inproceedings{kim2011safety,
  title={Safety-assured development of the {gpca} infusion pump software},
  author={Kim, BaekGyu and Ayoub, Anaheed and Sokolsky, Oleg and Lee, Insup and Jones, Paul and Zhang, Yi and Jetley, Raoul},
  booktitle={Proceedings of the ninth ACM Int'l Conf. on Embedded software},
  pages={155--164},
  year={2011},
  organization={ACM}
}

@inproceedings{asare2012medical,
  title={The medical device dongle: an open-source standards-based platform for interoperable medical device connectivity},
  author={Asare, Philip and Cong, Danyang and Vattam, Santosh G and Kim, BaekGyu and King, Andrew and Sokolsky, Oleg and Lee, Insup and Lin, Shan and Mullen-Fortino, Margaret},
  booktitle={Proceedings of the 2nd ACM SIGHIT Int'l Health Informatics Symposium},
  pages={667--672},
  year={2012},
  organization={ACM}
}

@inproceedings{wang2012runtime,
  title={Runtime verification of traces under recording uncertainty},
  author={Wang, Shaohui and Ayoub, Anaheed and Sokolsky, Oleg and Lee, Insup},
  booktitle={Runtime Verification},
  pages={442--456},
  year={2012},
  organization={Springer}
}


@INPROCEEDINGS{5945428,
author={Zhihao Jiang and Pajic, M. and Mangharam, R.},
booktitle={Cyber-Physical Systems (ICCPS), 2011 IEEE/ACM Int'l Conf. on},
title={Model-Based Closed-Loop Testing of Implantable Pacemakers},
year={2011},
pages={131-140},
keywords={cardiology;medical computing;pacemakers;program verification;cardiac pacemaker;closed-loop heart system;defibrillator;heart rate;implantable medical device;implantable pacemaker;model-based closed-loop testing;pacemaker mode switch operation;pacemaker-mediated tachycardia;reentry circuit;software test generation technique;timed automata-based heart model;trial-ventricle synchrony;Automata;Heart rate;Pacemakers;Software;Testing;Timing},
doi={10.1109/ICCPS.2011.28}}

@inproceedings{Alur:2011:RAD:2038642.2038668,
 author = {Alur, Rajeev and Trivedi, Ashutosh},
 title = {Relating average and discounted costs for quantitative analysis of timed systems},
 booktitle = {Proceedings of the ninth ACM Int'l Conf. on Embedded software},
 series = {EMSOFT '11},
 year = {2011},
 isbn = {978-1-4503-0714-7},
 location = {Taipei, Taiwan},
 pages = {165--174},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2038642.2038668},
 doi = {10.1145/2038642.2038668},
 acmid = {2038668},
 publisher = {ACM},
 address = {New York, NY, USA}
}
@inproceedings{Balasubramanian:2011:PMA:2001420.2001427,
 author = {Balasubramanian, Daniel and P\u{a}s\u{a}reanu, Corina S. and Whalen, Michael W. and Karsai, G\'{a}bor and Lowry, Michael},
 title = {Polyglot: modeling and analysis for multiple Statechart formalisms},
 booktitle = {Proceedings of the 2011 Int'l Symposium on Software Testing and Analysis},
 series = {ISSTA '11},
 year = {2011},
 isbn = {978-1-4503-0562-4},
 location = {Toronto, Ontario, Canada},
 pages = {45--55},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2001420.2001427},
 doi = {10.1145/2001420.2001427},
 acmid = {2001427},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {analysis, semantics of models, statecharts, testing},
}


@ONLINE{EmbeddedMatlab:Website,
author = {},
title = {Embedded MATLAB},
month = {},
year = {},
url = {http://www.mathworks.com/company/newsletters/articles/from-matlab-to-embedded-c.html}
}

@misc{Clang:Website,
 author = {},
 title = {clang},
 year = {2015},
 howpublished = {http://clang.llvm.org/} }


% Anitha added this citation manually since bibtex wasnt available online
@ARTICLE{rajan2011,
author={Rajan, Ajitha  and Whalen, Michael W. and Staats, Matt and Heimdahl, Mats P.E.},
journal={ACM Transactions on Software Engineering and Methodology},
title={The Effect of Program and Model Structure on the Effectiveness of {MC/DC} Test Adequacy Coverage},
year={2011}
}
% Anitha added this citation manually since bibtex wasnt available online
@inproceedings{Srivastava2010,
 author = {Srivastava, N. and Srivastava, J.},
 title = {Composite risk measures for adaptive dimensionality reduction in system health monitoring},
 booktitle = {Proceedings of the Conf. on Intelligent Data Understanding },
year = {2010}
}
% Anitha added this citation manually since bibtex wasnt available online
@ARTICLE{Mekkat2012,
author={Mekkat, Vineeth and Natarajan,Ragavendra and Hsu,Wei-Chung and Zhai, Antonia},
journal={Journal of Circuits, Systems, and Computers: Special Issue},
title={Performance Characterization of Data Mining Benchmarks},
year={2012}
}

% Anitha added this citation manually since bibtex wasnt available online
@ARTICLE{Wang2012,
author={Wang, Shengyue and Yew, Pen-Chung  and Zhai, Antonia},
journal={Journal of Circuits, Systems, and Computers: Special Issue},
title={Developing Compiler Optimizations for Speculative Threads},
year={2012}
}
% Anitha added this citation manually since bibtex wasnt available online
@inproceedings{Zhai2009RV,
 author = {Zhai, Antonia and He, Guojin and Heimdahl, Mats P.E.},
 title = {Hardware and compiler support for dynamic software monitoring},
 booktitle = {Proceedings of the 9th Int'l Workshop on Runtime Verification },
year = {2009}
}

%%
@INPROCEEDINGS{Hall:WRSPMChange,
author={Hall, J.G. and Rapanotti, L.},
booktitle={Requirements Engineering Conf., 2003. Proceedings. 11th IEEE Int'l},
title={A reference model for requirements engineering},
year={2003},
pages={181-187},
keywords={formal specification;reachability analysis;systems analysis;reference model;requirements engineering;software engineering artifacts;Application software;Control system synthesis;Control systems;Grounding;Logic;Power engineering and energy;Programming;Software engineering;Vocabulary},
doi={10.1109/ICRE.2003.1232749},
ISSN={1090-705X},}

@ARTICLE{iccps2014,
 author = {Murugesan, Anitha and Sokolsky, Oleg  and Rayadurgam, Sanjai  and Whalen, Michael  and Heimdahl, Mats  and  Lee, Insup },
 title = {Linking abstract analysis to concrete design: A hierarchical approach to verify medical {CPS} safety},
 journal = {5th Int'l Conf. on Cyber-Physical Systems, 2014}
}

@inproceedings{iccps2014,
 author = {Murugesan, Anitha and Sokolsky, Oleg  and Rayadurgam, Sanjai  and Whalen, Michael  and Heimdahl, Mats  and  Lee, Insup },
 title = {Linking abstract analysis to concrete design: A hierarchical approach to verify medical CPS safety},
 booktitle = {Int'l Conf. on Cyber-Physical Systems (ICCPS) 2014},
 month = {April},
 year = {2014},
 location = {Berlin, Germany}
}

@techreport{DMP08,
  author	= "Gilles Dowek and C{\'{e}}sar Mu{\~{n}}oz and Corina P\u{a}s\u{a}reanu",
  title		= "A Small-Step Semantics of {PLEXIL}",
  year =         "2008",
  type =         "Technical Report",
  number =       "2008-11",
  institution =  "National Institute of Aerospace",
  address =      "Hampton, VA",
}
@misc{ plexilwiki,
   title = "PLEXIL Wiki Main Page",
   key = "Plexil",
   howpublished = {\url{http://plexil.wiki.sourceforge.net/}}
}

@inproceedings{RCMS12,
	Author = {Camilo Rocha and H{\'{e}}ctor Cadavid and C{\'{e}}sar Mu{\~{n}}oz and Radu Siminiceanu},
	Booktitle = {Proceedings of 9th Int'l Conf. on Integrated Formal Methods (iFM 2012)},
	Month = {June},
	Title = {A Formal Interactive Verification Environment for the Plan Execution Interchange Language},
        Address = {Pisa, Italy},
        series = "Lecture Notes in Computer Science",
        editor = "Diego Latella and Helen Treharne",
        volume = "7321",
        pages = "343--357",
        year = "2012",
        published="Springer",
}

@misc { jpfhomepage,
   title = "Java Path Finder home page",
   key = "Java Pathfinder",
   howpublished = {\url{http://babelfish.arc.nasa.gov/trac/jpf/}}
}

@misc { cbmchomepage,
   title = "CBMC home page",
   key = "CBMC",
   howpublished = {\url{http://www.cprover.org/cbmc/}}
}


@misc { spfhomepage,
   title = "Symbolic PathFinder home page",
   key = "Symbolic PathFinder",
   howpublished = { \url{http://babelfish.arc.nasa.gov/trac/jpf/wiki/projects/jpf-symbc}}
}

@Misc{prismwebpage,
  title =    "Prism - probabilistic model checker",
  author = {},
  howpublished = {http://www.prismmodelchecker.org},
  key = {Prism}
}

@Misc{Polyspace,
  title = "Polyspace static analysis tools",
  author = {},
  howpublished = {http://www.mathworks.com/products/polyspace/},
  key = {Polyspace}
}

@Misc{MAAB:guidelines,
  title =    "Mathworks Advisory Board Core Modeling Guidelines",
  author = {},
  howpublished = {http://www.mathworks.com/automotive/standards/ maab.html},
  key = {MAAB Guidelines}
}

@incollection{alur1991model,
  title={Model-checking for probabilistic real-time systems},
  author={Alur, Rajeev and Courcoubetis, Costas and Dill, David},
  booktitle={Automata, Languages and Programming},
  pages={115--126},
  year={1991},
  publisher={Springer}
}

@INPROCEEDINGS{6424809,
author={Taolue Chen and Diciolla, M. and Kwiatkowska, M. and Mereacre, A.},
booktitle={Real-Time Systems Symposium (RTSS), 2012 IEEE 33rd},
title={Quantitative Verification of Implantable Cardiac Pacemakers},
year={2012},
month={Dec},
pages={263-272},}

@inproceedings{SimulinktoPrism,
  author    = {Adrian Beer and
               Todor Georgiev and
               Florian Leitner-Fischer and
               Stefan Leue},
  title     = {Model-Based Quantitative Safety Analysis of Matlab Simulink
               / Stateflow Models},
  booktitle = {Dagstuhl-Workshop MBEES: Modellbasierte Entwicklung eingebetteter
               Systeme IX},
  year      = {2013},
  pages     = {60-69},
}

@incollection{Halbwachs99:sync_validation,
  year={1999},
  isbn={978-3-540-66856-5},
  booktitle={Advances in Computing Science � ASIAN�99},
  volume={1742},
  series={Lecture Notes in Computer Science},
  editor={Thiagarajan, P.S. and Yap, Roland},
  doi={10.1007/3-540-46674-6_1},
  title={Validation of Synchronous Reactive Systems: From Formal Verification to Automatic Testing},
  url={http://dx.doi.org/10.1007/3-540-46674-6\_1},
  publisher={Springer Berlin Heidelberg},
  author={Halbwachs, Nicolas and Raymond, Pascal},
  pages={1-12},
  language={English}
}

@INPROCEEDINGS{Halbwachs05:lustre,
  author={Halbwachs, N.},
  booktitle={MEMOCODE 2005},
  title={A synchronous language at work: the story of Lustre},
  year={2005},
  month={July},
  pages={3-11},
  keywords={parallel languages;parallel programming;safety-critical
software;Lustre synchronous language;SCADE toolset;data-flow
language;Aerospace industry;Computer industry;Control theory;Embedded
computing;Embedded software;Hardware;Industrial control;Industrial
training;Natural languages;Programming},
  doi={10.1109/MEMCOD.2005.1487884}
}

@incollection{Shengchao11:simulink_verification,
  year={2011},
  isbn={978-3-642-24558-9},
  booktitle={Formal Methods and Software Engineering},
  volume={6991},
  series={Lecture Notes in Computer Science},
  editor={Qin, Shengchao and Qiu, Zongyan},
  doi={10.1007/978-3-642-24559-6\_21},
  title={Contract-Based Verification of Simulink Models},
  url={http://dx.doi.org/10.1007/978-3-642-24559-6\_21},
  publisher={Springer Berlin Heidelberg},
  author={Bostrom, Pontus},
  pages={291-306}
}

% For ICCPS paper.

@incollection{Ptolemy,
 author = {Buck, Joseph and Ha, Soonhoi and Lee, Edward A. and Messerschmitt, David G.},
 chapter = {Ptolemy: A Framework for Simulating and Prototyping Heterogeneous Systems},
 title = {Readings in Hardware/Software Co-design},
 editor = {De Micheli, Giovanni and Ernst, Rolf and Wolf, Wayne},
 year = {2002},
 isbn = {1-55860-702-1},
 pages = {527--543},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=567003.567050},
 acmid = {567050},
 publisher = {Kluwer Academic Publishers},
 address = {Norwell, MA, USA},
 keywords = {heterogeneity, mixed-mode, object-oriented programming, prototyping, simulation},
}
@incollection{PtolemyShort,
 author = {Buck, Joseph and others},
 chapter = {Ptolemy: A Framework for Simulating and Prototyping Heterogeneous Systems},
 title = {Readings in Hardware/Software Co-design},
 year = {2002},
 pages = {527--543}
}




@ARTICLE{metropolis,
author={Balarin, F. and Watanabe, Y. and Hsieh, H. and Lavagno, L. and Passerone, C. and Sangiovanni-Vincentelli, A.},
journal={Computer},
title={Metropolis: an integrated electronic system design environment},
year={2003},
month={April},
volume={36},
number={4},
pages={45-52},
keywords={electronic design automation;embedded systems;Metropolis;embedded software design;formal analysis;formal semantics;integrated electronic system design environment;metamodel;programmable platforms;simulation;synthesis;Algorithm design and analysis;Analytical models;Computational modeling;Computer architecture;Embedded software;Formal verification;Hardware;Software design;Solids;Uncertainty},
doi={10.1109/MC.2003.1193228},
ISSN={0018-9162},}

@inproceedings{Lee:EMSOF07,
 author = {Lee, Edward A. and Zheng, Haiyang},
 title = {Leveraging Synchronous Language Principles for Heterogeneous Modeling and Design of Embedded Systems},
 booktitle = {Proceedings of the 7th ACM \&Amp; IEEE Int'l Conf. on Embedded Software},
 series = {EMSOFT '07},
 year = {2007},
 isbn = {978-1-59593-825-1},
 location = {Salzburg, Austria},
 pages = {114--123},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1289927.1289949},
 doi = {10.1145/1289927.1289949},
 acmid = {1289949},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {composition, discrete events, hybrid systems, model-based design, operational semantics, simulation, synchronous languages},
}
@inproceedings{Lee:EMSOF07Short,
 author = {Lee, Edward A. and Zheng, Haiyang},
 title = {Leveraging Synchronous Language Principles for Heterogeneous Modeling and Design of Embedded Systems},
 booktitle = {EMSOFT '07},
 year = {2007},
 pages = {114--123}
}



@inproceedings{rajhans2013,
 author = {Rajhans, Akshay and Krogh, Bruce H.},
 title = {Compositional Heterogeneous Abstraction},
 booktitle = {Proceedings of the 16th Int'l Conf. on Hybrid Systems: Computation and Control},
 series = {HSCC '13},
 year = {2013},
 isbn = {978-1-4503-1567-8},
 location = {Philadelphia, Pennsylvania, USA},
 pages = {253--262},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2461328.2461368},
 doi = {10.1145/2461328.2461368},
 acmid = {2461368},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compositional reasoning, heterogneous verification},
}
@inproceedings{rajhans2013Short,
 author = {Rajhans, Akshay and Krogh, Bruce H.},
 title = {Compositional Heterogeneous Abstraction},
 booktitle = {HSCC '13},
 year = {2013},
 pages = {253--262}
}


@BOOK{Feiler13:AADL,
  AUTHOR =       {Feiler, P. and Gluch, D.},
  TITLE =        {Model-Based Engineering with AADL},
  PUBLISHER =    {Addison-Wesley},
  YEAR =         {2013}
}

@incollection{Lasnier09:OCARINA,
year={2009},
isbn={978-3-642-01923-4},
booktitle={Reliable Software Technologies (Ada-Europe 2009)},
volume={5570},
series={Lecture Notes in Computer Science},
editor={Kordon, Fabrice and Kermarrec, Yvon},
doi={10.1007/978-3-642-01924-1_17},
title={Ocarina : An Environment for AADL Models Analysis and Automatic Code Generation for High Integrity Applications},
url={http://dx.doi.org/10.1007/978-3-642-01924-1_17},
publisher={Springer Berlin Heidelberg},
author={Lasnier, Gilles and Zalila, Bechir and Pautet, Laurent and Hugues, J�rome},
pages={237-250}
}

@inproceedings{Kim13:CodeGeneration,
 author = {Kim, BaekGyu and Lee, Insup and Phan, Linh T. X. and Sokolsky, Oleg},
 title = {Platform Dependent Code Generation of Real-time Embedded Software},
 booktitle = {Proceedings of the ACM/IEEE 4th Int'l Conf. on Cyber-Physical Systems},
 series = {ICCPS '13},
 year = {2013},
 isbn = {978-1-4503-1996-6},
 location = {Philadelphia, Pennsylvania},
 pages = {246--246},
 numpages = {1},
 url = {http://doi.acm.org/10.1145/2502524.2502565},
 doi = {10.1145/2502524.2502565},
 acmid = {2502565},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Borde09:CodeGeneration,
 author = {Borde, Etienne and Feiler, Peter H. and Ha\"{\i}k, Gr{\'e}gory and Pautet, Laurent},
 title = {Model Driven Code Generation for Critical and Adaptative Embedded Systems},
 journal = {SIGBED Rev.},
 issue_date = {October 2009},
 volume = {6},
 number = {3},
 month = oct,
 year = {2009},
 issn = {1551-3688},
 pages = {10:1--10:5},
 articleno = {10},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/1851340.1851352},
 doi = {10.1145/1851340.1851352},
 acmid = {1851352},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {AADL, COAL, Lightweight CCM, MyCCM-HI, Ocarina, adaptative systems, architecture description languages, code generation, component framework, critical systems, real-time embedded systems},
}

@incollection{Waignier08:CompInteractions,
year={2008},
isbn={978-3-540-87874-2},
booktitle={Model Driven Engineering Languages and Systems},
volume={5301},
series={Lecture Notes in Computer Science},
editor={Czarnecki, Krzysztof and Ober, Ileana and Bruel, Jean-Michel and Uhl, Axel and V�lter, Markus},
doi={10.1007/978-3-540-87875-9_27},
title={A Model-Based Framework for Statically and Dynamically Checking Component Interactions},
url={http://dx.doi.org/10.1007/978-3-540-87875-9_27},
publisher={Springer Berlin Heidelberg},
author={Waignier, Guillaume and Sriplakich, Prawee and Meur, Anne-Fran�oise and Duchien, Laurence},
pages={371-385}
}

@inproceedings{Trubiani13:Uncertainty,
 author = {Trubiani, Catia and Meedeniya, Indika and Cortellessa, Vittorio and Aleti, Aldeida and Grunske, Lars},
 title = {Model-based Performance Analysis of Software Architectures Under Uncertainty},
 booktitle = {Proceedings of the 9th Int'l ACM Sigsoft Conf. on Quality of Software Architectures},
 series = {QoSA '13},
 year = {2013},
 isbn = {978-1-4503-2126-6},
 location = {Vancouver, British Columbia, Canada},
 pages = {69--78},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2465478.2465487},
 doi = {10.1145/2465478.2465487},
 acmid = {2465487},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {monte carlo simulation, performance, software architecture evaluation, uncertainty analysis},
}

@article{Delange09:ARINC653,
 author = {Delange, Julien and Pautet, Laurent and Plantec, Alain and Kerboeuf, Mickael and Singhoff, Frank and Kordon, Fabrice},
 title = {Validate, Simulate, and Implement ARINC653 Systems Using the AADL},
 journal = {Ada Lett.},
 issue_date = {December 2009},
 volume = {29},
 number = {3},
 month = nov,
 year = {2009},
 issn = {1094-3641},
 pages = {31--44},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1653616.1647435},
 doi = {10.1145/1653616.1647435},
 acmid = {1647435},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {AADL, ARINC653, cheddar, code generation, model based engineering, ocarina, pok, schedulability, simulation},
}

@inproceedings{Bozzano09:Verification,
 author = {Bozzano, Marco and Cimatti, Alessandro and Roveri, Marco and Katoen, Joost-Pieter and Nguyen, Viet Yen and Noll, Thomas},
 title = {Verification and Performance Evaluation of Aadl Models},
 booktitle = {Proceedings of the the 7th Joint Meeting of the European Software Engineering Conf. and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
 series = {ESEC/FSE '09},
 year = {2009},
 isbn = {978-1-60558-001-2},
 location = {Amsterdam, The Netherlands},
 pages = {285--286},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1595696.1595744},
 doi = {10.1145/1595696.1595744},
 acmid = {1595744},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {aadl, dependability, model checking, performability, reliability},
}

@inproceedings{Singhoff05:Scheduling,
 author = {Singhoff, F. and Legrand, J. and Nana, L. and Marc{\'e}, L.},
 title = {Scheduling and Memory Requirements Analysis with AADL},
 booktitle = {Proceedings of the 2005 Annual ACM SIGAda Int'l Conf. on Ada: The Engineering of Correct and Reliable Software for Real-Time \&Amp; Distributed Systems Using Ada and Related Technologies},
 series = {SigAda '05},
 year = {2005},
 isbn = {1-59593-185-6},
 location = {Atlanta, GA, USA},
 pages = {1--10},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1103846.1103847},
 doi = {10.1145/1103846.1103847},
 acmid = {1103847},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {AADL, ada framework, memory requirements and real time scheduling analysis},
}

@article{Hugues08:OCARINA,
 author = {Hugues, Jerome and Zalila, Bechir and Pautet, Laurent and Kordon, Fabrice},
 title = {From the Prototype to the Final Embedded System Using the Ocarina AADL Tool Suite},
 journal = {ACM Trans. Embed. Comput. Syst.},
 issue_date = {July 2008},
 volume = {7},
 number = {4},
 month = aug,
 year = {2008},
 issn = {1539-9087},
 pages = {42:1--42:25},
 articleno = {42},
 numpages = {25},
 url = {http://doi.acm.org/10.1145/1376804.1376810},
 doi = {10.1145/1376804.1376810},
 acmid = {1376810},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {AADL, DRE, Ocarina, PolyORB-HI, distributed, embedded, real-time},
}

@incollection{Zalila07:Generation,
year={2007},
isbn={978-3-540-73229-7},
booktitle={Reliable Software Technologies (Ada Europe 2007)},
volume={4498},
series={Lecture Notes in Computer Science},
editor={Abdennadher, Nabil and Kordon, Fabrice},
doi={10.1007/978-3-540-73230-3_12},
title={Generating Distributed High Integrity Applications from Their Architectural Description},
url={http://dx.doi.org/10.1007/978-3-540-73230-3_12},
publisher={Springer Berlin Heidelberg},
author={Zalila, Bechir and Hamid, Irfan and Hugues, Jerome and Pautet, Laurent},
pages={155-167}
}

@inproceedings{Koscher10:carhack,
    year = {2010},
    author = {Karl Koscher and Alexei Czeskis and Franziska Roesner and Shwetak Patel and
      Tadayoshi Kohno and Stephen Checkoway and Damon McCoy and Brian Kantor and Danny Anderson and
      Hovav Shacham and Stefan Savage},
    title={Experimental Security Analysis of a Modern Automobile},
    booktitle={IEEE Symposium on Security and Privacy},
    location={Oakland, CA},
    month={May},
    year={2010}
}
@article{Zetter11:wired,
    year= {2011},
    author={Kim Zetter},
    title={How digital detectives deciphered {S}tuxnet, the most menacing malware in history},
    journal={Wired},
    month={July},
    year={2011}
}

@inproceedings{Klein2009:sosp,
 author = {Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and Sewell, Thomas and Tuch, Harvey and Winwood, Simon},
 title = {seL4: Formal Verification of an OS Kernel},
 booktitle = {Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles},
 series = {SOSP '09},
 year = {2009},
 isbn = {978-1-60558-752-3},
 location = {Big Sky, Montana, USA},
 pages = {207--220},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1629575.1629596},
 doi = {10.1145/1629575.1629596},
 acmid = {1629596},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {isabelle/hol, l4, microkernel, sel4},
}

@book{Nipkow2002:isabelle,
 author = {Nipkow, Tobias and Wenzel, Markus and Paulson, Lawrence C.},
 title = {Isabelle/HOL: A Proof Assistant for Higher-order Logic},
 year = {2002},
 isbn = {3-540-43376-7},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@MISC{Marlow_haskell2010,
    author = {Simon Marlow},
    title = {Haskell 2010 Language Report},
    year = {2010}
}

@inproceedings{ckl2004,
  AUTHOR    = { Clarke, Edmund
                and Kroening, Daniel
                and Lerda, Flavio },
  TITLE     = { A Tool for Checking {ANSI-C} Programs },
  BOOKTITLE = { Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2004) },
  YEAR      = { 2004 },
  PUBLISHER = { Springer },
  PAGES     = { 168--176 },
  ISBN      = { 3-540-21299-X },
  SERIES    = { Lecture Notes in Computer Science },
  VOLUME    = { 2988 },
  EDITOR    = { Kurt Jensen and Andreas Podelski },
}


@MISC{DO178B,
    author = {RTCA/DO-178C},
    title = {Software Considerations in Airborne Systems and Equipment Certification},
    year = {}
}

@MISC{DO178C,
    author = {RTCA/DO-178C},
    title = {Software Considerations in Airborne Systems and Equipment Certification},
    year = {}
}

@INPROCEEDINGS{6064522,
author={Baek Gyu Kim and Ayoub, A. and Sokolsky, O. and Insup Lee and Jones, P. and Yi Zhang and Jetley, R.},
booktitle={Embedded Software (EMSOFT), 2011 Proceedings of the Int'l Conf. on},
title={Safety-assured development of the {GPCA} infusion pump software},
year={2011},
month={Oct},
pages={155-164},
}

@MISC{mathworksproducts,
    author = {{M}ath{W}orks {I}nc. {P}roducts},
    title = {http://www.mathworks.com/products},
    year = {}
}

@MISC{AADL:Overview,
  AUTHOR =       "SAE",
  TITLE =       "http://www.aadl.info/aadl/downloads/papers/AADLLanguageSummary.pdf",
  year = {}
  }

@article{Whalen14:Emsoft,
author={Michael Whalen and Anitha Murugesan and Oleg Sokolsky and Sanjai Rayadurgam and Mats P.E. Heimdahl and Insup Lee},
booktitle={ Submitted to Int'l Conf. on Embedded Software (EMSOFT)},
title={Hierarchical multi-formalism proofs for medical {CPS} safety},
year={2014},
month={Oct},
}

@techreport{ccsds2002reference,
  title={Reference Model for an Open Archival Information System (OAIS)},
  author={CCSDS, January},
  year={2002},
  institution={CCSDS 650.0-B-1, Blue Book}
}


@inproceedings{lee2002safety,
  title={Safety-critical requirements specification and analysis using spectrm},
  author={Lee, Grady and Howard, Jeffrey and Anderson, Patrick},
  booktitle={Proc. 2nd Meeting of the US Soft. Syst. Safety WG},
  volume={260},
  year={2002}
}


@article{van2009requirements,
  title={Requirements engineering: from system goals to UML models to software specifications},
  author={Van Lamsweerde, Axel and others},
  year={2009}
}


@inproceedings{van1998integrating,
  title={Integrating obstacles in goal-driven requirements engineering},
  author={Van Lamsweerde, Axel and Letier, Emmanuel},
  booktitle={Proceedings of the 20th international conference on Software engineering},
  pages={53--62},
  year={1998},
  organization={IEEE Computer Society}
}


@article{church1940formulation,
  title={A formulation of the simple theory of types},
  author={Church, Alonzo},
  journal={The journal of symbolic logic},
  volume={5},
  number={02},
  pages={56--68},
  year={1940},
  publisher={Cambridge Univ Press}
}

@MISC{RefModelOASIS,
  AUTHOR =       "OASIS",
  TITLE =       "https://www.oasis-open.org/committees/download.php/19679/soa-rm-cs.pdf",
  year =
  }


@inproceedings{TwinPeaks_Probabilistic ,
  title={Exploring the twin peaks using probabilistic verification techniques},
  author={Murugesan, Anitha and Feng, Lu and Heimdahl, Mats and Rayadurgam, Sanjai and Whalen, Michael and Lee, Insup},
  booktitle={Proceedings of the 4th International Workshop on Twin Peaks of Requirements and Architecture},
  pages={18--23},
  year={2014},
  organization={ACM}
}
@article{gomessystematic,
  title={A systematic strategy to perform quantitative safety assessment of Simulink diagrams using Prism-Technical Report},
  author={Gomes, Adriano and Mota, Alexandre and Sampaio, Augusto and Jesus, Joabe}
}
@article{beer2013model,
  title={Model-Based Quantitative Safety Analysis of Matlab Simulink/Stateflow Models},
  author={Beer, Adrian and Georgiev, Todor and Leitner-Fischer, Florian and Leue, Stefan},
  year={2013}
}
@inproceedings{dwyer1999patterns,
  title={Patterns in property specifications for finite-state verification},
  author={Dwyer, Matthew B and Avrunin, George S and Corbett, James C},
  booktitle={Software Engineering, 1999. Proceedings of the 1999 International Conference on},
  pages={411--420},
  year={1999},
  organization={IEEE}
}
@inproceedings{grunske2008specification,
  title={Specification patterns for probabilistic quality properties},
  author={Grunske, Lars},
  booktitle={Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference on},
  pages={31--40},
  year={2008},
  organization={IEEE}
}
@book{hansson1994time,
  title={Time and probability in formal design of distributed systems},
  author={Hansson, Hans A and Fredlund, Lars-Ake},
  year={1994},
  publisher={Elsevier Science Inc.}
}
@article{hasson1994logic,
  title={A logic for reasoning about time and probability},
  author={Hasson, H and Jonsson, Bengt},
  journal={Formal Aspects of Computing},
  volume={6},
  pages={512--535},
  year={1994}
}

@inproceedings{konrad2005real,
  title={Real-time specification patterns},
  author={Konrad, Sascha and Cheng, Betty HC},
  booktitle={Proceedings of the 27th international conference on Software engineering},
  pages={372--381},
  year={2005},
  organization={ACM}
}

@ARTICLE{aligningspecpatterns,
author={Autili, M. and Grunske, L. and Lumpe, M. and Pelliccione, P. and Tang, A.},
journal={Software Engineering, IEEE Transactions on},
title={Aligning Qualitative, Real-Time, and Probabilistic Property Specification Patterns Using a Structured English Grammar},
year={2015},
month={},
volume={PP},
number={99},
pages={1-1},
keywords={Educational institutions;Electronic mail;Grammar;Natural languages;Probabilistic logic;Real-time systems;Software;Probabilistic Properties;Real-time Properties;Specification Patterns},
doi={10.1109/TSE.2015.2398877},
ISSN={0098-5589},}

@book{clarke1999model,
  title={Model checking},
  author={Clarke, Edmund M and Grumberg, Orna and Peled, Doron},
  year={1999},
  publisher={MIT press}
}

@inproceedings{QFCS15:backes,
 author={Backes, John and Cofer, Darren and Miller, Steven and Whalen, Michael W.},
 title={Requirements Analysis of a Quad-Redundant Flight Control System},
 year={2015},
 isbn={978-3-319-17523-2},
 booktitle={NASA Formal Methods},
 volume={9058},
 series={Lecture Notes in Computer Science},
 editor={Havelund, Klaus and Holzmann, Gerard and Joshi, Rajeev},
 doi={10.1007/978-3-319-17524-9_7},
 url={http://dx.doi.org/10.1007/978-3-319-17524-9_7},
 publisher={Springer International Publishing},
 pages={82-96},
 language={English}
}


@techreport{multiformalism2014,
  title={Hierarchical Multi-Formalism Proofs},
  author={Whalen,Michael and Rayadurgam,Sanjai and Ghassabani, Elaheh and Murugesan,Anitha and Sokolsky,Oleg and Heimdahl, Mats and Lee, Insup},
  year={http://crisys.cs.umn.edu/MFProofTechReport.pdf},
  institution={University of Minnesota Sofware Engineering Center},
  url={www.umsec.umn.edu/publications/Hierarchical-Multi-Formalism-Proofs-Cyber-Physical}
}
@techreport{multiformalism2014Short,
  title={Hierarchical Multi-Formalism Proofs},
  author={Whalen,Michael and others},
  year={2014},
  institution={University of Minnesota Sofware Engineering Center},
  url={www.umsec.umn.edu/publications/Hierarchical-Multi-Formalism-Proofs-Cyber-Physical}
}

@article{Murugesan:ICCPS2014, author = {Anitha Murugesan and Oleg Sokolsky
and Sanjai Rayadurgam and Michael Whalen and Mats Heimdahl and Insup Lee},
title = {Linking abstract analysis to concrete design: A hierarchical
approach to verify medical CPS safety}, journal ={2014 ACM/IEEE International
Conference on Cyber-Physical Systems (ICCPS)}, volume = {0}, isbn =
{978-1-4799-4931-1}, year = {2014}, pages = {139-150}, doi =
{http://doi.ieeecomputersociety.org/10.1109/ICCPS.2014.6843718}, publisher =
{IEEE Computer Society}, address = {Los Alamitos, CA, USA}
}
@article{Murugesan:ICCPS2014Short, author = {Anitha Murugesan and others},
title = {Linking abstract analysis to concrete design: A hierarchical
approach to verify medical CPS safety}, journal ={ICCPS}, year = {2014}, pages = {139-150}
}

@INPROCEEDINGS{6120945, author={Xiaoli Gong and Jie Ma and Qingcheng Li and
Jin Zhang}, booktitle={2011 IEEE 10th International Conference on Trust,
Security and Privacy in Computing and Communications (TrustCom)},
title={Automatic Model Building and Verification of Embedded Software with
UPPAAL}, year={2011}, month={Nov}, pages={1118-1124} }

@INPROCEEDINGS{6207775, author={Doornbos, R. and Hooman, J. and van
Vlimmeren, B.}, booktitle={2012 International Conference on Innovations in
Information Technology (IIT)}, title={Complementary verification of embedded
software using {ASD} and {UPPAAL}}, year={2012}, month={March}, pages={60-65} }

@INPROCEEDINGS{6207775Short,
author={Doornbos, R. and others}, booktitle={IIT}, title={Complementary verification of embedded
software using {ASD} and {UPPAAL}}, year={2012}, pages={60-65} }


@article{Alur:1994:TTA,
 author = {Alur, Rajeev and Dill, David L.},
 title = {A Theory of Timed Automata},
 journal = {Theor. Comput. Sci.},
 issue_date = {April 25, 1994},
 volume = {126},
 number = {2},
 month = apr,
 year = {1994},
 issn = {0304-3975},
 pages = {183--235},
 numpages = {53},
 url = {http://dx.doi.org/10.1016/0304-3975(94)90010-8},
 doi = {10.1016/0304-3975(94)90010-8},
 acmid = {180519},
 publisher = {Elsevier Science Publishers Ltd.},
 address = {Essex, UK},
}
@article{Alur:1994:TTAShort,
 author = {Alur, Rajeev and Dill, David L.},
 title = {A Theory of Timed Automata},
 journal = {Theor. Comput. Sci.},
 volume = {126},
 number = {2},
 year = {1994},
 pages = {183--235}
}
@inproceedings{dulac2002use,
  title={On the use of visualization in formal requirements specification},
  author={Dulac, Nicolas and Viguier, Thomas and Leveson, Nancy and Storey, Margaret-Anne},
  booktitle={Requirements Engineering, 2002. Proceedings. IEEE Joint International Conference on},
  pages={71--80},
  year={2002},
  organization={IEEE}
}

@article{molnar2010formal,
  title={Formal verification of the Autosub Autonomous Underwater Vehicle: A Case Study},
  author={Molnar, Levente and Ezekiel, Jonathan and Veres, Sandor M and Lomuscio, Alessio R and Pebody, Miles},
  year={2010},
  publisher={Engineering and Physical Sciences Research Council}
}
@article{sosnowskisoftware,
  title={Software Requirements Specification (SRS) Cooperative Adaptive Cruise Control Project},
  author={Sosnowski, Dan and Vrooman, Justin and Newsted, Jake and Ellison, Max and O’Connell, Pat}
}
@misc{skoglund1997dual,
  title={Dual chamber, multi-mode external pacemaker},
  author={Skoglund, Richard A and Schmuland, Carl D and Colbert, Robert A},
  year={1997},
  note={US Patent 5,626,621}}

@book{nowakowski2010cooperative,
  title={Cooperative Adaptive Cruise Control: Testing Drivers' Choices of Following Distances},
  author={Nowakowski, Christopher and Shladover, Steven E and Cody, Delphine and Bu, Fanping and O’Connell, Jessica and Spring, John and Dickey, Susan and Nelson, David},
  year={2010},
  publisher={California PATH Program, Institute of Transportation Studies, University of California at Berkeley}
}

@article{belina1989ccitt,
  title={The CCITT-specification and description language SDL},
  author={Belina, Ferenc and Hogrefe, Dieter},
  journal={Computer networks and ISDN systems},
  volume={16},
  number={4},
  pages={311--341},
  year={1989},
  publisher={Elsevier}
}

@article{felicie2012uml,
  title={UML State Machine},
  author={Felicie, Adlade Laurie},
  year={2012},
  publisher={Salve Regina University}
}

@book{gamma1994design,
  title={Design patterns: elements of reusable object-oriented software},
  author={Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
  year={1994},
  publisher={Pearson Education}
}

@article{parnas1972criteria,
  title={On the criteria to be used in decomposing systems into modules},
  author={Parnas, David Lorge},
  journal={Communications of the ACM},
  volume={15},
  number={12},
  pages={1053--1058},
  year={1972},
  publisher={ACm}
}

@book{heitmeyer2002software,
  title={Software cost reduction},
  author={Heitmeyer, Constance L},
  year={2002},
  publisher={Wiley Online Library}
}
@phdthesis{whalen2000formal,
  title={A formal semantics for RSML- e},
  author={Whalen, Michael W},
  year={2000},
  school={Master’s thesis, University of Minnesota}
}

@book{miller2003flight,
  title={Flight guidance system requirements specification},
  author={Miller, Steven Paul and Tribble, A and Carlson, T and Danielson, Eric J},
  year={2003}
}

@inproceedings{miller1998specifying,
  title={Specifying the mode logic of a flight guidance system in CoRE and SCR},
  author={Miller, Steven P},
  booktitle={Proceedings of the second workshop on Formal methods in software practice},
  pages={44--53},
  year={1998},
  organization={ACM}
}

@techreport{cofer2014formal,
  title={Formal methods case studies for DO-333},
  author={Cofer, Darren and Miller, Steven P},
  year={2014}
}




@inproceedings{Johnsen12AVA,
 author = {Johnsen, Andreas and Lundqvist, Kristina and Pettersson, Paul and Jaradat, Omar},
 title = {Automated Verification of {AADL}-Specifications Using {UPPAAL}},
 booktitle = {Proceedings of the 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering},
 series = {HASE '12},
 year = {2012},
 isbn = {978-0-7695-4912-5},
 pages = {130--138},
 numpages = {9},
 url = {http://dx.doi.org/10.1109/HASE.2012.22},
 doi = {10.1109/HASE.2012.22},
 acmid = {2417527},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Architecture-based verification, Formal verification, AADL, UPPAAL, Formal semantics, Semantic anchoring},
}


@inproceedings{Johnsen12AVAShort,
 author = {Johnsen, Andreas and others},
 title = {Automated Verification of {AADL}-Specifications Using {UPPAAL}},
 booktitle = {HASE '12},
 year = {2012},
 pages = {130--138}
}



@inproceedings{Gunther12FVS,
 author = {G\"{u}nther, Henning and Milius, Stefan and M\"{o}ller, Oliver},
 title = {On the Formal Verification of Systems of Synchronous Software Components},
 booktitle = {Proceedings of the 31st International Conference on Computer Safety, Reliability, and Security},
 series = {SAFECOMP'12},
 year = {2012},
 isbn = {978-3-642-33677-5},
 location = {Magdeburg, Germany},
 pages = {291--304},
 numpages = {14},
 url = {http://dx.doi.org/10.1007/978-3-642-33678-2_25},
 doi = {10.1007/978-3-642-33678-2_25},
 acmid = {2415614},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {GALS systems, SCADE, SPIN, UPPAAL, formal verification, rely-guarantee},
}


@inproceedings{Gunther12FVSShort,
 author = {G\"{u}nther, Henning and others},
 title = {On the Formal Verification of Systems of Synchronous Software Components},
 booktitle = {SAFECOMP'12},
 year = {2012},
 pages = {291--304}
}


@InProceedings{active14,
      AUTHOR = {Ruchkin, Ivan and De Niz, Dio and Chaki, Sagar and Garlan, David},
      TITLE = {ACTIVE: A Tool for Integrating Analysis Contracts},
      YEAR = {2014},
      MONTH = {2 December},
      BOOKTITLE = {The 5th Analytic Virtual Integration of Cyber-Physical Systems Workshop},
      ADDRESS = {Rome, Italy},
      PDF = {http://acme.able.cs.cmu.edu/pubs/uploads/pdf/avicps14-camera-ready.pdf}
}

@InProceedings{active14Short,
      AUTHOR = {Ruchkin, Ivan and others},
      TITLE = {ACTIVE: A Tool for Integrating Analysis Contracts},
      YEAR = {2014},
      BOOKTITLE = {The 5th Analytic Virtual Integration of Cyber-Physical Systems Workshop}
}


@article{ATV13Elkamel,
 author = {Mohamed Elkamel Hamdane and Allaoui Chaoui and Martin Strecker},
 title = {From {AADL} to Timed Automaton, A Verification Approach},
 journal = {International Journal of Software Engineering and Its Applications},
 volume = {7},
 number = {4},
 year = {2013},
 issn = {1738-9984},
 pages = {115--126},
 url = {http://www.earticle.net/article.aspx?sn=208600}
}


@article{ATV13ElkamelShort,
 author = {Mohamed Elkamel Hamdane and others},
 title = {From {AADL} to Timed Automaton, A Verification Approach},
 journal = {International Journal of Software Engineering and Its Applications},
 volume = {7},
 number = {4},
 year = {2013},
 issn = {1738-9984},
 pages = {115--126}
}


@incollection{Chkouri2009TAB,
 author = {Chkouri, M. Yassin and Robert, Anne and Bozga, Marius and Sifakis, Joseph},
 chapter = {Translating {AADL} into {BIP} - Application to the Verification of Real-Time Systems},
 title = {Models in Software Engineering},
 editor = {Chaudron, Michel R.},
 year = {2009},
 isbn = {978-3-642-01647-9},
 pages = {5--19},
 numpages = {15},
 url = {http://dx.doi.org/10.1007/978-3-642-01648-6_2},
 doi = {10.1007/978-3-642-01648-6_2},
 acmid = {1537878},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@incollection{Chkouri2009TABShort,
 author = {Chkouri, M. Yassin and others},
 chapter = {Translating {AADL} into {BIP} - Application to the Verification of Real-Time Systems},
 title = {Models in Software Engineering},
 year = {2009},
 pages = {5--19},
 publisher = {Springer-Verlag}
}

@inproceedings{Basu:2006:BIP,
 author = {Basu, Ananda and Bozga, Marius and Sifakis, Joseph},
 title = {Modeling Heterogeneous Real-time Components in {BIP}},
 booktitle = {Proceedings of the Fourth IEEE International Conference on Software Engineering and Formal Methods},
 series = {SEFM '06},
 year = {2006},
 isbn = {0-7695-2678-0},
 pages = {3--12},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/SEFM.2006.27},
 doi = {10.1109/SEFM.2006.27},
 acmid = {1158344},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@inproceedings{Basu:2006:BIPShort,
 author = {Basu, Ananda and others},
 title = {Modeling Heterogeneous Real-time Components in {BIP}},
 booktitle = {SEFM '06},
 year = {2006},
 pages = {3--12}
}


@article{2015:TVT,
 author = {Bodeveix, Jean-Paul and Filali, Mamoun and Garnacho, Manuel and Spadotti, Régis and Yang, Zhibin},
 title = {Towards a Verified Transformation from {AADL} to the Formal Component-based Language {FIACRE}},
 journal = {Sci. Comput. Program.},
 issue_date = {August 2015},
 volume = {106},
 number = {C},
 month = aug,
 year = {2015},
 issn = {0167-6423},
 pages = {30--53},
 numpages = {24},
 url = {http://dx.doi.org/10.1016/j.scico.2015.03.003},
 doi = {10.1016/j.scico.2015.03.003},
 acmid = {2798670},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands}
}


@article{2015:TVTShort,
 author = {Bodeveix, Jean-Paul and others},
 title = {Towards a Verified Transformation from {AADL} to the Formal Component-based Language {FIACRE}},
 journal = {Sci. Comput. Program.},
 volume = {106},
 number = {C},
 year = {2015},
 pages = {30--53},
}

@inproceedings{Cadar:2008:KLEE,
 author = {Cadar, Cristian and Dunbar, Daniel and Engler, Dawson},
 title = {KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {209--224},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1855741.1855756},
 acmid = {1855756},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@article{Pasareanu13:spf,
 year={2013},
 issn={0928-8910},
 journal={Automated Software Engineering},
 volume={20},
 number={3},
 doi={10.1007/s10515-013-0122-2},
 title={Symbolic PathFinder: integrating symbolic execution with model checking for Java bytecode analysis},
 url={http://dx.doi.org/10.1007/s10515-013-0122-2},
 publisher={Springer US},
 keywords={Symbolic execution; Model checking; Testing; Java},
 author={P$\check{\mbox{a}}$s$\check{\mbox{a}}$reanu, Corina S. and Visser, Willem and Bushnell, David and
Geldenhuys, Jaco and Mehlitz, Peter and Rungta, Neha}, pages={391-425},
 language={English} }

@BOOK{Mathur08:Testing,
  AUTHOR =       "Aditya Mathur",
  TITLE =        "Foundations of Software Testing",
  PUBLISHER =    "Pearson",
  YEAR =         "2008",
  isbn =         "ISBN: 81-317-1660-0"
}

@inproceedings{Fraser:ESECFSE11,
 author = {Fraser, Gordon and Arcuri, Andrea},
 title = {EvoSuite: automatic test suite generation for object-oriented software},
 booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
 series = {ESEC/FSE '11},
 year = {2011},
 isbn = {978-1-4503-0443-6},
 location = {Szeged, Hungary},
 pages = {416--419},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/2025113.2025179},
 doi = {10.1145/2025113.2025179},
 acmid = {2025179},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {assertion generation, search based soft- ware testing, test case generation},
}

@inproceedings{Hughes09:Quickcheck,
  author    = {John Hughes},
  title     = {Software Testing with QuickCheck},
  booktitle = {Central European Functional Programming School - Third Summer School,
               {CEFP} 2009, Budapest, Hungary, May 21-23, 2009 and Kom{\'{a}}rno,
               Slovakia, May 25-30, 2009, Revised Selected Lectures},
  pages     = {183--223},
  year      = {2009},
  crossref  = {DBLP:conf/cefp/2009},
  url       = {http://dx.doi.org/10.1007/978-3-642-17685-2_6},
  doi       = {10.1007/978-3-642-17685-2_6},
  timestamp = {Mon, 13 Dec 2010 14:21:41 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/cefp/Hughes09},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Zhang15:FSE,
 author = {Zhang, Yucheng and Mesbah, Ali},
 title = {Assertions Are Strongly Correlated with Test Suite Effectiveness},
 booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
 year = {2015},
 isbn = {978-1-4503-3675-8},
 location = {Bergamo, Italy},
 pages = {214--224},
 numpages = {11},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test suite effectiveness, assertions, coverage},
}

@book{Buttazzo:2011:HRC,
 author = {Buttazzo, Giorgio C.},
 title = {Hard Real-Time Computing Systems: Predictable Scheduling Algorithms and Applications},
 year = {2011},
 isbn = {1461406757, 9781461406754},
 edition = {3rd},
 publisher = {Springer Publishing Company, Incorporated},
}

@misc{Karypis11:metis,
 author = {G. Karypis},
 title = {Metis 5.0: Unstructured graph partitioning and sparse matrix ordering system},
 institution = {Department of Computer Science, University of Minnesota},
 year = {2011},
 url = {http://glaros.dtc.umn.edu/gkhome/metis/metis/overview}
}

@misc{Karypis11:parmetis,
 author = {G. Karypis and K. Schloegel},
 title = {Parmetis 4.0: Parallel graph partitioning and sparse matrix ordering library},
 institution = {Department of Computer Science, University of Minnesota},
 year = {2011},
 url = {http://glaros.dtc.umn.edu/gkhome/metis/parmetis/overview}
}

@inproceedings{LaSalle13:mtmetis,
 author = {D. LaSalle and G. Karypis},
 title = {Multi-threaded graph partitioning},
 booktitle = {27th IEEE International Parallel and Distributed Processing Symposium},
 year = {2013}
}

@inproceedings{LaSalle15:mcmetis,
 author = {D. LaSalle and G. Karypis},
 title = {Efficient nested dissection for multicore architectures},
 booktitle = {Euro-Par 2015: Parallel Processing},
 publisher = {Springer},
 year = {2015},
 pages = {467–-478}
}

@inproceedings{LaSalle13:nerstrand,
 author = {D. LaSalle and G. Karypis},
 title = {Nerstrand: Fast multi-threaded graph clustering},
 booktitle = {Proc. of Supercomputing 2013},
 year = {2013}
}

@article{LaSalle15:nerstrand,
 author = {D. LaSalle and G. Karypis},
 title = {Multi-threaded modularity based graph clustering using the multilevel paradigm},
 journal = {Journal of Parallel and Distributed Computing},
 volume = {76},
 pages = {66-–80},
 year = {2015}
}

@inbook{Karypis11:metisandparmetis,
   author = {G. Karypis},
    title = {Metis and Parmetis},
    booktitle = {Encyclopedia of Parallel Computing},
    year = {2011},
    pages = {1117 -- 1124}
}

@misc{Miller15:quasi,
  title = {Formal Verification of Quasi-Synchronous Systems},
  author = {S. Miller and S. Bhattacharyya and C. Tinelli and S. Smolka and C. Sticksel and B. Meng and J. Yang},
  institution = {Air Force Research Laboratory},
  month = {July},
  year = {2015}
}

@article{req2code,
  title={From Requirements to Code: Model Based Development of A Medical Cyber Physical System},
  author={Anitha Murugesan and Mats P.E. Heimdahl  and  Michael W. Whalen and Sanjai Rayadurgam
 and  John Komp  and  Lian Duan  and  Baek-Gyu Kim  and Oleg Sokolsky and  Insup Lee },
  journal={Fourth International Symposium on Software Engineering in Healthcare workshop (SEHC 2014)},
  year={2014}
}
